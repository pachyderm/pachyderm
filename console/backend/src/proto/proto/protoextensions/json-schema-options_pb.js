// source: protoextensions/json-schema-options.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');
goog.object.extend(proto, google_protobuf_descriptor_pb);
goog.exportSymbol('proto.protoc.gen.jsonschema.EnumOptions', null, global);
goog.exportSymbol('proto.protoc.gen.jsonschema.FieldOptions', null, global);
goog.exportSymbol('proto.protoc.gen.jsonschema.FileOptions', null, global);
goog.exportSymbol('proto.protoc.gen.jsonschema.MessageOptions', null, global);
goog.exportSymbol('proto.protoc.gen.jsonschema.enumOptions', null, global);
goog.exportSymbol('proto.protoc.gen.jsonschema.fieldOptions', null, global);
goog.exportSymbol('proto.protoc.gen.jsonschema.fileOptions', null, global);
goog.exportSymbol('proto.protoc.gen.jsonschema.messageOptions', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoc.gen.jsonschema.FieldOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoc.gen.jsonschema.FieldOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protoc.gen.jsonschema.FieldOptions.displayName = 'proto.protoc.gen.jsonschema.FieldOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoc.gen.jsonschema.FileOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoc.gen.jsonschema.FileOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protoc.gen.jsonschema.FileOptions.displayName = 'proto.protoc.gen.jsonschema.FileOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoc.gen.jsonschema.MessageOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoc.gen.jsonschema.MessageOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protoc.gen.jsonschema.MessageOptions.displayName = 'proto.protoc.gen.jsonschema.MessageOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoc.gen.jsonschema.EnumOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoc.gen.jsonschema.EnumOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protoc.gen.jsonschema.EnumOptions.displayName = 'proto.protoc.gen.jsonschema.EnumOptions';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protoc.gen.jsonschema.FieldOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoc.gen.jsonschema.FieldOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoc.gen.jsonschema.FieldOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    ignore: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    required: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    minLength: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxLength: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pattern: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoc.gen.jsonschema.FieldOptions}
 */
proto.protoc.gen.jsonschema.FieldOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoc.gen.jsonschema.FieldOptions;
  return proto.protoc.gen.jsonschema.FieldOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoc.gen.jsonschema.FieldOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoc.gen.jsonschema.FieldOptions}
 */
proto.protoc.gen.jsonschema.FieldOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnore(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequired(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinLength(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxLength(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPattern(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoc.gen.jsonschema.FieldOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoc.gen.jsonschema.FieldOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoc.gen.jsonschema.FieldOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIgnore();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRequired();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMinLength();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMaxLength();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPattern();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool ignore = 1;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.getIgnore = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.FieldOptions} returns this
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.setIgnore = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool required = 2;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.getRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.FieldOptions} returns this
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.setRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 min_length = 3;
 * @return {number}
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.getMinLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protoc.gen.jsonschema.FieldOptions} returns this
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.setMinLength = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 max_length = 4;
 * @return {number}
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.getMaxLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protoc.gen.jsonschema.FieldOptions} returns this
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.setMaxLength = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string pattern = 5;
 * @return {string}
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.getPattern = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.protoc.gen.jsonschema.FieldOptions} returns this
 */
proto.protoc.gen.jsonschema.FieldOptions.prototype.setPattern = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoc.gen.jsonschema.FileOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protoc.gen.jsonschema.FileOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoc.gen.jsonschema.FileOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoc.gen.jsonschema.FileOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    ignore: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    extension: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoc.gen.jsonschema.FileOptions}
 */
proto.protoc.gen.jsonschema.FileOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoc.gen.jsonschema.FileOptions;
  return proto.protoc.gen.jsonschema.FileOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoc.gen.jsonschema.FileOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoc.gen.jsonschema.FileOptions}
 */
proto.protoc.gen.jsonschema.FileOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnore(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoc.gen.jsonschema.FileOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoc.gen.jsonschema.FileOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoc.gen.jsonschema.FileOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoc.gen.jsonschema.FileOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIgnore();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getExtension$();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool ignore = 1;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.FileOptions.prototype.getIgnore = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.FileOptions} returns this
 */
proto.protoc.gen.jsonschema.FileOptions.prototype.setIgnore = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string extension = 2;
 * @return {string}
 */
proto.protoc.gen.jsonschema.FileOptions.prototype.getExtension$ = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protoc.gen.jsonschema.FileOptions} returns this
 */
proto.protoc.gen.jsonschema.FileOptions.prototype.setExtension$ = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protoc.gen.jsonschema.MessageOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoc.gen.jsonschema.MessageOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoc.gen.jsonschema.MessageOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    ignore: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    allFieldsRequired: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    allowNullValues: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    disallowAdditionalProperties: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    enumsAsConstants: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoc.gen.jsonschema.MessageOptions}
 */
proto.protoc.gen.jsonschema.MessageOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoc.gen.jsonschema.MessageOptions;
  return proto.protoc.gen.jsonschema.MessageOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoc.gen.jsonschema.MessageOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoc.gen.jsonschema.MessageOptions}
 */
proto.protoc.gen.jsonschema.MessageOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnore(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllFieldsRequired(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowNullValues(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisallowAdditionalProperties(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnumsAsConstants(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoc.gen.jsonschema.MessageOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoc.gen.jsonschema.MessageOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoc.gen.jsonschema.MessageOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIgnore();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAllFieldsRequired();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getAllowNullValues();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getDisallowAdditionalProperties();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getEnumsAsConstants();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional bool ignore = 1;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.getIgnore = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.MessageOptions} returns this
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.setIgnore = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool all_fields_required = 2;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.getAllFieldsRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.MessageOptions} returns this
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.setAllFieldsRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool allow_null_values = 3;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.getAllowNullValues = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.MessageOptions} returns this
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.setAllowNullValues = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool disallow_additional_properties = 4;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.getDisallowAdditionalProperties = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.MessageOptions} returns this
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.setDisallowAdditionalProperties = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool enums_as_constants = 5;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.getEnumsAsConstants = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.MessageOptions} returns this
 */
proto.protoc.gen.jsonschema.MessageOptions.prototype.setEnumsAsConstants = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoc.gen.jsonschema.EnumOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protoc.gen.jsonschema.EnumOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoc.gen.jsonschema.EnumOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoc.gen.jsonschema.EnumOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    enumsAsConstants: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    enumsAsStringsOnly: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    enumsTrimPrefix: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    ignore: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoc.gen.jsonschema.EnumOptions}
 */
proto.protoc.gen.jsonschema.EnumOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoc.gen.jsonschema.EnumOptions;
  return proto.protoc.gen.jsonschema.EnumOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoc.gen.jsonschema.EnumOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoc.gen.jsonschema.EnumOptions}
 */
proto.protoc.gen.jsonschema.EnumOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnumsAsConstants(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnumsAsStringsOnly(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnumsTrimPrefix(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoc.gen.jsonschema.EnumOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoc.gen.jsonschema.EnumOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoc.gen.jsonschema.EnumOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoc.gen.jsonschema.EnumOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnumsAsConstants();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getEnumsAsStringsOnly();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getEnumsTrimPrefix();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIgnore();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bool enums_as_constants = 1;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.EnumOptions.prototype.getEnumsAsConstants = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.EnumOptions} returns this
 */
proto.protoc.gen.jsonschema.EnumOptions.prototype.setEnumsAsConstants = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool enums_as_strings_only = 2;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.EnumOptions.prototype.getEnumsAsStringsOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.EnumOptions} returns this
 */
proto.protoc.gen.jsonschema.EnumOptions.prototype.setEnumsAsStringsOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool enums_trim_prefix = 3;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.EnumOptions.prototype.getEnumsTrimPrefix = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.EnumOptions} returns this
 */
proto.protoc.gen.jsonschema.EnumOptions.prototype.setEnumsTrimPrefix = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool ignore = 4;
 * @return {boolean}
 */
proto.protoc.gen.jsonschema.EnumOptions.prototype.getIgnore = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protoc.gen.jsonschema.EnumOptions} returns this
 */
proto.protoc.gen.jsonschema.EnumOptions.prototype.setIgnore = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `fieldOptions`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protoc.gen.jsonschema.FieldOptions>}
 */
proto.protoc.gen.jsonschema.fieldOptions = new jspb.ExtensionFieldInfo(
    1125,
    {fieldOptions: 0},
    proto.protoc.gen.jsonschema.FieldOptions,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protoc.gen.jsonschema.FieldOptions.toObject),
    0);

google_protobuf_descriptor_pb.FieldOptions.extensionsBinary[1125] = new jspb.ExtensionFieldBinaryInfo(
    proto.protoc.gen.jsonschema.fieldOptions,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protoc.gen.jsonschema.FieldOptions.serializeBinaryToWriter,
    proto.protoc.gen.jsonschema.FieldOptions.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.FieldOptions.extensions[1125] = proto.protoc.gen.jsonschema.fieldOptions;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `fileOptions`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protoc.gen.jsonschema.FileOptions>}
 */
proto.protoc.gen.jsonschema.fileOptions = new jspb.ExtensionFieldInfo(
    1126,
    {fileOptions: 0},
    proto.protoc.gen.jsonschema.FileOptions,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protoc.gen.jsonschema.FileOptions.toObject),
    0);

google_protobuf_descriptor_pb.FileOptions.extensionsBinary[1126] = new jspb.ExtensionFieldBinaryInfo(
    proto.protoc.gen.jsonschema.fileOptions,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protoc.gen.jsonschema.FileOptions.serializeBinaryToWriter,
    proto.protoc.gen.jsonschema.FileOptions.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.FileOptions.extensions[1126] = proto.protoc.gen.jsonschema.fileOptions;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messageOptions`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protoc.gen.jsonschema.MessageOptions>}
 */
proto.protoc.gen.jsonschema.messageOptions = new jspb.ExtensionFieldInfo(
    1127,
    {messageOptions: 0},
    proto.protoc.gen.jsonschema.MessageOptions,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protoc.gen.jsonschema.MessageOptions.toObject),
    0);

google_protobuf_descriptor_pb.MessageOptions.extensionsBinary[1127] = new jspb.ExtensionFieldBinaryInfo(
    proto.protoc.gen.jsonschema.messageOptions,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protoc.gen.jsonschema.MessageOptions.serializeBinaryToWriter,
    proto.protoc.gen.jsonschema.MessageOptions.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.MessageOptions.extensions[1127] = proto.protoc.gen.jsonschema.messageOptions;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `enumOptions`.
 * @type {!jspb.ExtensionFieldInfo<!proto.protoc.gen.jsonschema.EnumOptions>}
 */
proto.protoc.gen.jsonschema.enumOptions = new jspb.ExtensionFieldInfo(
    1128,
    {enumOptions: 0},
    proto.protoc.gen.jsonschema.EnumOptions,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.protoc.gen.jsonschema.EnumOptions.toObject),
    0);

google_protobuf_descriptor_pb.EnumOptions.extensionsBinary[1128] = new jspb.ExtensionFieldBinaryInfo(
    proto.protoc.gen.jsonschema.enumOptions,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.protoc.gen.jsonschema.EnumOptions.serializeBinaryToWriter,
    proto.protoc.gen.jsonschema.EnumOptions.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.EnumOptions.extensions[1128] = proto.protoc.gen.jsonschema.enumOptions;

goog.object.extend(exports, proto.protoc.gen.jsonschema);
