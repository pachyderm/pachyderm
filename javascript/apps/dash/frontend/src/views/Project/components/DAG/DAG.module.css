.base {
  box-shadow: 0 1px 2px 0 var(--border-grey);
  border-radius: 3px;
  font-size: var(--font-size-body-medium);
  margin-bottom: 1.25rem;
}
.base.draggable:hover {
  cursor: grab;
}

.base.draggable:active {
  cursor: grabbing;
}

.base :global .node {
  overflow: initial;
}

.base :global .node .label {
  border-radius: 2px;
  box-shadow: 0 1px 2px 0 var(--border-grey);
  background-color: white;
  fill: var(--white);
}
  
.base :global .nodeGroup.draggable:hover{
  cursor: grab;
}
  
.base :global .nodeGroup.idle.draggable:hover .node .label, .base :global .nodeGroup.selected.idle .node .label {
  background-color: var(--background-blue);
}

.base :global .nodeGroup.error.draggable:hover .node .label, .base :global .nodeGroup.selected.error .node .label {
  background-color: var(--background-pink);
}

.base :global .nodeGroup.busy.draggable:hover, .base :global .nodeGroup.selected.busy {
  opacity: 0.5;
}
  
.base :global .nodeGroup.draggable:active{
  cursor: grabbing;
}

.base :global .pipeline {
  pointer-events: none;
}

.base :global .label {
  font-size: 10.var(--font-size-body-small);;
  font-weight: 600;
  text-align: center;
  user-select: none;
  line-height: 1rem;
  overflow: hidden;
  pointer-events: none;
  padding: 0.5rem;
  padding-top: 1.5rem;
  fill: var(--pachyderm-black);
  overflow-wrap: break-word;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

.base :global .link {
  stroke: var(--pachyderm-black);
  stroke-width: 1.5px;
  marker-end: url(#end-arrow);
}

.base :global .link:hover {
  cursor: pointer;
}

.base :global .link.transferring, .base :global .link.selected{
  stroke: var(--pachyderm-green);
  stroke-width: 2px;
  marker-end: url(#end-arrow-active);
}

.base :global .link.errorTarget.selected, .base :global .link.errorSource.selected {
  stroke: var(--error-red);
  stroke-width: 2px;
  marker-end: url(#end-arrow-error);
}

.base :global .link.errorSource, .base :global .link.busySource {
  stroke-dasharray: 0.25rem;
}

.base :global .circle {
  fill: var(--success-green)
}
