syntax = "proto3";

package admin_v2;
option go_package = "github.com/pachyderm/pachyderm/v2/src/admin";

import "version/versionpb/version.proto";
import "pfs/pfs.proto";

message ClusterInfo {
  string id = 1;
  string deployment_id = 2;
  // True if the server is capable of generating warnings.
  bool warnings_ok = 3;
  // Warnings about the client configuration.
  repeated string warnings = 4;
  // The configured public URL of Pachyderm.
  string proxy_host = 5;
  // True if Pachyderm is served over TLS (HTTPS).
  bool proxy_tls = 6;
  // True if this pachd is in "paused" mode.
  bool paused = 7;
}

message InspectClusterRequest {
  versionpb_v2.Version client_version = 1;
  // If CurrentProject is set, then InspectCluster will return an error if the
  // project does not exist.
  pfs_v2.Project current_project = 2;
}

service API {
  rpc InspectCluster(InspectClusterRequest) returns (ClusterInfo) {}
}
