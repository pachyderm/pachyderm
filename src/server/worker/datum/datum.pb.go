// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.11.4
// source: server/worker/datum/datum.proto

package datum

import (
	pfs "github.com/pachyderm/pachyderm/v2/src/pfs"
	pps "github.com/pachyderm/pachyderm/v2/src/pps"
	common "github.com/pachyderm/pachyderm/v2/src/server/worker/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State int32

const (
	State_PROCESSED State = 0
	State_FAILED    State = 1
	State_RECOVERED State = 2
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "PROCESSED",
		1: "FAILED",
		2: "RECOVERED",
	}
	State_value = map[string]int32{
		"PROCESSED": 0,
		"FAILED":    1,
		"RECOVERED": 2,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_server_worker_datum_datum_proto_enumTypes[0].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_server_worker_datum_datum_proto_enumTypes[0]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{0}
}

type KeyTask_Type int32

const (
	KeyTask_JOIN  KeyTask_Type = 0
	KeyTask_GROUP KeyTask_Type = 1
)

// Enum value maps for KeyTask_Type.
var (
	KeyTask_Type_name = map[int32]string{
		0: "JOIN",
		1: "GROUP",
	}
	KeyTask_Type_value = map[string]int32{
		"JOIN":  0,
		"GROUP": 1,
	}
)

func (x KeyTask_Type) Enum() *KeyTask_Type {
	p := new(KeyTask_Type)
	*p = x
	return p
}

func (x KeyTask_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyTask_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_server_worker_datum_datum_proto_enumTypes[1].Descriptor()
}

func (KeyTask_Type) Type() protoreflect.EnumType {
	return &file_server_worker_datum_datum_proto_enumTypes[1]
}

func (x KeyTask_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyTask_Type.Descriptor instead.
func (KeyTask_Type) EnumDescriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{6, 0}
}

type MergeTask_Type int32

const (
	MergeTask_JOIN  MergeTask_Type = 0
	MergeTask_GROUP MergeTask_Type = 1
)

// Enum value maps for MergeTask_Type.
var (
	MergeTask_Type_name = map[int32]string{
		0: "JOIN",
		1: "GROUP",
	}
	MergeTask_Type_value = map[string]int32{
		"JOIN":  0,
		"GROUP": 1,
	}
)

func (x MergeTask_Type) Enum() *MergeTask_Type {
	p := new(MergeTask_Type)
	*p = x
	return p
}

func (x MergeTask_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MergeTask_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_server_worker_datum_datum_proto_enumTypes[2].Descriptor()
}

func (MergeTask_Type) Type() protoreflect.EnumType {
	return &file_server_worker_datum_datum_proto_enumTypes[2]
}

func (x MergeTask_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MergeTask_Type.Descriptor instead.
func (MergeTask_Type) EnumDescriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{8, 0}
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job     *pps.Job          `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Inputs  []*common.Input   `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Hash    string            `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	State   State             `protobuf:"varint,4,opt,name=state,proto3,enum=datum.State" json:"state,omitempty"`
	Reason  string            `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	Stats   *pps.ProcessStats `protobuf:"bytes,6,opt,name=stats,proto3" json:"stats,omitempty"`
	Index   int64             `protobuf:"varint,7,opt,name=index,proto3" json:"index,omitempty"`
	ImageId string            `protobuf:"bytes,8,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{0}
}

func (x *Meta) GetJob() *pps.Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *Meta) GetInputs() []*common.Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Meta) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Meta) GetState() State {
	if x != nil {
		return x.State
	}
	return State_PROCESSED
}

func (x *Meta) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Meta) GetStats() *pps.ProcessStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Meta) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Meta) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessStats *pps.ProcessStats `protobuf:"bytes,1,opt,name=process_stats,json=processStats,proto3" json:"process_stats,omitempty"`
	Processed    int64             `protobuf:"varint,2,opt,name=processed,proto3" json:"processed,omitempty"`
	Skipped      int64             `protobuf:"varint,3,opt,name=skipped,proto3" json:"skipped,omitempty"`
	Total        int64             `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Failed       int64             `protobuf:"varint,5,opt,name=failed,proto3" json:"failed,omitempty"`
	Recovered    int64             `protobuf:"varint,6,opt,name=recovered,proto3" json:"recovered,omitempty"`
	FailedId     string            `protobuf:"bytes,7,opt,name=failed_id,json=failedId,proto3" json:"failed_id,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{1}
}

func (x *Stats) GetProcessStats() *pps.ProcessStats {
	if x != nil {
		return x.ProcessStats
	}
	return nil
}

func (x *Stats) GetProcessed() int64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *Stats) GetSkipped() int64 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *Stats) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Stats) GetFailed() int64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *Stats) GetRecovered() int64 {
	if x != nil {
		return x.Recovered
	}
	return 0
}

func (x *Stats) GetFailedId() string {
	if x != nil {
		return x.FailedId
	}
	return ""
}

type PFSTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input     *pps.PFSInput  `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	PathRange *pfs.PathRange `protobuf:"bytes,2,opt,name=path_range,json=pathRange,proto3" json:"path_range,omitempty"`
	BaseIndex int64          `protobuf:"varint,3,opt,name=base_index,json=baseIndex,proto3" json:"base_index,omitempty"`
	AuthToken string         `protobuf:"bytes,4,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
}

func (x *PFSTask) Reset() {
	*x = PFSTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PFSTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PFSTask) ProtoMessage() {}

func (x *PFSTask) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PFSTask.ProtoReflect.Descriptor instead.
func (*PFSTask) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{2}
}

func (x *PFSTask) GetInput() *pps.PFSInput {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *PFSTask) GetPathRange() *pfs.PathRange {
	if x != nil {
		return x.PathRange
	}
	return nil
}

func (x *PFSTask) GetBaseIndex() int64 {
	if x != nil {
		return x.BaseIndex
	}
	return 0
}

func (x *PFSTask) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

type PFSTaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSetId string `protobuf:"bytes,1,opt,name=file_set_id,json=fileSetId,proto3" json:"file_set_id,omitempty"`
}

func (x *PFSTaskResult) Reset() {
	*x = PFSTaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PFSTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PFSTaskResult) ProtoMessage() {}

func (x *PFSTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PFSTaskResult.ProtoReflect.Descriptor instead.
func (*PFSTaskResult) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{3}
}

func (x *PFSTaskResult) GetFileSetId() string {
	if x != nil {
		return x.FileSetId
	}
	return ""
}

type CrossTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSetIds           []string       `protobuf:"bytes,1,rep,name=file_set_ids,json=fileSetIds,proto3" json:"file_set_ids,omitempty"`
	BaseFileSetIndex     int64          `protobuf:"varint,2,opt,name=base_file_set_index,json=baseFileSetIndex,proto3" json:"base_file_set_index,omitempty"`
	BaseFileSetPathRange *pfs.PathRange `protobuf:"bytes,3,opt,name=base_file_set_path_range,json=baseFileSetPathRange,proto3" json:"base_file_set_path_range,omitempty"`
	BaseIndex            int64          `protobuf:"varint,4,opt,name=base_index,json=baseIndex,proto3" json:"base_index,omitempty"`
	AuthToken            string         `protobuf:"bytes,5,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
}

func (x *CrossTask) Reset() {
	*x = CrossTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossTask) ProtoMessage() {}

func (x *CrossTask) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossTask.ProtoReflect.Descriptor instead.
func (*CrossTask) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{4}
}

func (x *CrossTask) GetFileSetIds() []string {
	if x != nil {
		return x.FileSetIds
	}
	return nil
}

func (x *CrossTask) GetBaseFileSetIndex() int64 {
	if x != nil {
		return x.BaseFileSetIndex
	}
	return 0
}

func (x *CrossTask) GetBaseFileSetPathRange() *pfs.PathRange {
	if x != nil {
		return x.BaseFileSetPathRange
	}
	return nil
}

func (x *CrossTask) GetBaseIndex() int64 {
	if x != nil {
		return x.BaseIndex
	}
	return 0
}

func (x *CrossTask) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

type CrossTaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSetId string `protobuf:"bytes,1,opt,name=file_set_id,json=fileSetId,proto3" json:"file_set_id,omitempty"`
}

func (x *CrossTaskResult) Reset() {
	*x = CrossTaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossTaskResult) ProtoMessage() {}

func (x *CrossTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossTaskResult.ProtoReflect.Descriptor instead.
func (*CrossTaskResult) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{5}
}

func (x *CrossTaskResult) GetFileSetId() string {
	if x != nil {
		return x.FileSetId
	}
	return ""
}

type KeyTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSetId string         `protobuf:"bytes,1,opt,name=file_set_id,json=fileSetId,proto3" json:"file_set_id,omitempty"`
	PathRange *pfs.PathRange `protobuf:"bytes,2,opt,name=path_range,json=pathRange,proto3" json:"path_range,omitempty"`
	Type      KeyTask_Type   `protobuf:"varint,3,opt,name=type,proto3,enum=datum.KeyTask_Type" json:"type,omitempty"`
	AuthToken string         `protobuf:"bytes,4,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
}

func (x *KeyTask) Reset() {
	*x = KeyTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyTask) ProtoMessage() {}

func (x *KeyTask) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyTask.ProtoReflect.Descriptor instead.
func (*KeyTask) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{6}
}

func (x *KeyTask) GetFileSetId() string {
	if x != nil {
		return x.FileSetId
	}
	return ""
}

func (x *KeyTask) GetPathRange() *pfs.PathRange {
	if x != nil {
		return x.PathRange
	}
	return nil
}

func (x *KeyTask) GetType() KeyTask_Type {
	if x != nil {
		return x.Type
	}
	return KeyTask_JOIN
}

func (x *KeyTask) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

type KeyTaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSetId string `protobuf:"bytes,1,opt,name=file_set_id,json=fileSetId,proto3" json:"file_set_id,omitempty"`
}

func (x *KeyTaskResult) Reset() {
	*x = KeyTaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyTaskResult) ProtoMessage() {}

func (x *KeyTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyTaskResult.ProtoReflect.Descriptor instead.
func (*KeyTaskResult) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{7}
}

func (x *KeyTaskResult) GetFileSetId() string {
	if x != nil {
		return x.FileSetId
	}
	return ""
}

type MergeTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSetIds []string       `protobuf:"bytes,1,rep,name=file_set_ids,json=fileSetIds,proto3" json:"file_set_ids,omitempty"`
	PathRange  *pfs.PathRange `protobuf:"bytes,2,opt,name=path_range,json=pathRange,proto3" json:"path_range,omitempty"`
	Type       MergeTask_Type `protobuf:"varint,3,opt,name=type,proto3,enum=datum.MergeTask_Type" json:"type,omitempty"`
	AuthToken  string         `protobuf:"bytes,4,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
}

func (x *MergeTask) Reset() {
	*x = MergeTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeTask) ProtoMessage() {}

func (x *MergeTask) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeTask.ProtoReflect.Descriptor instead.
func (*MergeTask) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{8}
}

func (x *MergeTask) GetFileSetIds() []string {
	if x != nil {
		return x.FileSetIds
	}
	return nil
}

func (x *MergeTask) GetPathRange() *pfs.PathRange {
	if x != nil {
		return x.PathRange
	}
	return nil
}

func (x *MergeTask) GetType() MergeTask_Type {
	if x != nil {
		return x.Type
	}
	return MergeTask_JOIN
}

func (x *MergeTask) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

type MergeTaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSetId string `protobuf:"bytes,1,opt,name=file_set_id,json=fileSetId,proto3" json:"file_set_id,omitempty"`
}

func (x *MergeTaskResult) Reset() {
	*x = MergeTaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeTaskResult) ProtoMessage() {}

func (x *MergeTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeTaskResult.ProtoReflect.Descriptor instead.
func (*MergeTaskResult) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{9}
}

func (x *MergeTaskResult) GetFileSetId() string {
	if x != nil {
		return x.FileSetId
	}
	return ""
}

type ComposeTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSetIds []string `protobuf:"bytes,1,rep,name=file_set_ids,json=fileSetIds,proto3" json:"file_set_ids,omitempty"`
	AuthToken  string   `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
}

func (x *ComposeTask) Reset() {
	*x = ComposeTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComposeTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeTask) ProtoMessage() {}

func (x *ComposeTask) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeTask.ProtoReflect.Descriptor instead.
func (*ComposeTask) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{10}
}

func (x *ComposeTask) GetFileSetIds() []string {
	if x != nil {
		return x.FileSetIds
	}
	return nil
}

func (x *ComposeTask) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

type ComposeTaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSetId string `protobuf:"bytes,1,opt,name=file_set_id,json=fileSetId,proto3" json:"file_set_id,omitempty"`
}

func (x *ComposeTaskResult) Reset() {
	*x = ComposeTaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComposeTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComposeTaskResult) ProtoMessage() {}

func (x *ComposeTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComposeTaskResult.ProtoReflect.Descriptor instead.
func (*ComposeTaskResult) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{11}
}

func (x *ComposeTaskResult) GetFileSetId() string {
	if x != nil {
		return x.FileSetId
	}
	return ""
}

type SetSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number    int64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	SizeBytes int64 `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
}

func (x *SetSpec) Reset() {
	*x = SetSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_worker_datum_datum_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpec) ProtoMessage() {}

func (x *SetSpec) ProtoReflect() protoreflect.Message {
	mi := &file_server_worker_datum_datum_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpec.ProtoReflect.Descriptor instead.
func (*SetSpec) Descriptor() ([]byte, []int) {
	return file_server_worker_datum_datum_proto_rawDescGZIP(), []int{12}
}

func (x *SetSpec) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *SetSpec) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

var File_server_worker_datum_datum_proto protoreflect.FileDescriptor

var file_server_worker_datum_datum_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f,
	0x64, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x1a, 0x0d, 0x70, 0x66, 0x73, 0x2f, 0x70, 0x66,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x70, 0x73, 0x2f, 0x70, 0x70, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x01, 0x0a, 0x04, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x70, 0x73, 0x5f, 0x76, 0x32, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f,
	0x62, 0x12, 0x25, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x64, 0x61,
	0x74, 0x75, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x70, 0x73, 0x5f, 0x76, 0x32,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x39, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x70, 0x73, 0x5f, 0x76, 0x32, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x70,
	0x70, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x07,
	0x50, 0x46, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x70, 0x73, 0x5f, 0x76, 0x32, 0x2e,
	0x50, 0x46, 0x53, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x30, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x66, 0x73, 0x5f, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x70, 0x61, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x2f, 0x0a, 0x0d, 0x50, 0x46, 0x53, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64,
	0x22, 0xe5, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x20,
	0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x73,
	0x12, 0x2d, 0x0a, 0x13, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x62,
	0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x49, 0x0a, 0x18, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x66, 0x73, 0x5f, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x14, 0x62, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x31, 0x0a, 0x0f, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x07,
	0x4b, 0x65, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x66,
	0x73, 0x5f, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09,
	0x70, 0x61, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e,
	0x4b, 0x65, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x1b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x4f, 0x49,
	0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x01, 0x22, 0x2f,
	0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1e, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x22,
	0xc6, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x20, 0x0a,
	0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12,
	0x30, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x66, 0x73, 0x5f, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x70, 0x61, 0x74, 0x68, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1b, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x01, 0x22, 0x31, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x0b, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x33, 0x0a, 0x11, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x40, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x2a, 0x31, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x50,
	0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45,
	0x52, 0x45, 0x44, 0x10, 0x02, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x63, 0x68, 0x79, 0x64, 0x65, 0x72, 0x6d, 0x2f, 0x70, 0x61,
	0x63, 0x68, 0x79, 0x64, 0x65, 0x72, 0x6d, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2f, 0x64, 0x61, 0x74,
	0x75, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_worker_datum_datum_proto_rawDescOnce sync.Once
	file_server_worker_datum_datum_proto_rawDescData = file_server_worker_datum_datum_proto_rawDesc
)

func file_server_worker_datum_datum_proto_rawDescGZIP() []byte {
	file_server_worker_datum_datum_proto_rawDescOnce.Do(func() {
		file_server_worker_datum_datum_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_worker_datum_datum_proto_rawDescData)
	})
	return file_server_worker_datum_datum_proto_rawDescData
}

var file_server_worker_datum_datum_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_server_worker_datum_datum_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_server_worker_datum_datum_proto_goTypes = []interface{}{
	(State)(0),                // 0: datum.State
	(KeyTask_Type)(0),         // 1: datum.KeyTask.Type
	(MergeTask_Type)(0),       // 2: datum.MergeTask.Type
	(*Meta)(nil),              // 3: datum.Meta
	(*Stats)(nil),             // 4: datum.Stats
	(*PFSTask)(nil),           // 5: datum.PFSTask
	(*PFSTaskResult)(nil),     // 6: datum.PFSTaskResult
	(*CrossTask)(nil),         // 7: datum.CrossTask
	(*CrossTaskResult)(nil),   // 8: datum.CrossTaskResult
	(*KeyTask)(nil),           // 9: datum.KeyTask
	(*KeyTaskResult)(nil),     // 10: datum.KeyTaskResult
	(*MergeTask)(nil),         // 11: datum.MergeTask
	(*MergeTaskResult)(nil),   // 12: datum.MergeTaskResult
	(*ComposeTask)(nil),       // 13: datum.ComposeTask
	(*ComposeTaskResult)(nil), // 14: datum.ComposeTaskResult
	(*SetSpec)(nil),           // 15: datum.SetSpec
	(*pps.Job)(nil),           // 16: pps_v2.Job
	(*common.Input)(nil),      // 17: common.Input
	(*pps.ProcessStats)(nil),  // 18: pps_v2.ProcessStats
	(*pps.PFSInput)(nil),      // 19: pps_v2.PFSInput
	(*pfs.PathRange)(nil),     // 20: pfs_v2.PathRange
}
var file_server_worker_datum_datum_proto_depIdxs = []int32{
	16, // 0: datum.Meta.job:type_name -> pps_v2.Job
	17, // 1: datum.Meta.inputs:type_name -> common.Input
	0,  // 2: datum.Meta.state:type_name -> datum.State
	18, // 3: datum.Meta.stats:type_name -> pps_v2.ProcessStats
	18, // 4: datum.Stats.process_stats:type_name -> pps_v2.ProcessStats
	19, // 5: datum.PFSTask.input:type_name -> pps_v2.PFSInput
	20, // 6: datum.PFSTask.path_range:type_name -> pfs_v2.PathRange
	20, // 7: datum.CrossTask.base_file_set_path_range:type_name -> pfs_v2.PathRange
	20, // 8: datum.KeyTask.path_range:type_name -> pfs_v2.PathRange
	1,  // 9: datum.KeyTask.type:type_name -> datum.KeyTask.Type
	20, // 10: datum.MergeTask.path_range:type_name -> pfs_v2.PathRange
	2,  // 11: datum.MergeTask.type:type_name -> datum.MergeTask.Type
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_server_worker_datum_datum_proto_init() }
func file_server_worker_datum_datum_proto_init() {
	if File_server_worker_datum_datum_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_worker_datum_datum_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PFSTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PFSTaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossTaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyTaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeTaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComposeTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComposeTaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_worker_datum_datum_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_worker_datum_datum_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_worker_datum_datum_proto_goTypes,
		DependencyIndexes: file_server_worker_datum_datum_proto_depIdxs,
		EnumInfos:         file_server_worker_datum_datum_proto_enumTypes,
		MessageInfos:      file_server_worker_datum_datum_proto_msgTypes,
	}.Build()
	File_server_worker_datum_datum_proto = out.File
	file_server_worker_datum_datum_proto_rawDesc = nil
	file_server_worker_datum_datum_proto_goTypes = nil
	file_server_worker_datum_datum_proto_depIdxs = nil
}
