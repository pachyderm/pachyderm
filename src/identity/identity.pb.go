// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: identity/identity.proto

package identity

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// User represents an IDP user that has authenticated via OIDC
type User struct {
	Email                string     `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	LastAuthenticated    *time.Time `protobuf:"bytes,2,opt,name=last_authenticated,json=lastAuthenticated,proto3,stdtime" json:"last_authenticated,omitempty" db:"last_authenticated"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return m.Size()
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetLastAuthenticated() *time.Time {
	if m != nil {
		return m.LastAuthenticated
	}
	return nil
}

// IdentityServerConfig is the configuration for the identity web server.
// When the configuration is changed the web server is reloaded automatically.
type IdentityServerConfig struct {
	Issuer               string   `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	IdTokenExpiry        string   `protobuf:"bytes,2,opt,name=id_token_expiry,json=idTokenExpiry,proto3" json:"id_token_expiry,omitempty" db:"id_token_expiry"`
	RotationTokenExpiry  string   `protobuf:"bytes,3,opt,name=rotation_token_expiry,json=rotationTokenExpiry,proto3" json:"rotation_token_expiry,omitempty" db:"rotation_token_expiry"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentityServerConfig) Reset()         { *m = IdentityServerConfig{} }
func (m *IdentityServerConfig) String() string { return proto.CompactTextString(m) }
func (*IdentityServerConfig) ProtoMessage()    {}
func (*IdentityServerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{1}
}
func (m *IdentityServerConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IdentityServerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IdentityServerConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IdentityServerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentityServerConfig.Merge(m, src)
}
func (m *IdentityServerConfig) XXX_Size() int {
	return m.Size()
}
func (m *IdentityServerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentityServerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_IdentityServerConfig proto.InternalMessageInfo

func (m *IdentityServerConfig) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *IdentityServerConfig) GetIdTokenExpiry() string {
	if m != nil {
		return m.IdTokenExpiry
	}
	return ""
}

func (m *IdentityServerConfig) GetRotationTokenExpiry() string {
	if m != nil {
		return m.RotationTokenExpiry
	}
	return ""
}

type SetIdentityServerConfigRequest struct {
	Config               *IdentityServerConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SetIdentityServerConfigRequest) Reset()         { *m = SetIdentityServerConfigRequest{} }
func (m *SetIdentityServerConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetIdentityServerConfigRequest) ProtoMessage()    {}
func (*SetIdentityServerConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{2}
}
func (m *SetIdentityServerConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetIdentityServerConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetIdentityServerConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetIdentityServerConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetIdentityServerConfigRequest.Merge(m, src)
}
func (m *SetIdentityServerConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *SetIdentityServerConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetIdentityServerConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetIdentityServerConfigRequest proto.InternalMessageInfo

func (m *SetIdentityServerConfigRequest) GetConfig() *IdentityServerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetIdentityServerConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetIdentityServerConfigResponse) Reset()         { *m = SetIdentityServerConfigResponse{} }
func (m *SetIdentityServerConfigResponse) String() string { return proto.CompactTextString(m) }
func (*SetIdentityServerConfigResponse) ProtoMessage()    {}
func (*SetIdentityServerConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{3}
}
func (m *SetIdentityServerConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetIdentityServerConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetIdentityServerConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetIdentityServerConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetIdentityServerConfigResponse.Merge(m, src)
}
func (m *SetIdentityServerConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *SetIdentityServerConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetIdentityServerConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetIdentityServerConfigResponse proto.InternalMessageInfo

type GetIdentityServerConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIdentityServerConfigRequest) Reset()         { *m = GetIdentityServerConfigRequest{} }
func (m *GetIdentityServerConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetIdentityServerConfigRequest) ProtoMessage()    {}
func (*GetIdentityServerConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{4}
}
func (m *GetIdentityServerConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetIdentityServerConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetIdentityServerConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetIdentityServerConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIdentityServerConfigRequest.Merge(m, src)
}
func (m *GetIdentityServerConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetIdentityServerConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIdentityServerConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIdentityServerConfigRequest proto.InternalMessageInfo

type GetIdentityServerConfigResponse struct {
	Config               *IdentityServerConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetIdentityServerConfigResponse) Reset()         { *m = GetIdentityServerConfigResponse{} }
func (m *GetIdentityServerConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetIdentityServerConfigResponse) ProtoMessage()    {}
func (*GetIdentityServerConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{5}
}
func (m *GetIdentityServerConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetIdentityServerConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetIdentityServerConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetIdentityServerConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIdentityServerConfigResponse.Merge(m, src)
}
func (m *GetIdentityServerConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetIdentityServerConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIdentityServerConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIdentityServerConfigResponse proto.InternalMessageInfo

func (m *GetIdentityServerConfigResponse) GetConfig() *IdentityServerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// IDPConnector represents a connection to an identity provider
type IDPConnector struct {
	// ID is the unique identifier for this connector.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name is the human-readable identifier for this connector,
	// which will be shown to end users when they're authenticating.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Type is the type of the IDP ex. `saml`, `oidc`, `github`.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// ConfigVersion must be incremented every time a connector is
	// updated, to avoid concurrent updates conflicting.
	ConfigVersion int64 `protobuf:"varint,4,opt,name=configVersion,proto3" json:"configVersion,omitempty"`
	// This is left for backwards compatibility, but we want users to use the config defined below.
	JsonConfig string `protobuf:"bytes,5,opt,name=jsonConfig,proto3" json:"jsonConfig,omitempty"`
	// Config is the configuration for the upstream IDP, which varies based on the type.
	// We make the assumption that this is either yaml or JSON.
	Config               *types.Struct `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *IDPConnector) Reset()         { *m = IDPConnector{} }
func (m *IDPConnector) String() string { return proto.CompactTextString(m) }
func (*IDPConnector) ProtoMessage()    {}
func (*IDPConnector) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{6}
}
func (m *IDPConnector) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IDPConnector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_IDPConnector.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *IDPConnector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDPConnector.Merge(m, src)
}
func (m *IDPConnector) XXX_Size() int {
	return m.Size()
}
func (m *IDPConnector) XXX_DiscardUnknown() {
	xxx_messageInfo_IDPConnector.DiscardUnknown(m)
}

var xxx_messageInfo_IDPConnector proto.InternalMessageInfo

func (m *IDPConnector) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IDPConnector) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IDPConnector) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *IDPConnector) GetConfigVersion() int64 {
	if m != nil {
		return m.ConfigVersion
	}
	return 0
}

func (m *IDPConnector) GetJsonConfig() string {
	if m != nil {
		return m.JsonConfig
	}
	return ""
}

func (m *IDPConnector) GetConfig() *types.Struct {
	if m != nil {
		return m.Config
	}
	return nil
}

type CreateIDPConnectorRequest struct {
	Connector            *IDPConnector `protobuf:"bytes,1,opt,name=connector,proto3" json:"connector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateIDPConnectorRequest) Reset()         { *m = CreateIDPConnectorRequest{} }
func (m *CreateIDPConnectorRequest) String() string { return proto.CompactTextString(m) }
func (*CreateIDPConnectorRequest) ProtoMessage()    {}
func (*CreateIDPConnectorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{7}
}
func (m *CreateIDPConnectorRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateIDPConnectorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateIDPConnectorRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateIDPConnectorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIDPConnectorRequest.Merge(m, src)
}
func (m *CreateIDPConnectorRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateIDPConnectorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIDPConnectorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIDPConnectorRequest proto.InternalMessageInfo

func (m *CreateIDPConnectorRequest) GetConnector() *IDPConnector {
	if m != nil {
		return m.Connector
	}
	return nil
}

type CreateIDPConnectorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateIDPConnectorResponse) Reset()         { *m = CreateIDPConnectorResponse{} }
func (m *CreateIDPConnectorResponse) String() string { return proto.CompactTextString(m) }
func (*CreateIDPConnectorResponse) ProtoMessage()    {}
func (*CreateIDPConnectorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{8}
}
func (m *CreateIDPConnectorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateIDPConnectorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateIDPConnectorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateIDPConnectorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIDPConnectorResponse.Merge(m, src)
}
func (m *CreateIDPConnectorResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateIDPConnectorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIDPConnectorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIDPConnectorResponse proto.InternalMessageInfo

type UpdateIDPConnectorRequest struct {
	Connector            *IDPConnector `protobuf:"bytes,1,opt,name=connector,proto3" json:"connector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateIDPConnectorRequest) Reset()         { *m = UpdateIDPConnectorRequest{} }
func (m *UpdateIDPConnectorRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateIDPConnectorRequest) ProtoMessage()    {}
func (*UpdateIDPConnectorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{9}
}
func (m *UpdateIDPConnectorRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateIDPConnectorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateIDPConnectorRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateIDPConnectorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIDPConnectorRequest.Merge(m, src)
}
func (m *UpdateIDPConnectorRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateIDPConnectorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIDPConnectorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIDPConnectorRequest proto.InternalMessageInfo

func (m *UpdateIDPConnectorRequest) GetConnector() *IDPConnector {
	if m != nil {
		return m.Connector
	}
	return nil
}

type UpdateIDPConnectorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateIDPConnectorResponse) Reset()         { *m = UpdateIDPConnectorResponse{} }
func (m *UpdateIDPConnectorResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateIDPConnectorResponse) ProtoMessage()    {}
func (*UpdateIDPConnectorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{10}
}
func (m *UpdateIDPConnectorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateIDPConnectorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateIDPConnectorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateIDPConnectorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIDPConnectorResponse.Merge(m, src)
}
func (m *UpdateIDPConnectorResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdateIDPConnectorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIDPConnectorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIDPConnectorResponse proto.InternalMessageInfo

type ListIDPConnectorsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIDPConnectorsRequest) Reset()         { *m = ListIDPConnectorsRequest{} }
func (m *ListIDPConnectorsRequest) String() string { return proto.CompactTextString(m) }
func (*ListIDPConnectorsRequest) ProtoMessage()    {}
func (*ListIDPConnectorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{11}
}
func (m *ListIDPConnectorsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListIDPConnectorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListIDPConnectorsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListIDPConnectorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDPConnectorsRequest.Merge(m, src)
}
func (m *ListIDPConnectorsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListIDPConnectorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDPConnectorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDPConnectorsRequest proto.InternalMessageInfo

type ListIDPConnectorsResponse struct {
	Connectors           []*IDPConnector `protobuf:"bytes,1,rep,name=connectors,proto3" json:"connectors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListIDPConnectorsResponse) Reset()         { *m = ListIDPConnectorsResponse{} }
func (m *ListIDPConnectorsResponse) String() string { return proto.CompactTextString(m) }
func (*ListIDPConnectorsResponse) ProtoMessage()    {}
func (*ListIDPConnectorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{12}
}
func (m *ListIDPConnectorsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListIDPConnectorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListIDPConnectorsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListIDPConnectorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIDPConnectorsResponse.Merge(m, src)
}
func (m *ListIDPConnectorsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListIDPConnectorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIDPConnectorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIDPConnectorsResponse proto.InternalMessageInfo

func (m *ListIDPConnectorsResponse) GetConnectors() []*IDPConnector {
	if m != nil {
		return m.Connectors
	}
	return nil
}

type GetIDPConnectorRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIDPConnectorRequest) Reset()         { *m = GetIDPConnectorRequest{} }
func (m *GetIDPConnectorRequest) String() string { return proto.CompactTextString(m) }
func (*GetIDPConnectorRequest) ProtoMessage()    {}
func (*GetIDPConnectorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{13}
}
func (m *GetIDPConnectorRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetIDPConnectorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetIDPConnectorRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetIDPConnectorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIDPConnectorRequest.Merge(m, src)
}
func (m *GetIDPConnectorRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetIDPConnectorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIDPConnectorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIDPConnectorRequest proto.InternalMessageInfo

func (m *GetIDPConnectorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetIDPConnectorResponse struct {
	Connector            *IDPConnector `protobuf:"bytes,1,opt,name=connector,proto3" json:"connector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetIDPConnectorResponse) Reset()         { *m = GetIDPConnectorResponse{} }
func (m *GetIDPConnectorResponse) String() string { return proto.CompactTextString(m) }
func (*GetIDPConnectorResponse) ProtoMessage()    {}
func (*GetIDPConnectorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{14}
}
func (m *GetIDPConnectorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetIDPConnectorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetIDPConnectorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetIDPConnectorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIDPConnectorResponse.Merge(m, src)
}
func (m *GetIDPConnectorResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetIDPConnectorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIDPConnectorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIDPConnectorResponse proto.InternalMessageInfo

func (m *GetIDPConnectorResponse) GetConnector() *IDPConnector {
	if m != nil {
		return m.Connector
	}
	return nil
}

type DeleteIDPConnectorRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIDPConnectorRequest) Reset()         { *m = DeleteIDPConnectorRequest{} }
func (m *DeleteIDPConnectorRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIDPConnectorRequest) ProtoMessage()    {}
func (*DeleteIDPConnectorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{15}
}
func (m *DeleteIDPConnectorRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteIDPConnectorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteIDPConnectorRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteIDPConnectorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIDPConnectorRequest.Merge(m, src)
}
func (m *DeleteIDPConnectorRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteIDPConnectorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIDPConnectorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIDPConnectorRequest proto.InternalMessageInfo

func (m *DeleteIDPConnectorRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteIDPConnectorResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIDPConnectorResponse) Reset()         { *m = DeleteIDPConnectorResponse{} }
func (m *DeleteIDPConnectorResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteIDPConnectorResponse) ProtoMessage()    {}
func (*DeleteIDPConnectorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{16}
}
func (m *DeleteIDPConnectorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteIDPConnectorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteIDPConnectorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteIDPConnectorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIDPConnectorResponse.Merge(m, src)
}
func (m *DeleteIDPConnectorResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteIDPConnectorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIDPConnectorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIDPConnectorResponse proto.InternalMessageInfo

type OIDCClient struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RedirectUris         []string `protobuf:"bytes,2,rep,name=redirect_uris,json=redirectUris,proto3" json:"redirect_uris,omitempty"`
	TrustedPeers         []string `protobuf:"bytes,3,rep,name=trusted_peers,json=trustedPeers,proto3" json:"trusted_peers,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Secret               string   `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OIDCClient) Reset()         { *m = OIDCClient{} }
func (m *OIDCClient) String() string { return proto.CompactTextString(m) }
func (*OIDCClient) ProtoMessage()    {}
func (*OIDCClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{17}
}
func (m *OIDCClient) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OIDCClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OIDCClient.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OIDCClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OIDCClient.Merge(m, src)
}
func (m *OIDCClient) XXX_Size() int {
	return m.Size()
}
func (m *OIDCClient) XXX_DiscardUnknown() {
	xxx_messageInfo_OIDCClient.DiscardUnknown(m)
}

var xxx_messageInfo_OIDCClient proto.InternalMessageInfo

func (m *OIDCClient) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OIDCClient) GetRedirectUris() []string {
	if m != nil {
		return m.RedirectUris
	}
	return nil
}

func (m *OIDCClient) GetTrustedPeers() []string {
	if m != nil {
		return m.TrustedPeers
	}
	return nil
}

func (m *OIDCClient) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OIDCClient) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type CreateOIDCClientRequest struct {
	Client               *OIDCClient `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateOIDCClientRequest) Reset()         { *m = CreateOIDCClientRequest{} }
func (m *CreateOIDCClientRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOIDCClientRequest) ProtoMessage()    {}
func (*CreateOIDCClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{18}
}
func (m *CreateOIDCClientRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateOIDCClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateOIDCClientRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateOIDCClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOIDCClientRequest.Merge(m, src)
}
func (m *CreateOIDCClientRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateOIDCClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOIDCClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOIDCClientRequest proto.InternalMessageInfo

func (m *CreateOIDCClientRequest) GetClient() *OIDCClient {
	if m != nil {
		return m.Client
	}
	return nil
}

type CreateOIDCClientResponse struct {
	Client               *OIDCClient `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateOIDCClientResponse) Reset()         { *m = CreateOIDCClientResponse{} }
func (m *CreateOIDCClientResponse) String() string { return proto.CompactTextString(m) }
func (*CreateOIDCClientResponse) ProtoMessage()    {}
func (*CreateOIDCClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{19}
}
func (m *CreateOIDCClientResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateOIDCClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateOIDCClientResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateOIDCClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOIDCClientResponse.Merge(m, src)
}
func (m *CreateOIDCClientResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateOIDCClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOIDCClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOIDCClientResponse proto.InternalMessageInfo

func (m *CreateOIDCClientResponse) GetClient() *OIDCClient {
	if m != nil {
		return m.Client
	}
	return nil
}

type GetOIDCClientRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOIDCClientRequest) Reset()         { *m = GetOIDCClientRequest{} }
func (m *GetOIDCClientRequest) String() string { return proto.CompactTextString(m) }
func (*GetOIDCClientRequest) ProtoMessage()    {}
func (*GetOIDCClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{20}
}
func (m *GetOIDCClientRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetOIDCClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetOIDCClientRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetOIDCClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOIDCClientRequest.Merge(m, src)
}
func (m *GetOIDCClientRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetOIDCClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOIDCClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOIDCClientRequest proto.InternalMessageInfo

func (m *GetOIDCClientRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetOIDCClientResponse struct {
	Client               *OIDCClient `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetOIDCClientResponse) Reset()         { *m = GetOIDCClientResponse{} }
func (m *GetOIDCClientResponse) String() string { return proto.CompactTextString(m) }
func (*GetOIDCClientResponse) ProtoMessage()    {}
func (*GetOIDCClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{21}
}
func (m *GetOIDCClientResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetOIDCClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetOIDCClientResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetOIDCClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOIDCClientResponse.Merge(m, src)
}
func (m *GetOIDCClientResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetOIDCClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOIDCClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOIDCClientResponse proto.InternalMessageInfo

func (m *GetOIDCClientResponse) GetClient() *OIDCClient {
	if m != nil {
		return m.Client
	}
	return nil
}

type ListOIDCClientsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOIDCClientsRequest) Reset()         { *m = ListOIDCClientsRequest{} }
func (m *ListOIDCClientsRequest) String() string { return proto.CompactTextString(m) }
func (*ListOIDCClientsRequest) ProtoMessage()    {}
func (*ListOIDCClientsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{22}
}
func (m *ListOIDCClientsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListOIDCClientsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListOIDCClientsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListOIDCClientsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOIDCClientsRequest.Merge(m, src)
}
func (m *ListOIDCClientsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListOIDCClientsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOIDCClientsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOIDCClientsRequest proto.InternalMessageInfo

type ListOIDCClientsResponse struct {
	Clients              []*OIDCClient `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListOIDCClientsResponse) Reset()         { *m = ListOIDCClientsResponse{} }
func (m *ListOIDCClientsResponse) String() string { return proto.CompactTextString(m) }
func (*ListOIDCClientsResponse) ProtoMessage()    {}
func (*ListOIDCClientsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{23}
}
func (m *ListOIDCClientsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListOIDCClientsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListOIDCClientsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListOIDCClientsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOIDCClientsResponse.Merge(m, src)
}
func (m *ListOIDCClientsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListOIDCClientsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOIDCClientsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOIDCClientsResponse proto.InternalMessageInfo

func (m *ListOIDCClientsResponse) GetClients() []*OIDCClient {
	if m != nil {
		return m.Clients
	}
	return nil
}

type UpdateOIDCClientRequest struct {
	Client               *OIDCClient `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateOIDCClientRequest) Reset()         { *m = UpdateOIDCClientRequest{} }
func (m *UpdateOIDCClientRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOIDCClientRequest) ProtoMessage()    {}
func (*UpdateOIDCClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{24}
}
func (m *UpdateOIDCClientRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateOIDCClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateOIDCClientRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateOIDCClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOIDCClientRequest.Merge(m, src)
}
func (m *UpdateOIDCClientRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateOIDCClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOIDCClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOIDCClientRequest proto.InternalMessageInfo

func (m *UpdateOIDCClientRequest) GetClient() *OIDCClient {
	if m != nil {
		return m.Client
	}
	return nil
}

type UpdateOIDCClientResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateOIDCClientResponse) Reset()         { *m = UpdateOIDCClientResponse{} }
func (m *UpdateOIDCClientResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateOIDCClientResponse) ProtoMessage()    {}
func (*UpdateOIDCClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{25}
}
func (m *UpdateOIDCClientResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateOIDCClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateOIDCClientResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateOIDCClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOIDCClientResponse.Merge(m, src)
}
func (m *UpdateOIDCClientResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdateOIDCClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOIDCClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOIDCClientResponse proto.InternalMessageInfo

type DeleteOIDCClientRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteOIDCClientRequest) Reset()         { *m = DeleteOIDCClientRequest{} }
func (m *DeleteOIDCClientRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteOIDCClientRequest) ProtoMessage()    {}
func (*DeleteOIDCClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{26}
}
func (m *DeleteOIDCClientRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteOIDCClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteOIDCClientRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteOIDCClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteOIDCClientRequest.Merge(m, src)
}
func (m *DeleteOIDCClientRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteOIDCClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteOIDCClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteOIDCClientRequest proto.InternalMessageInfo

func (m *DeleteOIDCClientRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteOIDCClientResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteOIDCClientResponse) Reset()         { *m = DeleteOIDCClientResponse{} }
func (m *DeleteOIDCClientResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteOIDCClientResponse) ProtoMessage()    {}
func (*DeleteOIDCClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{27}
}
func (m *DeleteOIDCClientResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteOIDCClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteOIDCClientResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteOIDCClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteOIDCClientResponse.Merge(m, src)
}
func (m *DeleteOIDCClientResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteOIDCClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteOIDCClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteOIDCClientResponse proto.InternalMessageInfo

type DeleteAllRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAllRequest) Reset()         { *m = DeleteAllRequest{} }
func (m *DeleteAllRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAllRequest) ProtoMessage()    {}
func (*DeleteAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{28}
}
func (m *DeleteAllRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteAllRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAllRequest.Merge(m, src)
}
func (m *DeleteAllRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAllRequest proto.InternalMessageInfo

type DeleteAllResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAllResponse) Reset()         { *m = DeleteAllResponse{} }
func (m *DeleteAllResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAllResponse) ProtoMessage()    {}
func (*DeleteAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2433c1f46177a3e0, []int{29}
}
func (m *DeleteAllResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteAllResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAllResponse.Merge(m, src)
}
func (m *DeleteAllResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAllResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*User)(nil), "identity_v2.User")
	proto.RegisterType((*IdentityServerConfig)(nil), "identity_v2.IdentityServerConfig")
	proto.RegisterType((*SetIdentityServerConfigRequest)(nil), "identity_v2.SetIdentityServerConfigRequest")
	proto.RegisterType((*SetIdentityServerConfigResponse)(nil), "identity_v2.SetIdentityServerConfigResponse")
	proto.RegisterType((*GetIdentityServerConfigRequest)(nil), "identity_v2.GetIdentityServerConfigRequest")
	proto.RegisterType((*GetIdentityServerConfigResponse)(nil), "identity_v2.GetIdentityServerConfigResponse")
	proto.RegisterType((*IDPConnector)(nil), "identity_v2.IDPConnector")
	proto.RegisterType((*CreateIDPConnectorRequest)(nil), "identity_v2.CreateIDPConnectorRequest")
	proto.RegisterType((*CreateIDPConnectorResponse)(nil), "identity_v2.CreateIDPConnectorResponse")
	proto.RegisterType((*UpdateIDPConnectorRequest)(nil), "identity_v2.UpdateIDPConnectorRequest")
	proto.RegisterType((*UpdateIDPConnectorResponse)(nil), "identity_v2.UpdateIDPConnectorResponse")
	proto.RegisterType((*ListIDPConnectorsRequest)(nil), "identity_v2.ListIDPConnectorsRequest")
	proto.RegisterType((*ListIDPConnectorsResponse)(nil), "identity_v2.ListIDPConnectorsResponse")
	proto.RegisterType((*GetIDPConnectorRequest)(nil), "identity_v2.GetIDPConnectorRequest")
	proto.RegisterType((*GetIDPConnectorResponse)(nil), "identity_v2.GetIDPConnectorResponse")
	proto.RegisterType((*DeleteIDPConnectorRequest)(nil), "identity_v2.DeleteIDPConnectorRequest")
	proto.RegisterType((*DeleteIDPConnectorResponse)(nil), "identity_v2.DeleteIDPConnectorResponse")
	proto.RegisterType((*OIDCClient)(nil), "identity_v2.OIDCClient")
	proto.RegisterType((*CreateOIDCClientRequest)(nil), "identity_v2.CreateOIDCClientRequest")
	proto.RegisterType((*CreateOIDCClientResponse)(nil), "identity_v2.CreateOIDCClientResponse")
	proto.RegisterType((*GetOIDCClientRequest)(nil), "identity_v2.GetOIDCClientRequest")
	proto.RegisterType((*GetOIDCClientResponse)(nil), "identity_v2.GetOIDCClientResponse")
	proto.RegisterType((*ListOIDCClientsRequest)(nil), "identity_v2.ListOIDCClientsRequest")
	proto.RegisterType((*ListOIDCClientsResponse)(nil), "identity_v2.ListOIDCClientsResponse")
	proto.RegisterType((*UpdateOIDCClientRequest)(nil), "identity_v2.UpdateOIDCClientRequest")
	proto.RegisterType((*UpdateOIDCClientResponse)(nil), "identity_v2.UpdateOIDCClientResponse")
	proto.RegisterType((*DeleteOIDCClientRequest)(nil), "identity_v2.DeleteOIDCClientRequest")
	proto.RegisterType((*DeleteOIDCClientResponse)(nil), "identity_v2.DeleteOIDCClientResponse")
	proto.RegisterType((*DeleteAllRequest)(nil), "identity_v2.DeleteAllRequest")
	proto.RegisterType((*DeleteAllResponse)(nil), "identity_v2.DeleteAllResponse")
}

func init() { proto.RegisterFile("identity/identity.proto", fileDescriptor_2433c1f46177a3e0) }

var fileDescriptor_2433c1f46177a3e0 = []byte{
	// 1021 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xd1, 0x6e, 0xe3, 0x44,
	0x14, 0x8d, 0x9b, 0x6e, 0x50, 0x6e, 0xb7, 0xec, 0x76, 0x36, 0x5b, 0x3b, 0x56, 0x49, 0x52, 0x6f,
	0xb7, 0x04, 0x2d, 0x4a, 0x44, 0x78, 0x40, 0x20, 0x1e, 0x68, 0x53, 0x14, 0x0a, 0x95, 0xa8, 0xdc,
	0x76, 0x85, 0x00, 0x11, 0xb9, 0xf6, 0x6c, 0x3a, 0x4b, 0x62, 0x87, 0x99, 0x49, 0x45, 0xff, 0x80,
	0x47, 0xc4, 0x4f, 0xf0, 0x15, 0xbc, 0xf1, 0xc0, 0x23, 0x5f, 0x50, 0x50, 0x3f, 0xa1, 0x5f, 0x80,
	0x6c, 0x8f, 0x1d, 0x7b, 0x6c, 0x27, 0xbb, 0x05, 0xde, 0xc6, 0x77, 0xce, 0xdc, 0x73, 0xe7, 0xcc,
	0x9d, 0x33, 0x09, 0xa8, 0xc4, 0xc1, 0x2e, 0x27, 0xfc, 0xaa, 0x1b, 0x0d, 0x3a, 0x53, 0xea, 0x71,
	0x0f, 0xad, 0x45, 0xdf, 0xc3, 0xcb, 0x9e, 0xde, 0x1c, 0x79, 0xde, 0x68, 0x8c, 0xbb, 0xc1, 0xd4,
	0xf9, 0xec, 0x45, 0x97, 0x93, 0x09, 0x66, 0xdc, 0x9a, 0x4c, 0x43, 0xb4, 0xbe, 0x25, 0x03, 0x18,
	0xa7, 0x33, 0x9b, 0x8b, 0xd9, 0xda, 0xc8, 0x1b, 0x79, 0xc1, 0xb0, 0xeb, 0x8f, 0xc2, 0xa8, 0xf1,
	0x93, 0x02, 0xab, 0x67, 0x0c, 0x53, 0x54, 0x83, 0x7b, 0x78, 0x62, 0x91, 0xb1, 0xa6, 0xb4, 0x94,
	0x76, 0xd5, 0x0c, 0x3f, 0xd0, 0x4b, 0x40, 0x63, 0x8b, 0xf1, 0xa1, 0x35, 0xe3, 0x17, 0x7e, 0x25,
	0xb6, 0xc5, 0xb1, 0xa3, 0xad, 0xb4, 0x94, 0xf6, 0x5a, 0x4f, 0xef, 0x84, 0x7c, 0x9d, 0x88, 0xaf,
	0x73, 0x1a, 0x15, 0xb4, 0xdf, 0xbc, 0xbd, 0x6e, 0xaa, 0xce, 0xf9, 0x47, 0x46, 0x76, 0xb5, 0xf1,
	0xf3, 0x5f, 0x4d, 0xc5, 0xdc, 0xf0, 0x27, 0xf6, 0x52, 0xf1, 0xdf, 0x15, 0xa8, 0x1d, 0x8a, 0xfd,
	0x9e, 0x60, 0x7a, 0x89, 0x69, 0xdf, 0x73, 0x5f, 0x90, 0x11, 0xda, 0x84, 0x0a, 0x61, 0x6c, 0x86,
	0xa9, 0xa8, 0x4d, 0x7c, 0xa1, 0x4f, 0xe0, 0x01, 0x71, 0x86, 0xdc, 0xfb, 0x1e, 0xbb, 0x43, 0xfc,
	0xe3, 0x94, 0xd0, 0xab, 0xa0, 0xb2, 0xea, 0xbe, 0x76, 0x7b, 0xdd, 0xac, 0xf9, 0xec, 0xd2, 0xb4,
	0x61, 0xae, 0x13, 0xe7, 0xd4, 0x0f, 0x7c, 0x1a, 0x7c, 0x23, 0x13, 0x1e, 0x53, 0x8f, 0x5b, 0x9c,
	0x78, 0x6e, 0x3a, 0x4f, 0x39, 0xc8, 0xd3, 0xb8, 0xbd, 0x6e, 0xea, 0x7e, 0x9e, 0x5c, 0x90, 0x61,
	0x3e, 0x8a, 0xe2, 0x89, 0x9c, 0xc6, 0x37, 0xd0, 0x38, 0xc1, 0x3c, 0x6f, 0x23, 0x26, 0xfe, 0x61,
	0x86, 0x19, 0x47, 0x1f, 0x42, 0xc5, 0x0e, 0x02, 0xc1, 0x7e, 0xd6, 0x7a, 0xdb, 0x9d, 0xc4, 0x31,
	0x77, 0x72, 0x57, 0x8a, 0x05, 0xc6, 0x36, 0x34, 0x0b, 0x93, 0xb3, 0xa9, 0xe7, 0x32, 0x6c, 0xb4,
	0xa0, 0x31, 0x58, 0xc8, 0x6f, 0x7c, 0x0b, 0xcd, 0xc1, 0xe2, 0x24, 0xff, 0xa6, 0xc4, 0xdf, 0x14,
	0xb8, 0x7f, 0x78, 0x70, 0xdc, 0xf7, 0x5c, 0x17, 0xdb, 0xdc, 0xa3, 0xe8, 0x4d, 0x58, 0x21, 0x8e,
	0x38, 0xba, 0x15, 0xe2, 0x20, 0x04, 0xab, 0xae, 0x35, 0xc1, 0xe1, 0x59, 0x99, 0xc1, 0xd8, 0x8f,
	0xf1, 0xab, 0x29, 0x0e, 0x75, 0x37, 0x83, 0x31, 0xda, 0x81, 0xf5, 0x30, 0xe5, 0x73, 0x4c, 0x19,
	0xf1, 0x5c, 0x6d, 0xb5, 0xa5, 0xb4, 0xcb, 0x66, 0x3a, 0x88, 0x1a, 0x00, 0x2f, 0x99, 0xe7, 0x86,
	0x45, 0x68, 0xf7, 0x82, 0xf5, 0x89, 0x08, 0xea, 0xc6, 0x3b, 0xa9, 0x04, 0x3b, 0x51, 0x33, 0x5d,
	0x7b, 0x12, 0xdc, 0x92, 0xb8, 0xfe, 0x53, 0xa8, 0xf7, 0x29, 0xb6, 0x38, 0x4e, 0x6e, 0x22, 0x3a,
	0xba, 0x0f, 0xa0, 0x6a, 0x47, 0x31, 0x21, 0x4d, 0x3d, 0x2d, 0x4d, 0x72, 0xd1, 0x1c, 0x6b, 0x6c,
	0x81, 0x9e, 0x97, 0x55, 0x9c, 0xd9, 0x29, 0xd4, 0xcf, 0xa6, 0xce, 0xff, 0xc0, 0x99, 0x97, 0x55,
	0x70, 0xea, 0xa0, 0x1d, 0x11, 0xc6, 0x93, 0x73, 0x2c, 0xea, 0x90, 0xe7, 0x50, 0xcf, 0x99, 0x8b,
	0x7b, 0x03, 0x62, 0x0e, 0xa6, 0x29, 0xad, 0xf2, 0xe2, 0x82, 0x12, 0x60, 0xa3, 0x0d, 0x9b, 0x7e,
	0xe7, 0xe5, 0x6c, 0x52, 0x6a, 0x12, 0xc3, 0x04, 0x35, 0x83, 0x14, 0xfc, 0x77, 0xd6, 0xe3, 0x19,
	0xd4, 0x0f, 0xf0, 0x18, 0xe7, 0xab, 0x2c, 0x17, 0xb0, 0x05, 0x7a, 0x1e, 0x58, 0x88, 0xf7, 0x8b,
	0x02, 0xf0, 0xe5, 0xe1, 0x41, 0xbf, 0x3f, 0x26, 0xd8, 0xcd, 0x2c, 0x46, 0x4f, 0x60, 0x9d, 0x62,
	0x87, 0x50, 0x6c, 0xf3, 0xe1, 0x8c, 0x12, 0xa6, 0xad, 0xb4, 0xca, 0xed, 0xaa, 0x79, 0x3f, 0x0a,
	0x9e, 0x51, 0xc2, 0x7c, 0x10, 0xa7, 0x33, 0xc6, 0xb1, 0x33, 0x9c, 0x62, 0x4c, 0x99, 0x56, 0x0e,
	0x41, 0x22, 0x78, 0xec, 0xc7, 0xe2, 0xcb, 0xb2, 0x9a, 0xb8, 0x2c, 0x9b, 0x50, 0x61, 0xd8, 0xa6,
	0x98, 0x8b, 0x76, 0x17, 0x5f, 0xc6, 0xe7, 0xa0, 0x86, 0x3d, 0x36, 0xaf, 0x2c, 0xda, 0x9d, 0x7f,
	0x0b, 0x82, 0x80, 0x10, 0x4c, 0x4d, 0x09, 0x96, 0xc0, 0x0b, 0x98, 0xf1, 0x05, 0x68, 0xd9, 0x5c,
	0xe2, 0x00, 0x5e, 0x3b, 0xd9, 0x2e, 0xd4, 0x06, 0x98, 0x67, 0xab, 0x92, 0x35, 0xff, 0x0c, 0x1e,
	0x4b, 0xb8, 0xbb, 0x32, 0x6a, 0xb0, 0xe9, 0x37, 0xf0, 0x7c, 0x26, 0x6e, 0xed, 0x23, 0x50, 0x33,
	0x33, 0x82, 0xe5, 0x3d, 0x78, 0x23, 0x5c, 0x1e, 0x75, 0x75, 0x21, 0x4d, 0x84, 0xf3, 0x25, 0x0f,
	0xaf, 0xd8, 0x7f, 0x20, 0xb9, 0x0e, 0x5a, 0x36, 0x97, 0xe8, 0xb7, 0x77, 0x40, 0x0d, 0xbb, 0x71,
	0xb9, 0x88, 0x3a, 0x68, 0x59, 0xa8, 0x48, 0x83, 0xe0, 0x61, 0x38, 0xb7, 0x37, 0x1e, 0x47, 0x82,
	0x3c, 0x82, 0x8d, 0x44, 0x2c, 0x04, 0xf6, 0x7e, 0x05, 0x28, 0xef, 0x1d, 0x1f, 0xa2, 0x4b, 0x50,
	0x0b, 0xde, 0x1b, 0xf4, 0x2c, 0xb5, 0x9f, 0xc5, 0x4f, 0x9e, 0xfe, 0xee, 0xab, 0x81, 0x45, 0x99,
	0x25, 0x9f, 0x77, 0xf0, 0x4a, 0xbc, 0x83, 0xd7, 0xe1, 0x1d, 0x2c, 0xe5, 0x1d, 0x01, 0xca, 0xda,
	0x34, 0xda, 0x4d, 0x65, 0x29, 0x7c, 0x1d, 0xf4, 0xb7, 0x97, 0xe2, 0x92, 0x44, 0x59, 0x6f, 0x96,
	0x88, 0x0a, 0x9f, 0x04, 0x89, 0x68, 0x81, 0xc9, 0x97, 0x90, 0x03, 0x1b, 0x19, 0x2b, 0x47, 0x4f,
	0x53, 0xeb, 0x8b, 0x9e, 0x01, 0x7d, 0x77, 0x19, 0x2c, 0x66, 0xf9, 0x0e, 0x1e, 0x48, 0x76, 0x8d,
	0x9e, 0x64, 0xa4, 0xcf, 0xd9, 0xc8, 0xce, 0x62, 0x50, 0x52, 0xae, 0xac, 0x1b, 0x4b, 0x72, 0x15,
	0x7a, 0xbb, 0x24, 0xd7, 0x02, 0x5b, 0x2f, 0x21, 0x0b, 0x1e, 0xca, 0xbe, 0x87, 0x76, 0x72, 0x8e,
	0x35, 0x73, 0x0f, 0xf5, 0xa7, 0x4b, 0x50, 0x49, 0x0a, 0xf9, 0x9e, 0x4b, 0x14, 0x05, 0x96, 0x22,
	0x51, 0x14, 0x9a, 0x45, 0x09, 0x7d, 0x05, 0xeb, 0x29, 0x23, 0x45, 0xdb, 0xb2, 0xce, 0xd9, 0xe4,
	0xc6, 0x22, 0x48, 0xf2, 0xa0, 0x25, 0xfb, 0x94, 0x0e, 0x3a, 0xdf, 0x76, 0xa5, 0x83, 0x2e, 0x70,
	0xe0, 0x50, 0x1c, 0xd9, 0xbd, 0x24, 0x71, 0x0a, 0x7c, 0x50, 0x12, 0xa7, 0xd0, 0x02, 0x4b, 0xe8,
	0x08, 0xaa, 0xb1, 0xe1, 0xa1, 0xb7, 0x72, 0x56, 0xcd, 0xcd, 0x51, 0x6f, 0x14, 0x4d, 0x47, 0xd9,
	0xf6, 0x3f, 0xfe, 0xe3, 0xa6, 0xa1, 0xfc, 0x79, 0xd3, 0x50, 0xfe, 0xbe, 0x69, 0x28, 0x5f, 0x77,
	0x46, 0x84, 0x5f, 0xcc, 0xce, 0x3b, 0xb6, 0x37, 0xe9, 0x4e, 0x2d, 0xfb, 0xe2, 0xca, 0xc1, 0x34,
	0x39, 0xba, 0xec, 0x75, 0x19, 0xb5, 0xe3, 0xbf, 0x79, 0xe7, 0x95, 0xe0, 0x57, 0xe8, 0xfb, 0xff,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x09, 0x33, 0x1c, 0x02, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	SetIdentityServerConfig(ctx context.Context, in *SetIdentityServerConfigRequest, opts ...grpc.CallOption) (*SetIdentityServerConfigResponse, error)
	GetIdentityServerConfig(ctx context.Context, in *GetIdentityServerConfigRequest, opts ...grpc.CallOption) (*GetIdentityServerConfigResponse, error)
	CreateIDPConnector(ctx context.Context, in *CreateIDPConnectorRequest, opts ...grpc.CallOption) (*CreateIDPConnectorResponse, error)
	UpdateIDPConnector(ctx context.Context, in *UpdateIDPConnectorRequest, opts ...grpc.CallOption) (*UpdateIDPConnectorResponse, error)
	ListIDPConnectors(ctx context.Context, in *ListIDPConnectorsRequest, opts ...grpc.CallOption) (*ListIDPConnectorsResponse, error)
	GetIDPConnector(ctx context.Context, in *GetIDPConnectorRequest, opts ...grpc.CallOption) (*GetIDPConnectorResponse, error)
	DeleteIDPConnector(ctx context.Context, in *DeleteIDPConnectorRequest, opts ...grpc.CallOption) (*DeleteIDPConnectorResponse, error)
	CreateOIDCClient(ctx context.Context, in *CreateOIDCClientRequest, opts ...grpc.CallOption) (*CreateOIDCClientResponse, error)
	UpdateOIDCClient(ctx context.Context, in *UpdateOIDCClientRequest, opts ...grpc.CallOption) (*UpdateOIDCClientResponse, error)
	GetOIDCClient(ctx context.Context, in *GetOIDCClientRequest, opts ...grpc.CallOption) (*GetOIDCClientResponse, error)
	ListOIDCClients(ctx context.Context, in *ListOIDCClientsRequest, opts ...grpc.CallOption) (*ListOIDCClientsResponse, error)
	DeleteOIDCClient(ctx context.Context, in *DeleteOIDCClientRequest, opts ...grpc.CallOption) (*DeleteOIDCClientResponse, error)
	DeleteAll(ctx context.Context, in *DeleteAllRequest, opts ...grpc.CallOption) (*DeleteAllResponse, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) SetIdentityServerConfig(ctx context.Context, in *SetIdentityServerConfigRequest, opts ...grpc.CallOption) (*SetIdentityServerConfigResponse, error) {
	out := new(SetIdentityServerConfigResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/SetIdentityServerConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetIdentityServerConfig(ctx context.Context, in *GetIdentityServerConfigRequest, opts ...grpc.CallOption) (*GetIdentityServerConfigResponse, error) {
	out := new(GetIdentityServerConfigResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/GetIdentityServerConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) CreateIDPConnector(ctx context.Context, in *CreateIDPConnectorRequest, opts ...grpc.CallOption) (*CreateIDPConnectorResponse, error) {
	out := new(CreateIDPConnectorResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/CreateIDPConnector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) UpdateIDPConnector(ctx context.Context, in *UpdateIDPConnectorRequest, opts ...grpc.CallOption) (*UpdateIDPConnectorResponse, error) {
	out := new(UpdateIDPConnectorResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/UpdateIDPConnector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ListIDPConnectors(ctx context.Context, in *ListIDPConnectorsRequest, opts ...grpc.CallOption) (*ListIDPConnectorsResponse, error) {
	out := new(ListIDPConnectorsResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/ListIDPConnectors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetIDPConnector(ctx context.Context, in *GetIDPConnectorRequest, opts ...grpc.CallOption) (*GetIDPConnectorResponse, error) {
	out := new(GetIDPConnectorResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/GetIDPConnector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) DeleteIDPConnector(ctx context.Context, in *DeleteIDPConnectorRequest, opts ...grpc.CallOption) (*DeleteIDPConnectorResponse, error) {
	out := new(DeleteIDPConnectorResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/DeleteIDPConnector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) CreateOIDCClient(ctx context.Context, in *CreateOIDCClientRequest, opts ...grpc.CallOption) (*CreateOIDCClientResponse, error) {
	out := new(CreateOIDCClientResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/CreateOIDCClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) UpdateOIDCClient(ctx context.Context, in *UpdateOIDCClientRequest, opts ...grpc.CallOption) (*UpdateOIDCClientResponse, error) {
	out := new(UpdateOIDCClientResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/UpdateOIDCClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetOIDCClient(ctx context.Context, in *GetOIDCClientRequest, opts ...grpc.CallOption) (*GetOIDCClientResponse, error) {
	out := new(GetOIDCClientResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/GetOIDCClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ListOIDCClients(ctx context.Context, in *ListOIDCClientsRequest, opts ...grpc.CallOption) (*ListOIDCClientsResponse, error) {
	out := new(ListOIDCClientsResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/ListOIDCClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) DeleteOIDCClient(ctx context.Context, in *DeleteOIDCClientRequest, opts ...grpc.CallOption) (*DeleteOIDCClientResponse, error) {
	out := new(DeleteOIDCClientResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/DeleteOIDCClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) DeleteAll(ctx context.Context, in *DeleteAllRequest, opts ...grpc.CallOption) (*DeleteAllResponse, error) {
	out := new(DeleteAllResponse)
	err := c.cc.Invoke(ctx, "/identity_v2.API/DeleteAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	SetIdentityServerConfig(context.Context, *SetIdentityServerConfigRequest) (*SetIdentityServerConfigResponse, error)
	GetIdentityServerConfig(context.Context, *GetIdentityServerConfigRequest) (*GetIdentityServerConfigResponse, error)
	CreateIDPConnector(context.Context, *CreateIDPConnectorRequest) (*CreateIDPConnectorResponse, error)
	UpdateIDPConnector(context.Context, *UpdateIDPConnectorRequest) (*UpdateIDPConnectorResponse, error)
	ListIDPConnectors(context.Context, *ListIDPConnectorsRequest) (*ListIDPConnectorsResponse, error)
	GetIDPConnector(context.Context, *GetIDPConnectorRequest) (*GetIDPConnectorResponse, error)
	DeleteIDPConnector(context.Context, *DeleteIDPConnectorRequest) (*DeleteIDPConnectorResponse, error)
	CreateOIDCClient(context.Context, *CreateOIDCClientRequest) (*CreateOIDCClientResponse, error)
	UpdateOIDCClient(context.Context, *UpdateOIDCClientRequest) (*UpdateOIDCClientResponse, error)
	GetOIDCClient(context.Context, *GetOIDCClientRequest) (*GetOIDCClientResponse, error)
	ListOIDCClients(context.Context, *ListOIDCClientsRequest) (*ListOIDCClientsResponse, error)
	DeleteOIDCClient(context.Context, *DeleteOIDCClientRequest) (*DeleteOIDCClientResponse, error)
	DeleteAll(context.Context, *DeleteAllRequest) (*DeleteAllResponse, error)
}

// UnimplementedAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServer struct {
}

func (*UnimplementedAPIServer) SetIdentityServerConfig(ctx context.Context, req *SetIdentityServerConfigRequest) (*SetIdentityServerConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetIdentityServerConfig not implemented")
}
func (*UnimplementedAPIServer) GetIdentityServerConfig(ctx context.Context, req *GetIdentityServerConfigRequest) (*GetIdentityServerConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIdentityServerConfig not implemented")
}
func (*UnimplementedAPIServer) CreateIDPConnector(ctx context.Context, req *CreateIDPConnectorRequest) (*CreateIDPConnectorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIDPConnector not implemented")
}
func (*UnimplementedAPIServer) UpdateIDPConnector(ctx context.Context, req *UpdateIDPConnectorRequest) (*UpdateIDPConnectorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateIDPConnector not implemented")
}
func (*UnimplementedAPIServer) ListIDPConnectors(ctx context.Context, req *ListIDPConnectorsRequest) (*ListIDPConnectorsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListIDPConnectors not implemented")
}
func (*UnimplementedAPIServer) GetIDPConnector(ctx context.Context, req *GetIDPConnectorRequest) (*GetIDPConnectorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIDPConnector not implemented")
}
func (*UnimplementedAPIServer) DeleteIDPConnector(ctx context.Context, req *DeleteIDPConnectorRequest) (*DeleteIDPConnectorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteIDPConnector not implemented")
}
func (*UnimplementedAPIServer) CreateOIDCClient(ctx context.Context, req *CreateOIDCClientRequest) (*CreateOIDCClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOIDCClient not implemented")
}
func (*UnimplementedAPIServer) UpdateOIDCClient(ctx context.Context, req *UpdateOIDCClientRequest) (*UpdateOIDCClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOIDCClient not implemented")
}
func (*UnimplementedAPIServer) GetOIDCClient(ctx context.Context, req *GetOIDCClientRequest) (*GetOIDCClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOIDCClient not implemented")
}
func (*UnimplementedAPIServer) ListOIDCClients(ctx context.Context, req *ListOIDCClientsRequest) (*ListOIDCClientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOIDCClients not implemented")
}
func (*UnimplementedAPIServer) DeleteOIDCClient(ctx context.Context, req *DeleteOIDCClientRequest) (*DeleteOIDCClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOIDCClient not implemented")
}
func (*UnimplementedAPIServer) DeleteAll(ctx context.Context, req *DeleteAllRequest) (*DeleteAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAll not implemented")
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_SetIdentityServerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetIdentityServerConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).SetIdentityServerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/SetIdentityServerConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).SetIdentityServerConfig(ctx, req.(*SetIdentityServerConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetIdentityServerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIdentityServerConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetIdentityServerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/GetIdentityServerConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetIdentityServerConfig(ctx, req.(*GetIdentityServerConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_CreateIDPConnector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIDPConnectorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).CreateIDPConnector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/CreateIDPConnector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).CreateIDPConnector(ctx, req.(*CreateIDPConnectorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_UpdateIDPConnector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIDPConnectorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).UpdateIDPConnector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/UpdateIDPConnector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).UpdateIDPConnector(ctx, req.(*UpdateIDPConnectorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ListIDPConnectors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIDPConnectorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ListIDPConnectors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/ListIDPConnectors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ListIDPConnectors(ctx, req.(*ListIDPConnectorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetIDPConnector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIDPConnectorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetIDPConnector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/GetIDPConnector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetIDPConnector(ctx, req.(*GetIDPConnectorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_DeleteIDPConnector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIDPConnectorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).DeleteIDPConnector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/DeleteIDPConnector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).DeleteIDPConnector(ctx, req.(*DeleteIDPConnectorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_CreateOIDCClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOIDCClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).CreateOIDCClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/CreateOIDCClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).CreateOIDCClient(ctx, req.(*CreateOIDCClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_UpdateOIDCClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOIDCClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).UpdateOIDCClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/UpdateOIDCClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).UpdateOIDCClient(ctx, req.(*UpdateOIDCClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetOIDCClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOIDCClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetOIDCClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/GetOIDCClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetOIDCClient(ctx, req.(*GetOIDCClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ListOIDCClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOIDCClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ListOIDCClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/ListOIDCClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ListOIDCClients(ctx, req.(*ListOIDCClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_DeleteOIDCClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOIDCClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).DeleteOIDCClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/DeleteOIDCClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).DeleteOIDCClient(ctx, req.(*DeleteOIDCClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_DeleteAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).DeleteAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity_v2.API/DeleteAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).DeleteAll(ctx, req.(*DeleteAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "identity_v2.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetIdentityServerConfig",
			Handler:    _API_SetIdentityServerConfig_Handler,
		},
		{
			MethodName: "GetIdentityServerConfig",
			Handler:    _API_GetIdentityServerConfig_Handler,
		},
		{
			MethodName: "CreateIDPConnector",
			Handler:    _API_CreateIDPConnector_Handler,
		},
		{
			MethodName: "UpdateIDPConnector",
			Handler:    _API_UpdateIDPConnector_Handler,
		},
		{
			MethodName: "ListIDPConnectors",
			Handler:    _API_ListIDPConnectors_Handler,
		},
		{
			MethodName: "GetIDPConnector",
			Handler:    _API_GetIDPConnector_Handler,
		},
		{
			MethodName: "DeleteIDPConnector",
			Handler:    _API_DeleteIDPConnector_Handler,
		},
		{
			MethodName: "CreateOIDCClient",
			Handler:    _API_CreateOIDCClient_Handler,
		},
		{
			MethodName: "UpdateOIDCClient",
			Handler:    _API_UpdateOIDCClient_Handler,
		},
		{
			MethodName: "GetOIDCClient",
			Handler:    _API_GetOIDCClient_Handler,
		},
		{
			MethodName: "ListOIDCClients",
			Handler:    _API_ListOIDCClients_Handler,
		},
		{
			MethodName: "DeleteOIDCClient",
			Handler:    _API_DeleteOIDCClient_Handler,
		},
		{
			MethodName: "DeleteAll",
			Handler:    _API_DeleteAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "identity/identity.proto",
}

func (m *User) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *User) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *User) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastAuthenticated != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.LastAuthenticated, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.LastAuthenticated):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintIdentity(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IdentityServerConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IdentityServerConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IdentityServerConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RotationTokenExpiry) > 0 {
		i -= len(m.RotationTokenExpiry)
		copy(dAtA[i:], m.RotationTokenExpiry)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.RotationTokenExpiry)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.IdTokenExpiry) > 0 {
		i -= len(m.IdTokenExpiry)
		copy(dAtA[i:], m.IdTokenExpiry)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.IdTokenExpiry)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SetIdentityServerConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetIdentityServerConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetIdentityServerConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Config != nil {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SetIdentityServerConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetIdentityServerConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetIdentityServerConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GetIdentityServerConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetIdentityServerConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetIdentityServerConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GetIdentityServerConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetIdentityServerConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetIdentityServerConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Config != nil {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *IDPConnector) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IDPConnector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IDPConnector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Config != nil {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.JsonConfig) > 0 {
		i -= len(m.JsonConfig)
		copy(dAtA[i:], m.JsonConfig)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.JsonConfig)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ConfigVersion != 0 {
		i = encodeVarintIdentity(dAtA, i, uint64(m.ConfigVersion))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateIDPConnectorRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateIDPConnectorRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateIDPConnectorRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Connector != nil {
		{
			size, err := m.Connector.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateIDPConnectorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateIDPConnectorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateIDPConnectorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UpdateIDPConnectorRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateIDPConnectorRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateIDPConnectorRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Connector != nil {
		{
			size, err := m.Connector.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateIDPConnectorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateIDPConnectorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateIDPConnectorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ListIDPConnectorsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListIDPConnectorsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListIDPConnectorsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ListIDPConnectorsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListIDPConnectorsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListIDPConnectorsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Connectors) > 0 {
		for iNdEx := len(m.Connectors) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Connectors[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintIdentity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetIDPConnectorRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetIDPConnectorRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetIDPConnectorRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetIDPConnectorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetIDPConnectorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetIDPConnectorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Connector != nil {
		{
			size, err := m.Connector.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteIDPConnectorRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteIDPConnectorRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteIDPConnectorRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteIDPConnectorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteIDPConnectorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteIDPConnectorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *OIDCClient) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OIDCClient) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OIDCClient) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Secret) > 0 {
		i -= len(m.Secret)
		copy(dAtA[i:], m.Secret)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Secret)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TrustedPeers) > 0 {
		for iNdEx := len(m.TrustedPeers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.TrustedPeers[iNdEx])
			copy(dAtA[i:], m.TrustedPeers[iNdEx])
			i = encodeVarintIdentity(dAtA, i, uint64(len(m.TrustedPeers[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.RedirectUris) > 0 {
		for iNdEx := len(m.RedirectUris) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.RedirectUris[iNdEx])
			copy(dAtA[i:], m.RedirectUris[iNdEx])
			i = encodeVarintIdentity(dAtA, i, uint64(len(m.RedirectUris[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateOIDCClientRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateOIDCClientRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateOIDCClientRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Client != nil {
		{
			size, err := m.Client.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateOIDCClientResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateOIDCClientResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateOIDCClientResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Client != nil {
		{
			size, err := m.Client.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetOIDCClientRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetOIDCClientRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetOIDCClientRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetOIDCClientResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetOIDCClientResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetOIDCClientResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Client != nil {
		{
			size, err := m.Client.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListOIDCClientsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListOIDCClientsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListOIDCClientsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ListOIDCClientsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListOIDCClientsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListOIDCClientsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Clients) > 0 {
		for iNdEx := len(m.Clients) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Clients[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintIdentity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *UpdateOIDCClientRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateOIDCClientRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateOIDCClientRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Client != nil {
		{
			size, err := m.Client.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintIdentity(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateOIDCClientResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateOIDCClientResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateOIDCClientResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DeleteOIDCClientRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteOIDCClientRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteOIDCClientRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintIdentity(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteOIDCClientResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteOIDCClientResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteOIDCClientResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DeleteAllRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteAllRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteAllRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *DeleteAllResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteAllResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteAllResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintIdentity(dAtA []byte, offset int, v uint64) int {
	offset -= sovIdentity(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.LastAuthenticated != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.LastAuthenticated)
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *IdentityServerConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	l = len(m.IdTokenExpiry)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	l = len(m.RotationTokenExpiry)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetIdentityServerConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetIdentityServerConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetIdentityServerConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetIdentityServerConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *IDPConnector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.ConfigVersion != 0 {
		n += 1 + sovIdentity(uint64(m.ConfigVersion))
	}
	l = len(m.JsonConfig)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateIDPConnectorRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Connector != nil {
		l = m.Connector.Size()
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateIDPConnectorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateIDPConnectorRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Connector != nil {
		l = m.Connector.Size()
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateIDPConnectorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListIDPConnectorsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListIDPConnectorsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Connectors) > 0 {
		for _, e := range m.Connectors {
			l = e.Size()
			n += 1 + l + sovIdentity(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetIDPConnectorRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetIDPConnectorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Connector != nil {
		l = m.Connector.Size()
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteIDPConnectorRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteIDPConnectorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OIDCClient) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	if len(m.RedirectUris) > 0 {
		for _, s := range m.RedirectUris {
			l = len(s)
			n += 1 + l + sovIdentity(uint64(l))
		}
	}
	if len(m.TrustedPeers) > 0 {
		for _, s := range m.TrustedPeers {
			l = len(s)
			n += 1 + l + sovIdentity(uint64(l))
		}
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	l = len(m.Secret)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateOIDCClientRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Client != nil {
		l = m.Client.Size()
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateOIDCClientResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Client != nil {
		l = m.Client.Size()
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetOIDCClientRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetOIDCClientResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Client != nil {
		l = m.Client.Size()
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListOIDCClientsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListOIDCClientsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Clients) > 0 {
		for _, e := range m.Clients {
			l = e.Size()
			n += 1 + l + sovIdentity(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateOIDCClientRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Client != nil {
		l = m.Client.Size()
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateOIDCClientResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteOIDCClientRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovIdentity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteOIDCClientResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteAllRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteAllResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovIdentity(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozIdentity(x uint64) (n int) {
	return sovIdentity(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *User) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastAuthenticated", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastAuthenticated == nil {
				m.LastAuthenticated = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.LastAuthenticated, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IdentityServerConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IdentityServerConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IdentityServerConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdTokenExpiry", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdTokenExpiry = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RotationTokenExpiry", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RotationTokenExpiry = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetIdentityServerConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetIdentityServerConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetIdentityServerConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &IdentityServerConfig{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetIdentityServerConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetIdentityServerConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetIdentityServerConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetIdentityServerConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetIdentityServerConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetIdentityServerConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetIdentityServerConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetIdentityServerConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetIdentityServerConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &IdentityServerConfig{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IDPConnector) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IDPConnector: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IDPConnector: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigVersion", wireType)
			}
			m.ConfigVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConfigVersion |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JsonConfig", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JsonConfig = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &types.Struct{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateIDPConnectorRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateIDPConnectorRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateIDPConnectorRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Connector", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Connector == nil {
				m.Connector = &IDPConnector{}
			}
			if err := m.Connector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateIDPConnectorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateIDPConnectorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateIDPConnectorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateIDPConnectorRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateIDPConnectorRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateIDPConnectorRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Connector", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Connector == nil {
				m.Connector = &IDPConnector{}
			}
			if err := m.Connector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateIDPConnectorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateIDPConnectorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateIDPConnectorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListIDPConnectorsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListIDPConnectorsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListIDPConnectorsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListIDPConnectorsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListIDPConnectorsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListIDPConnectorsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Connectors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Connectors = append(m.Connectors, &IDPConnector{})
			if err := m.Connectors[len(m.Connectors)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetIDPConnectorRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetIDPConnectorRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetIDPConnectorRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetIDPConnectorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetIDPConnectorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetIDPConnectorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Connector", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Connector == nil {
				m.Connector = &IDPConnector{}
			}
			if err := m.Connector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteIDPConnectorRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteIDPConnectorRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteIDPConnectorRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteIDPConnectorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteIDPConnectorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteIDPConnectorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OIDCClient) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OIDCClient: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OIDCClient: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedirectUris", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RedirectUris = append(m.RedirectUris, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrustedPeers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrustedPeers = append(m.TrustedPeers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Secret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateOIDCClientRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateOIDCClientRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateOIDCClientRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Client", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Client == nil {
				m.Client = &OIDCClient{}
			}
			if err := m.Client.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateOIDCClientResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateOIDCClientResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateOIDCClientResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Client", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Client == nil {
				m.Client = &OIDCClient{}
			}
			if err := m.Client.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetOIDCClientRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetOIDCClientRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetOIDCClientRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetOIDCClientResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetOIDCClientResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetOIDCClientResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Client", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Client == nil {
				m.Client = &OIDCClient{}
			}
			if err := m.Client.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListOIDCClientsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListOIDCClientsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListOIDCClientsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListOIDCClientsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListOIDCClientsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListOIDCClientsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clients", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Clients = append(m.Clients, &OIDCClient{})
			if err := m.Clients[len(m.Clients)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateOIDCClientRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateOIDCClientRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateOIDCClientRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Client", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Client == nil {
				m.Client = &OIDCClient{}
			}
			if err := m.Client.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateOIDCClientResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateOIDCClientResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateOIDCClientResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteOIDCClientRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteOIDCClientRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteOIDCClientRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthIdentity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthIdentity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteOIDCClientResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteOIDCClientResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteOIDCClientResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteAllRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteAllRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteAllRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteAllResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteAllResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteAllResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipIdentity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthIdentity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipIdentity(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowIdentity
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowIdentity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthIdentity
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupIdentity
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthIdentity
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthIdentity        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowIdentity          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupIdentity = fmt.Errorf("proto: unexpected end of group")
)
