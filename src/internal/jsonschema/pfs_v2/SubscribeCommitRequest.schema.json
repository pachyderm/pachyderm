{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/SubscribeCommitRequest",
    "definitions": {
        "SubscribeCommitRequest": {
            "properties": {
                "repo": {
                    "$ref": "#/definitions/pfs_v2.Repo",
                    "additionalProperties": false
                },
                "branch": {
                    "type": "string"
                },
                "from": {
                    "$ref": "#/definitions/pfs_v2.Commit",
                    "additionalProperties": false,
                    "description": "only commits created since this commit are returned"
                },
                "state": {
                    "enum": [
                        "COMMIT_STATE_UNKNOWN",
                        "STARTED",
                        "READY",
                        "FINISHING",
                        "FINISHED"
                    ],
                    "type": "string",
                    "title": "Commit State",
                    "description": "CommitState describes the states a commit can be in. The states are increasingly specific, i.e. a commit that is FINISHED also counts as STARTED."
                },
                "all": {
                    "type": "boolean",
                    "description": "Return commits of all kinds (without this, aliases are excluded)"
                },
                "originKind": {
                    "enum": [
                        "ORIGIN_KIND_UNKNOWN",
                        "USER",
                        "AUTO",
                        "FSCK"
                    ],
                    "type": "string",
                    "title": "Origin Kind",
                    "description": "These are the different places where a commit may be originated from"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Subscribe Commit Request"
        },
        "pfs_v2.Branch": {
            "properties": {
                "repo": {
                    "$ref": "#/definitions/pfs_v2.Repo",
                    "additionalProperties": false
                },
                "name": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Branch"
        },
        "pfs_v2.Commit": {
            "properties": {
                "repo": {
                    "$ref": "#/definitions/pfs_v2.Repo",
                    "additionalProperties": false
                },
                "id": {
                    "type": "string"
                },
                "branch": {
                    "$ref": "#/definitions/pfs_v2.Branch",
                    "additionalProperties": false,
                    "description": "only used by the client"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Commit",
            "description": "Commit is a reference to a commit (e.g. the collection of branches and the collection of currently-open commits in etcd are collections of Commit protos)"
        },
        "pfs_v2.Project": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Project"
        },
        "pfs_v2.Repo": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/pfs_v2.Project",
                    "additionalProperties": false
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "//  PFS Data structures (stored in etcd)",
            "description": "//  PFS Data structures (stored in etcd)"
        }
    }
}