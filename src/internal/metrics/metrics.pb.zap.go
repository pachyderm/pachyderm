// Code generated by protoc-gen-zap (etc/proto/protoc-gen-zap). DO NOT EDIT.
//
// source: internal/metrics/metrics.proto

package metrics

import (
	zapcore "go.uber.org/zap/zapcore"
)

func (x *Metrics) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddString("cluster_id", x.ClusterId)
	enc.AddString("pod_id", x.PodId)
	enc.AddInt64("nodes", x.Nodes)
	enc.AddString("version", x.Version)
	enc.AddInt64("repos", x.Repos)
	enc.AddInt64("commits", x.Commits)
	enc.AddInt64("files", x.Files)
	enc.AddUint64("bytes", x.Bytes)
	enc.AddInt64("jobs", x.Jobs)
	enc.AddInt64("pipelines", x.Pipelines)
	enc.AddInt64("archived_commits", x.ArchivedCommits)
	enc.AddInt64("cancelled_commits", x.CancelledCommits)
	enc.AddString("activation_code", x.ActivationCode)
	enc.AddUint64("max_branches", x.MaxBranches)
	enc.AddInt64("pps_spout", x.PpsSpout)
	enc.AddInt64("pps_spout_service", x.PpsSpoutService)
	enc.AddInt64("cfg_egress", x.CfgEgress)
	enc.AddInt64("cfg_standby", x.CfgStandby)
	enc.AddInt64("cfg_s3gateway", x.CfgS3Gateway)
	enc.AddInt64("cfg_services", x.CfgServices)
	enc.AddInt64("cfg_errcmd", x.CfgErrcmd)
	enc.AddInt64("cfg_tfjob", x.CfgTfjob)
	enc.AddInt64("input_group", x.InputGroup)
	enc.AddInt64("input_join", x.InputJoin)
	enc.AddInt64("input_cross", x.InputCross)
	enc.AddInt64("input_union", x.InputUnion)
	enc.AddInt64("input_cron", x.InputCron)
	enc.AddInt64("input_git", x.InputGit)
	enc.AddInt64("input_pfs", x.InputPfs)
	enc.AddInt64("input_commit", x.InputCommit)
	enc.AddInt64("input_join_on", x.InputJoinOn)
	enc.AddInt64("input_outer_join", x.InputOuterJoin)
	enc.AddInt64("input_lazy", x.InputLazy)
	enc.AddInt64("input_empty_files", x.InputEmptyFiles)
	enc.AddInt64("input_s3", x.InputS3)
	enc.AddInt64("input_trigger", x.InputTrigger)
	enc.AddFloat32("resource_cpu_req", x.ResourceCpuReq)
	enc.AddFloat32("resource_cpu_req_max", x.ResourceCpuReqMax)
	enc.AddString("resource_mem_req", x.ResourceMemReq)
	enc.AddInt64("resource_gpu_req", x.ResourceGpuReq)
	enc.AddInt64("resource_gpu_req_max", x.ResourceGpuReqMax)
	enc.AddString("resource_disk_req", x.ResourceDiskReq)
	enc.AddFloat32("resource_cpu_limit", x.ResourceCpuLimit)
	enc.AddFloat32("resource_cpu_limit_max", x.ResourceCpuLimitMax)
	enc.AddString("resource_mem_limit", x.ResourceMemLimit)
	enc.AddInt64("resource_gpu_limit", x.ResourceGpuLimit)
	enc.AddInt64("resource_gpu_limit_max", x.ResourceGpuLimitMax)
	enc.AddString("resource_disk_limit", x.ResourceDiskLimit)
	enc.AddUint64("max_parallelism", x.MaxParallelism)
	enc.AddUint64("min_parallelism", x.MinParallelism)
	enc.AddUint64("num_parallelism", x.NumParallelism)
	enc.AddInt64("enterprise_failures", x.EnterpriseFailures)
	return nil
}
