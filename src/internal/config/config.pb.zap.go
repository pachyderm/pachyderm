// Code generated by protoc-gen-zap (etc/proto/protoc-gen-zap). DO NOT EDIT.
//
// source: internal/config/config.proto

package config

import (
	fmt "fmt"
	zapcore "go.uber.org/zap/zapcore"
)

func (x *Config) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddString("user_id", x.UserId)
	enc.AddObject("v1", x.V1)
	enc.AddObject("v2", x.V2)
	return nil
}

func (x *ConfigV1) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddString("pachd_address", x.PachdAddress)
	enc.AddString("server_cas", x.ServerCas)
	enc.AddString("session_token", x.SessionToken)
	enc.AddString("active_transaction", x.ActiveTransaction)
	return nil
}

func (x *ConfigV2) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddString("active_context", x.ActiveContext)
	enc.AddString("active_enterprise_context", x.ActiveEnterpriseContext)
	enc.AddObject("contexts", zapcore.ObjectMarshalerFunc(func(enc zapcore.ObjectEncoder) error {
		for k, v := range x.Contexts {
			enc.AddObject(fmt.Sprintf("%v", k), v)
		}
		return nil
	}))
	enc.AddBool("metrics", x.Metrics)
	enc.AddInt64("max_shell_completions", x.MaxShellCompletions)
	return nil
}

func (x *Context) MarshalLogObject(enc zapcore.ObjectEncoder) error {
	if x == nil {
		return nil
	}
	enc.AddString("source", x.Source.String())
	enc.AddString("pachd_address", x.PachdAddress)
	enc.AddString("server_cas", x.ServerCas)
	enc.AddString("session_token", x.SessionToken)
	enc.AddString("active_transaction", x.ActiveTransaction)
	enc.AddString("cluster_name", x.ClusterName)
	enc.AddString("auth_info", x.AuthInfo)
	enc.AddString("namespace", x.Namespace)
	enc.AddObject("port_forwarders", zapcore.ObjectMarshalerFunc(func(enc zapcore.ObjectEncoder) error {
		for k, v := range x.PortForwarders {
			enc.AddUint32(fmt.Sprintf("%v", k), v)
		}
		return nil
	}))
	enc.AddString("cluster_deployment_id", x.ClusterDeploymentId)
	enc.AddBool("enterprise_server", x.EnterpriseServer)
	enc.AddString("project", x.Project)
	return nil
}
