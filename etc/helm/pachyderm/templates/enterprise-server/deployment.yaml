{{- /*
SPDX-FileCopyrightText: Pachyderm, Inc. <info@pachyderm.com>
SPDX-License-Identifier: Apache-2.0
*/ -}}
{{- if .Values.enterpriseServer.enabled -}}
{{- if .Values.pachd.enabled -}}
{{- fail "pachd and enterpriseServer shall not be enabled at the same time in the same namespace" -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pach-enterprise
    suite: pachyderm
  name: pach-enterprise
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pach-enterprise
      suite: pachyderm
  strategy: {}
  template:
    metadata:
      labels:
        app: pach-enterprise
        suite: pachyderm
        {{- if .Values.enterpriseServer.podLabels }}
        {{- toYaml .Values.enterpriseServer.podLabels | nindent 8 }}
        {{- end }}
      name: pach-enterprise
      namespace: {{ .Release.Namespace }}
      annotations:
        checksum/helm-values: {{ toJson .Values | sha256sum }}
        {{- if .Values.enterpriseServer.annotations }}
        {{ toYaml .Values.enterpriseServer.annotations | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.enterpriseServer.priorityClassName }}
      priorityClassName: {{ .Values.enterpriseServer.priorityClassName }}
      {{- end }}
      {{-  if .Values.enterpriseServer.affinity }}
      affinity: {{ toYaml .Values.enterpriseServer.affinity | nindent 8 }}
      {{- end }}
{{- include "pachyderm.imagePullSecrets" . | indent 6 }}
      containers:
      - command:
        - /pachd
        - --mode=enterprise
        env:
        - name: POSTGRES_HOST
          value: {{ required "postgresql host required" .Values.global.postgresql.postgresqlHost | quote }}
        - name: POSTGRES_PORT
          value: {{ required "postgresql port required" .Values.global.postgresql.postgresqlPort | quote }}
        - name: PG_BOUNCER_HOST
          value: pg-bouncer # Must match pgbouncer service name
        - name: PG_BOUNCER_PORT
          value: "5432" # Must match pgbouncer service port
        - name: POSTGRES_DATABASE
          value: {{ required "postgresql database name required" .Values.global.postgresql.postgresqlDatabase | quote }}
        - name: POSTGRES_USER
          value: {{ required "postgresql username required" .Values.global.postgresql.postgresqlUsername | quote }}
        {{- if .Values.global.postgresql.ssl }}
        - name: POSTGRES_SSL
          value: "require"
        {{- end }}
        {{- if .Values.cloudsqlAuthProxy.iamLogin }}
        - name: POSTGRES_PASSWORD
          value: "Using-iamLogin"
        {{- else }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.postgresql.postgresqlExistingSecretName | default "postgres" }}
              key: {{ .Values.global.postgresql.postgresqlExistingSecretKey | default "postgresql-password" }}
        {{- end }}
        {{- if and .Values.enterpriseServer.tls.enabled .Values.global.customCaCerts }}
        - name: SSL_CERT_DIR
          value:  /pachd-tls-cert
        {{- end }}
        {{ if .Values.global.proxy }}
        - name: http_proxy
          value: {{ .Values.global.proxy }}
        - name: https_proxy
          value:  {{.Values.global.proxy}}
        - name: HTTP_PROXY
          value:  {{.Values.global.proxy}}
        - name: HTTPS_PROXY
          value:  {{.Values.global.proxy}}
        {{ end }}
        {{ if .Values.global.noProxy }}
        - name: no_proxy
          value:  {{.Values.global.noProxy}}
        - name: NO_PROXY
          value:  {{.Values.global.noProxy}}
        {{ end }}
        {{ if .Values.global.postgresql.identityDatabaseFullNameOverride }}
        - name: IDENTITY_SERVER_DATABASE
          value: {{ .Values.global.postgresql.identityDatabaseFullNameOverride }}
        {{ end }}
        {{- if (include "pachyderm.enterpriseLicenseKeySecretName" . ) }}
        - name: LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ (include "pachyderm.enterpriseLicenseKeySecretName" . ) | trim | quote }}
              key: "enterprise-license-key"
        - name: IDP_CONNECTORS
          valueFrom:
            secretKeyRef:
              name: {{ (include "pachyderm.upstreamIDPsSecretName" .) | trim | quote }}
              key: "upstream-idps"
        - name: IDP_CONFIG
          valueFrom:
            configMapKeyRef:
              name: "pachyderm-identity-config"
              key: "identity-config"
        {{- end }}
        {{- if (include "pachyderm.enterpriseSecretSecretName" . ) }}
        - name: ENTERPRISE_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ (include "pachyderm.enterpriseSecretSecretName" . ) | trim | quote }}
              key: "enterprise-secret"
        {{- end }}
        {{- if and (include "pachyderm.withEnterprise" .) .Values.pachd.activateAuth }}
        - name: ACTIVATE_AUTH
          value: "true"
        - name: AUTH_ROOT_TOKEN
          valueFrom:
            secretKeyRef:
            {{- if .Values.pachd.rootTokenSecretName }}
              name: {{ .Values.pachd.rootTokenSecretName | quote }}
            {{- else }}
              name: "pachyderm-auth"
            {{- end }}
              key: "root-token"
        - name: AUTH_CONFIG
          valueFrom:
            secretKeyRef:
              name: "pachyderm-auth"
              key: "auth-config"
        - name: AUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              {{- if .Values.pachd.oauthClientSecretSecretName }}
              name: {{ .Values.pachd.oauthClientSecretSecretName | quote }}
              {{- else }}
              name: "pachyderm-auth"
              {{- end }}
              key: "pachd-oauth-client-secret"
        - name: IDP_CLIENTS
          valueFrom:
            configMapKeyRef:
              name: "pachyderm-identity-config"
              key: "oidc-clients"
        {{- if or .Values.oidc.additionalClientsSecretName .Values.oidc.additionalClients }}
        - name: IDP_ADDITIONAL_CLIENTS
          valueFrom:
            secretKeyRef:
              {{- if .Values.oidc.additionalClientsSecretName }}
              name: {{ .Values.oidc.additionalClientsSecretName }}
              {{- else }}
              name: "pachyderm-identity-extras"
              {{- end }}
              key: "additional-oidc-clients"
        {{- end }}
        {{- if .Values.pachd.additionalTrustedPeers }}
        - name: TRUSTED_PEERS
          valueFrom:
            configMapKeyRef:
              name: "pachyderm-identity-config"
              key: "trusted-peers"
        {{- end }}
        {{- if or (include  "pachyderm.mockIDPRoleBindings" .) .Values.pachd.pachAuthClusterRoleBindings }}
        - name: AUTH_CLUSTER_RBAC
          valueFrom:
            secretKeyRef:
              name: "pachyderm-auth"
              key: "cluster-role-bindings"
        {{- end }}
        {{- end }}
        {{- if .Values.console.enabled }}
        - name: CONSOLE_OAUTH_ID
          valueFrom:
            secretKeyRef:
              name: pachyderm-console-secret
              key: OAUTH_CLIENT_ID
        - name: CONSOLE_OAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: pachyderm-console-secret
              key: OAUTH_CLIENT_SECRET
        {{- end }}
        {{- if .Release.IsUpgrade }}
        - name: UPGRADE_NO_OP
          value: {{ randAlphaNum 32 }}
        {{- end }}
        envFrom:
          - secretRef:
              name: pachyderm-deployment-id-secret
        image: "{{ .Values.enterpriseServer.image.repository }}:{{ default .Chart.AppVersion .Values.enterpriseServer.image.tag }}"
        imagePullPolicy: {{ .Values.enterpriseServer.image.pullPolicy }}
        name: pachd
        ports:
        - containerPort: 1650
          name: api-grpc-port
          protocol: TCP
        - containerPort: 1653
          name: peer-port
          protocol: TCP
        - containerPort: 1657
          name: oidc-port
          protocol: TCP
        - containerPort: 1658
          name: identity-port
          protocol: TCP
        - containerPort: 1656
          name: prom-metrics
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /pachd
            - --readiness
        {{- if .Values.enterpriseServer.resources }}
        resources: {{ toYaml .Values.enterpriseServer.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        {{- if .Values.enterpriseServer.tls.enabled }}
        - mountPath: /pachd-tls-cert
          name: pachd-tls-cert
        {{- end }}
      {{- if .Values.global.securityContexts.enabled }}
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
              drop:
              - all
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      {{- end }}
      {{- if .Values.enterpriseServer.nodeSelector }}
      nodeSelector: {{ toYaml .Values.enterpriseServer.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.enterpriseServer.tolerations }}
      tolerations: {{ toYaml .Values.enterpriseServer.tolerations | nindent 8 }}
      {{- end }}
      volumes:
      - name: tmp
        emptyDir: {}
      {{- if .Values.enterpriseServer.tls.enabled }}
      - name: pachd-tls-cert
        secret:
          secretName: {{ required "If enterpriseServer.tls.enabled, you must set enterpriseServer.tls.secretName" .Values.enterpriseServer.tls.secretName | quote }}
      {{- end }}
{{- end -}}
