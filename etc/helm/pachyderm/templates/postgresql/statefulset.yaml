{{- /*
SPDX-FileCopyrightText: Pachyderm, Inc. <info@pachyderm.com>
SPDX-License-Identifier: Apache-2.0
*/ -}}
{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: postgres
    suite: pachyderm
  name: postgres
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      suite: pachyderm
  serviceName: postgres-headless
  template:
    metadata:
      labels:
        app: postgres
        suite: pachyderm
      name: postgres
      namespace: default
    spec:
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret | quote }}
      {{- end }}
      containers:
      - env:
        - name: POSTGRES_DB
          value: {{ .Values.global.postgresql.postgresqlDatabase | quote }}
        - name: POSTGRES_USER
          value: {{ .Values.global.postgresql.postgresqlUsername | quote }}
        - name: POSTGRES_HOST_AUTH_METHOD
          # TODO: Remove trust as auth method
          value: trust
        image: postgres:13.0-alpine
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
          name: client-port
        {{- if .Values.postgresql.resources }}
        resources: {{ toYaml .Values.postgresql.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-storage
        - mountPath: /docker-entrypoint-initdb.d
          name: postgres-init
      volumes:
      - configMap:
          name: postgres-init-cm
        name: postgres-init
  volumeClaimTemplates:
  - metadata:
      labels:
        app: postgres
        suite: pachyderm
      name: postgres-storage
      namespace: {{ .Release.Namespace }}
    spec:
      storageClassName: {{ .Values.postgresql.storageClass }}
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.postgresql.storageSize }}
{{- end }}
