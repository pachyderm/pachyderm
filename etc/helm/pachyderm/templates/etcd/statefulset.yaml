{{- /*
SPDX-FileCopyrightText: Pachyderm, Inc. <info@pachyderm.com>
SPDX-License-Identifier: Apache-2.0
*/ -}}
{{- if le .Values.etcd.dynamicNodes 0.0 -}}
{{ fail "dynamicNodes must be > 0" }}
{{ end -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: etcd
    suite: pachyderm
  name: etcd
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.etcd.dynamicNodes }}
  selector:
    matchLabels:
      app: etcd
      suite: pachyderm
  serviceName: etcd-headless
  template:
    metadata:
      labels:
        app: etcd
        suite: pachyderm
        {{- if .Values.etcd.podLabels }}
        {{- toYaml .Values.etcd.podLabels | nindent 8 }}
        {{- end }}
      name: etcd
      namespace: {{ .Release.Namespace }}
      {{- if .Values.etcd.annotations }}
      annotations: {{ toYaml .Values.etcd.annotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.etcd.priorityClassName }}
      priorityClassName: {{ .Values.etcd.priorityClassName }}
      {{- end }}
      {{-  if .Values.etcd.affinity }}
      affinity: {{ toYaml .Values.etcd.affinity | nindent 8 }}
      {{- end }}
{{- include "pachyderm.imagePullSecrets" . | indent 6 }}
      containers:
      - args:
        - '"/usr/local/bin/etcd" "--listen-client-urls=http://0.0.0.0:2379" "--advertise-client-urls=http://0.0.0.0:2379"
          "--data-dir=/var/data/etcd" "--auto-compaction-retention=1" "--max-txn-ops={{ .Values.etcd.maxTxnOps }}"
          "--max-request-bytes=52428800" "--quota-backend-bytes=8589934592" "--listen-peer-urls=http://0.0.0.0:2380"
          "--initial-cluster-token=pach-cluster" "--initial-advertise-peer-urls=http://${ETCD_NAME}.etcd-headless.${NAMESPACE}.svc.cluster.local:2380"
          "--initial-cluster={{ range $i, $e := until (.Values.etcd.dynamicNodes | int) }}etcd-{{$e}}=http://etcd-{{$e}}.etcd-headless.${NAMESPACE}.svc.cluster.local:2380,{{ end }}"'
        command:
        - /bin/sh
        - -c
        env:
        - name: ETCD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ .Values.etcd.image.repository }}:{{ .Values.etcd.image.tag }}"
        imagePullPolicy: {{ .Values.etcd.image.pullPolicy }}
        name: etcd
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: client-port
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: client-port
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 2379
          name: client-port
        - containerPort: 2380
          name: peer-port
        {{- if .Values.etcd.resources }}
        resources: {{ toYaml .Values.etcd.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /var/data/etcd
          name: etcd-storage
      {{- if .Values.global.securityContexts.enabled }}
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
              drop:
              - all
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      {{- end }}
      {{-  if .Values.etcd.nodeSelector }}
      nodeSelector: {{ toYaml .Values.etcd.nodeSelector | nindent 8 }}
      {{- end }}
      {{-  if .Values.etcd.tolerations }}
      tolerations: {{ toYaml .Values.etcd.tolerations | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      labels:
        app: etcd
        suite: pachyderm
      name: etcd-storage
      namespace: {{ .Release.Namespace }}
    spec:
      {{- if .Values.etcd.storageClass }}
      storageClassName: {{ .Values.etcd.storageClass }}
      {{- end }}
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.etcd.storageSize }}
