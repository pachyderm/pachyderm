apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: ""
    suite: pachyderm
  name: pachyderm
  namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: ""
    suite: pachyderm
  name: pachyderm-worker
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app: ""
    suite: pachyderm
  name: pachyderm
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - pods
  - pods/log
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: ""
    suite: pachyderm
  name: pachyderm
  namespace: default
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: pachyderm
subjects:
- kind: ServiceAccount
  name: pachyderm
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    app: ""
    suite: pachyderm
  name: pachyderm-worker
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - update
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: ""
    suite: pachyderm
  name: pachyderm-worker
  namespace: default
roleRef:
  apiGroup: ""
  kind: Role
  name: pachyderm-worker
subjects:
- kind: ServiceAccount
  name: pachyderm-worker
  namespace: default
---
allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    app: etcd
    suite: pachyderm
  name: etcd-storage-class
  namespace: default
parameters:
  type: pd-ssd
provisioner: kubernetes.io/gce-pd
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: etcd
    suite: pachyderm
  name: etcd-headless
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: peer-port
    port: 2380
    targetPort: 0
  selector:
    app: etcd
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: etcd
    suite: pachyderm
  name: etcd
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: etcd
      suite: pachyderm
  serviceName: etcd-headless
  template:
    metadata:
      labels:
        app: etcd
        suite: pachyderm
      name: etcd
      namespace: default
    spec:
      containers:
      - args:
        - '"/usr/local/bin/etcd" "--listen-client-urls=http://0.0.0.0:2379" "--advertise-client-urls=http://0.0.0.0:2379"
          "--data-dir=/var/data/etcd" "--auto-compaction-retention=1" "--max-txn-ops=10000"
          "--max-request-bytes=52428800" "--quota-backend-bytes=8589934592" "--listen-peer-urls=http://0.0.0.0:2380"
          "--initial-cluster-token=pach-cluster" "--initial-advertise-peer-urls=http://${ETCD_NAME}.etcd-headless.${NAMESPACE}.svc.cluster.local:2380"
          "--initial-cluster=etcd-0=http://etcd-0.etcd-headless.${NAMESPACE}.svc.cluster.local:2380,etcd-1=http://etcd-1.etcd-headless.${NAMESPACE}.svc.cluster.local:2380,etcd-2=http://etcd-2.etcd-headless.${NAMESPACE}.svc.cluster.local:2380"'
        command:
        - /bin/sh
        - -c
        env:
        - name: ETCD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: pachyderm/etcd:v3.3.5
        imagePullPolicy: IfNotPresent
        name: etcd
        ports:
        - containerPort: 2379
          name: client-port
        - containerPort: 2380
          name: peer-port
        resources:
          requests:
            cpu: "1"
            memory: 2G
        volumeMounts:
        - mountPath: /var/data/etcd
          name: etcd-storage
      imagePullSecrets: null
  volumeClaimTemplates:
  - metadata:
      annotations:
        volume.beta.kubernetes.io/storage-class: etcd-storage-class
      labels:
        app: etcd
        suite: pachyderm
      name: etcd-storage
      namespace: default
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: etcd
    suite: pachyderm
  name: etcd
  namespace: default
spec:
  ports:
  - name: client-port
    port: 2379
    targetPort: 0
  selector:
    app: etcd
  type: NodePort
status:
  loadBalancer: {}
---
allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    app: postgres
    suite: pachyderm
  name: postgres-storage-class
  namespace: default
parameters:
  type: pd-ssd
provisioner: kubernetes.io/gce-pd
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: postgres
    suite: pachyderm
  name: postgres-headless
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: client-port
    port: 5432
    targetPort: 0
  selector:
    app: postgres
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: postgres
    suite: pachyderm
  name: postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      suite: pachyderm
  serviceName: postgres-headless
  template:
    metadata:
      labels:
        app: postgres
        suite: pachyderm
      name: postgres
      namespace: default
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: pgc
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        image: postgres:13.0-alpine
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
          name: client-port
        resources:
          requests:
            cpu: "1"
            memory: 2G
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-storage
      imagePullSecrets: null
  volumeClaimTemplates:
  - metadata:
      annotations:
        volume.beta.kubernetes.io/storage-class: postgres-storage-class
      labels:
        app: postgres
        suite: pachyderm
      name: postgres-storage
      namespace: default
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: postgres
    suite: pachyderm
  name: postgres
  namespace: default
spec:
  ports:
  - name: client-port
    port: 5432
    targetPort: 0
  selector:
    app: postgres
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "656"
    prometheus.io/scrape: "true"
  creationTimestamp: null
  labels:
    app: pachd
    suite: pachyderm
  name: pachd
  namespace: default
spec:
  ports:
  - name: api-grpc-port
    nodePort: 30650
    port: 650
    targetPort: 0
  - name: trace-port
    nodePort: 30651
    port: 651
    targetPort: 0
  - name: api-http-port
    nodePort: 30652
    port: 652
    targetPort: 0
  - name: saml-port
    nodePort: 30654
    port: 654
    targetPort: 0
  - name: oidc-port
    nodePort: 30657
    port: 657
    targetPort: 0
  - name: api-git-port
    nodePort: 30655
    port: 655
    targetPort: 0
  - name: s3gateway-port
    nodePort: 30600
    port: 600
    targetPort: 0
  selector:
    app: pachd
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: pachd
    suite: pachyderm
  name: pachd-peer
  namespace: default
spec:
  ports:
  - name: api-grpc-peer-port
    port: 30653
    targetPort: 653
  selector:
    app: pachd
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: pachd
    suite: pachyderm
  name: pachd
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pachd
      suite: pachyderm
  strategy: {}
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: ""
      creationTimestamp: null
      labels:
        app: pachd
        suite: pachyderm
      name: pachd
      namespace: default
    spec:
      containers:
      - command:
        - /pachd
        env:
        - name: PACH_ROOT
          value: /pach
        - name: ETCD_PREFIX
        - name: NUM_SHARDS
          value: "16"
        - name: STORAGE_BACKEND
          value: GOOGLE
        - name: STORAGE_HOST_PATH
        - name: WORKER_IMAGE
          value: pachyderm/worker:2.0.0
        - name: IMAGE_PULL_SECRET
        - name: WORKER_SIDECAR_IMAGE
          value: pachyderm/pachd:2.0.0
        - name: WORKER_IMAGE_PULL_POLICY
          value: IfNotPresent
        - name: WORKER_SERVICE_ACCOUNT
          value: pachyderm-worker
        - name: PACHD_VERSION
          value: 2.0.0
        - name: METRICS
          value: "true"
        - name: LOG_LEVEL
          value: info
        - name: BLOCK_CACHE_BYTES
          value: 0G
        - name: IAM_ROLE
        - name: NO_EXPOSE_DOCKER_SOCKET
          value: "false"
        - name: PACHYDERM_AUTHENTICATION_DISABLED_FOR_TESTING
          value: "false"
        - name: PACH_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: PACHD_MEMORY_REQUEST
          valueFrom:
            resourceFieldRef:
              containerName: pachd
              divisor: "0"
              resource: requests.memory
        - name: EXPOSE_OBJECT_API
          value: "false"
        - name: CLUSTER_DEPLOYMENT_ID
          value: test
        - name: REQUIRE_CRITICAL_SERVERS_ONLY
          value: "false"
        - name: PACHD_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: PPS_WORKER_GRPC_PORT
          value: "80"
        - name: GOOGLE_BUCKET
          valueFrom:
            secretKeyRef:
              key: google-bucket
              name: pachyderm-storage-secret
              optional: true
        - name: GOOGLE_CRED
          valueFrom:
            secretKeyRef:
              key: google-cred
              name: pachyderm-storage-secret
              optional: true
        - name: MICROSOFT_CONTAINER
          valueFrom:
            secretKeyRef:
              key: microsoft-container
              name: pachyderm-storage-secret
              optional: true
        - name: MICROSOFT_ID
          valueFrom:
            secretKeyRef:
              key: microsoft-id
              name: pachyderm-storage-secret
              optional: true
        - name: MICROSOFT_SECRET
          valueFrom:
            secretKeyRef:
              key: microsoft-secret
              name: pachyderm-storage-secret
              optional: true
        - name: MINIO_BUCKET
          valueFrom:
            secretKeyRef:
              key: minio-bucket
              name: pachyderm-storage-secret
              optional: true
        - name: MINIO_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: minio-endpoint
              name: pachyderm-storage-secret
              optional: true
        - name: MINIO_ID
          valueFrom:
            secretKeyRef:
              key: minio-id
              name: pachyderm-storage-secret
              optional: true
        - name: MINIO_SECRET
          valueFrom:
            secretKeyRef:
              key: minio-secret
              name: pachyderm-storage-secret
              optional: true
        - name: MINIO_SECURE
          valueFrom:
            secretKeyRef:
              key: minio-secure
              name: pachyderm-storage-secret
              optional: true
        - name: MINIO_SIGNATURE
          valueFrom:
            secretKeyRef:
              key: minio-signature
              name: pachyderm-storage-secret
              optional: true
        - name: AMAZON_REGION
          valueFrom:
            secretKeyRef:
              key: amazon-region
              name: pachyderm-storage-secret
              optional: true
        - name: AMAZON_BUCKET
          valueFrom:
            secretKeyRef:
              key: amazon-bucket
              name: pachyderm-storage-secret
              optional: true
        - name: AMAZON_ID
          valueFrom:
            secretKeyRef:
              key: amazon-id
              name: pachyderm-storage-secret
              optional: true
        - name: AMAZON_SECRET
          valueFrom:
            secretKeyRef:
              key: amazon-secret
              name: pachyderm-storage-secret
              optional: true
        - name: AMAZON_TOKEN
          valueFrom:
            secretKeyRef:
              key: amazon-token
              name: pachyderm-storage-secret
              optional: true
        - name: AMAZON_VAULT_ADDR
          valueFrom:
            secretKeyRef:
              key: amazon-vault-addr
              name: pachyderm-storage-secret
              optional: true
        - name: AMAZON_VAULT_ROLE
          valueFrom:
            secretKeyRef:
              key: amazon-vault-role
              name: pachyderm-storage-secret
              optional: true
        - name: AMAZON_VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              key: amazon-vault-token
              name: pachyderm-storage-secret
              optional: true
        - name: AMAZON_DISTRIBUTION
          valueFrom:
            secretKeyRef:
              key: amazon-distribution
              name: pachyderm-storage-secret
              optional: true
        - name: CUSTOM_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: custom-endpoint
              name: pachyderm-storage-secret
              optional: true
        - name: RETRIES
          valueFrom:
            secretKeyRef:
              key: retries
              name: pachyderm-storage-secret
              optional: true
        - name: TIMEOUT
          valueFrom:
            secretKeyRef:
              key: timeout
              name: pachyderm-storage-secret
              optional: true
        - name: UPLOAD_ACL
          valueFrom:
            secretKeyRef:
              key: upload-acl
              name: pachyderm-storage-secret
              optional: true
        - name: REVERSE
          valueFrom:
            secretKeyRef:
              key: reverse
              name: pachyderm-storage-secret
              optional: true
        - name: PART_SIZE
          valueFrom:
            secretKeyRef:
              key: part-size
              name: pachyderm-storage-secret
              optional: true
        - name: MAX_UPLOAD_PARTS
          valueFrom:
            secretKeyRef:
              key: max-upload-parts
              name: pachyderm-storage-secret
              optional: true
        - name: DISABLE_SSL
          valueFrom:
            secretKeyRef:
              key: disable-ssl
              name: pachyderm-storage-secret
              optional: true
        - name: NO_VERIFY_SSL
          valueFrom:
            secretKeyRef:
              key: no-verify-ssl
              name: pachyderm-storage-secret
              optional: true
        - name: OBJ_LOG_OPTS
          valueFrom:
            secretKeyRef:
              key: log-options
              name: pachyderm-storage-secret
              optional: true
        - name: STORAGE_UPLOAD_CONCURRENCY_LIMIT
          value: "100"
        - name: STORAGE_PUT_FILE_CONCURRENCY_LIMIT
          value: "100"
        image: pachyderm/pachd:2.0.0
        imagePullPolicy: IfNotPresent
        name: pachd
        ports:
        - containerPort: 650
          name: api-grpc-port
          protocol: TCP
        - containerPort: 651
          name: trace-port
        - containerPort: 652
          name: api-http-port
          protocol: TCP
        - containerPort: 653
          name: peer-port
          protocol: TCP
        - containerPort: 655
          name: api-git-port
          protocol: TCP
        - containerPort: 654
          name: saml-port
          protocol: TCP
        - containerPort: 657
          name: oidc-port
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /pachd
            - --readiness
        resources:
          limits:
            cpu: "1"
            memory: 2G
          requests:
            cpu: "1"
            memory: 2G
        volumeMounts:
        - mountPath: /pach
          name: pach-disk
        - mountPath: /pachyderm-storage-secret
          name: pachyderm-storage-secret
      serviceAccountName: pachyderm
      volumes:
      - name: pach-disk
      - name: pachyderm-storage-secret
        secret:
          secretName: pachyderm-storage-secret
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: dash
    suite: pachyderm
  name: dash
  namespace: default
spec:
  ports:
  - name: dash-http
    nodePort: 30080
    port: 8080
    targetPort: 0
  - name: grpc-proxy-http
    nodePort: 30081
    port: 8081
    targetPort: 0
  selector:
    app: dash
    suite: pachyderm
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: dash
    suite: pachyderm
  name: dash
  namespace: default
spec:
  selector:
    matchLabels:
      app: dash
      suite: pachyderm
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dash
        suite: pachyderm
      name: dash
      namespace: default
    spec:
      containers:
      - image: pachyderm/dash:0.5.57
        imagePullPolicy: IfNotPresent
        name: dash
        ports:
        - containerPort: 8080
          name: dash-http
        resources: {}
      - image: pachyderm/grpc-proxy:0.4.10
        imagePullPolicy: IfNotPresent
        name: grpc-proxy
        ports:
        - containerPort: 8081
          name: grpc-proxy-http
        resources: {}
status: {}
---
apiVersion: v1
data:
  google-bucket: cGFjaC1idWNrZXQ=
  google-cred: ""
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app: pachyderm-storage-secret
    suite: pachyderm
  name: pachyderm-storage-secret
  namespace: default
