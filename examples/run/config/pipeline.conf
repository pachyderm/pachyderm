# Build configuration file for pachyderm pipeline

# Name of pachyderm repository that serves as input to the pipeline
PIPELINE_REPO=input_repository

# Name of the pipeline = folder name (can be manually overwritten)
PIPELINE_NAME=$(shell pwd | awk '{n=split($$0,a,"/"); print(a[n]);}')

#####################################################################
#                                                                   #
# In theory, the above two variables is all you need to change to   #
# get things going. Some knowledge of what one is doing is required #
# to change the variables below, so proceed with caution.           #
#                                                                   #
# Consider yourself warned!                                         #
#                                                                   #
#####################################################################

# Name of the pipe when created with pachctl create_pipeline
# By default, it's the same name as defined in $PIPELINE_NAME
# But since one can specify additional env variables to the _make_ command
# one could instantiate multiple instances of same variable with different name
PIPELINE_BUILD_NAME=$PIPELINE_NAME

# Template file for the pipe json config file
PIPELINE_BUILD_CONFIG_TEMPLATE_FILE=pipeline.pipeline.json

# Target pipeline config file (used for creating the pipeline with pachctl)
PIPELINE_BUILD_CONFIG_TARGET_FILE=pipeline.${PIPELINE_NAME}.json

# Location of docker image registry
PIPELINE_DOCKER_REGISTRY=docker.io
# DNS safe name for secrets
PIPELINE_NAME_SAFE=$(shell echo $(PIPELINE_NAME) | sed -e 's/_/-/g')
# The name of the secret containing login credentials
PIPELINE_DOCKER_REGISTRY_SECRETS=secret-registry-$(PIPELINE_SAFE_NAME)
# Login credentials, must be present in env at build time
PIPELINE_DOCKER_REGISTRY_USERNAME=$(DOCKER_REGISTRY_USERNAME)
PIPELINE_DOCKER_REGISTRY_PASSWORD=$(DOCKER_REGISTRY_PASSWORD)
PIPELINE_DOCKER_REGISTRY_EMAIL=$(DOCKER_REGISTRY_EMAIL)

# Name of the secrets file
# credentials must be present at build time in environment
PIPELINE_DOCKER_SECRETS=secret-docker-$(PIPELINE_NAME_SAFE)
# Where in the container the secrets will be mounted
PIPELINE_DOCKER_SECRETS_PATH=/tmp/$(PIPELINE_DOCKER_SECRETS)

# Docker image name
PIPELINE_DOCKER_IMAGE=$(PIPELINE_DOCKER_REGISTRY)/$(PIPELINE_DOCKER_REGISTRY_USERNAME)/$(PIPELINE_NAME)

# Where the contents of the ./src folder will be put in the Docker container
PIPELINE_DOCKER_HOME=/pipeline
# Main script that is run in the container to do the job
PIPELINE_DOCKER_SCRIPT=run.sh

# Location of containers input and output locations
# For multiple inputs use _INPUT_A, _INPUT_B
PIPELINE_INPUT="/pfs/${PIPELINE_REPO}"
PIPELINE_OUTPUT=/pfs/out

# Locations of host test input and output folders
PIPELINE_TEST_INPUT="test/in"
PIPELINE_TEST_OUTPUT="test/out"
