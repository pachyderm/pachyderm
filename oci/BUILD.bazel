load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@container_structure_test//:defs.bzl", "container_structure_test")
load("@rules_oci//oci:defs.bzl", "oci_image")
load("@rules_pkg//pkg:mappings.bzl", "pkg_files")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

NONROOT = "65532.65532"

NONROOT_USERNAME = "nonroot.nonroot"

pkg_tar(
    name = "dex_assets_tar",
    srcs = ["//dex-assets"],
    owner = NONROOT,
    ownername = NONROOT_USERNAME,
    strip_prefix = ".",
)

pkg_files(
    name = "license_pkg",
    srcs = ["//:LICENSE"],
    strip_prefix = ".",
)

pkg_files(
    name = "licenses_pkg",
    srcs = ["//licenses"],
    prefix = "/licenses",
    strip_prefix = ".",
)

pkg_tar(
    name = "licenses_tar",
    srcs = [
        ":license_pkg",
        ":licenses_pkg",
    ],
    owner = NONROOT,
    ownername = NONROOT_USERNAME,
)

pkg_tar(
    name = "pachd_host_tar",
    srcs = ["//src/server/cmd/pachd"],
    owner = NONROOT,
    ownername = NONROOT_USERNAME,
)

pkg_tar(
    name = "pachd_host_coverage_tar",
    srcs = ["//src/server/cmd/pachd:pachd_coverage"],
    owner = NONROOT,
    ownername = NONROOT_USERNAME,
    remap_paths = {
        "/pachd_coverage": "/pachd",
    },
)

platform_transition_filegroup(
    name = "pachd_linux_tar",
    srcs = [":pachd_host_tar"],
    target_platform = select({
        "@platforms//cpu:arm64": "@rules_go//go/toolchain:linux_arm64",
        "@platforms//cpu:x86_64": "@rules_go//go/toolchain:linux_amd64",
    }),
)

platform_transition_filegroup(
    name = "pachd_linux_coverage_tar",
    srcs = [":pachd_host_coverage_tar"],
    target_platform = select({
        "@platforms//cpu:arm64": "@rules_go//go/toolchain:linux_arm64",
        "@platforms//cpu:x86_64": "@rules_go//go/toolchain:linux_amd64",
    }),
)

oci_image(
    name = "pachd_image",
    base = "@distroless",
    entrypoint = ["/pachd"],
    tars = [
        ":licenses_tar",
        ":dex_assets_tar",
        ":pachd_linux_tar",
    ],
    visibility = ["//visibility:public"],
)

oci_image(
    name = "pachd_coverage_image",
    base = "@distroless",
    entrypoint = ["/pachd"],
    tars = [
        ":licenses_tar",
        ":dex_assets_tar",
        ":pachd_linux_coverage_tar",
    ],
    visibility = ["//visibility:public"],
)

container_structure_test(
    name = "pachd_image_test",
    size = "small",
    configs = ["pachd_image_test.yaml"],
    image = ":pachd_image",
)

container_structure_test(
    name = "pachd_coverage_image_test",
    size = "small",
    configs = ["pachd_image_test.yaml"],
    image = ":pachd_coverage_image",
)

pkg_tar(
    name = "pachctl_self_host_tar",
    srcs = ["//src/server/cmd/pachctl"],
    owner = NONROOT,
    ownername = NONROOT_USERNAME,
    package_dir = "/usr/local/bin",
)

platform_transition_filegroup(
    name = "pachctl_self_linux_tar",
    srcs = [":pachctl_self_host_tar"],
    target_platform = select({
        "@platforms//cpu:arm64": "@rules_go//go/toolchain:linux_arm64",
        "@platforms//cpu:x86_64": "@rules_go//go/toolchain:linux_amd64",
    }),
)

pkg_tar(
    name = "pachctl_worker_host_tar",
    srcs = ["//src/server/cmd/pachctl"],
    owner = NONROOT,
    ownername = NONROOT_USERNAME,
    package_dir = "/app",
)

platform_transition_filegroup(
    name = "pachctl_worker_linux_tar",
    srcs = [":pachctl_worker_host_tar"],
    target_platform = select({
        "@platforms//cpu:arm64": "@rules_go//go/toolchain:linux_arm64",
        "@platforms//cpu:x86_64": "@rules_go//go/toolchain:linux_amd64",
    }),
)

oci_image(
    name = "pachctl_image",
    base = "@distroless",
    entrypoint = ["/usr/local/bin/pachctl"],
    tars = [
        ":licenses_tar",
        ":pachctl_self_linux_tar",
    ],
    visibility = ["//visibility:public"],
)

container_structure_test(
    name = "pachctl_image_test",
    size = "small",
    configs = ["pachctl_image_test.yaml"],
    image = ":pachctl_image",
)

pkg_tar(
    name = "worker_init_host_tar",
    srcs = ["//etc/worker:init"],
    owner = NONROOT,
    ownername = NONROOT_USERNAME,
    package_dir = "/app",
)

platform_transition_filegroup(
    name = "worker_init_linux_tar",
    srcs = [":worker_init_host_tar"],
    target_platform = select({
        "@platforms//cpu:arm64": "@rules_go//go/toolchain:linux_arm64",
        "@platforms//cpu:x86_64": "@rules_go//go/toolchain:linux_amd64",
    }),
)

pkg_tar(
    name = "worker_host_tar",
    srcs = ["//src/server/cmd/worker"],
    owner = NONROOT,
    ownername = NONROOT_USERNAME,
    package_dir = "/app",
)

platform_transition_filegroup(
    name = "worker_linux_tar",
    srcs = [":worker_host_tar"],
    target_platform = select({
        "@platforms//cpu:arm64": "@rules_go//go/toolchain:linux_arm64",
        "@platforms//cpu:x86_64": "@rules_go//go/toolchain:linux_amd64",
    }),
)

pkg_tar(
    name = "dumb_init_linux_tar",
    srcs = select({
        "//:is_x86_64": ["@com_github_yelp_dumb_init_x86_64_linux//file:dumb-init"],
        "//:is_aarch64": ["@com_github_yelp_dumb_init_aarch64_linux//file:dumb-init"],
    }),
    owner = NONROOT,
    ownername = NONROOT_USERNAME,
    package_dir = "/app",
)

oci_image(
    name = "worker_image",
    base = "@distroless",
    entrypoint = ["/app/init"],
    tars = [
        ":dumb_init_linux_tar",
        ":worker_init_linux_tar",
        ":licenses_tar",
        ":pachctl_worker_linux_tar",
        ":worker_linux_tar",
    ],
    visibility = ["//visibility:public"],
)

container_structure_test(
    name = "worker_image_test",
    size = "small",
    configs = ["worker_image_test.yaml"],
    image = ":worker_image",
)
