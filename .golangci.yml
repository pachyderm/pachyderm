run:
    timeout: 5m
    build-tags:
        - k8s
        - unit_test
issues:
    exclude-dirs:
        - cached-deps
linters:
    disable:
        - staticcheck # run by nogo (staticcheck)
        - stylecheck # run by nogo (staticcheck)
        - gosimple # run by nogo (staticcheck)
        - govet # run by nogo (golang.org/x/tools)
        - ineffassign # run by nogo (ineffassign)
        - wrapcheck # run by nogo (wrapcheck)
    enable:
        - nolintlint
        - gofmt
        - errcheck
        - unused
        - asciicheck
        - asasalint
        - bidichk
        - exhaustive
        - goprintffuncname
        - depguard
        # - bodyclose CORE-1317
        # - gocritic CORE-1318
        # - gosec CORE-1319
linters-settings:
    errcheck:
        exclude-functions:
            - (*database/sql.Tx).Rollback
            - (*github.com/spf13/cobra.Command).MarkFlagCustom
            - (*github.com/spf13/cobra.Command).Usage
    nolintlint:
        allow-unused: false
        allow-leading-space: false
        require-explanation: false
        require-specific: true
    gofmt:
        simplify: true
    exhaustive:
        default-signifies-exhaustive: true
        # Right now, we only allow opting into the exhaustive check due to a lot of code that makes
        # correct use of non-exhaustive switch statements.
        # Annotate your switch statement with //exhaustive:enforce to opt in.
        explicit-exhaustive-switch: true
        explicit-exhaustive-map: true
    depguard:
        rules:
            main:
                files:
                    - "$all"
                    - "!**/src/internal/log/*.go"
                    - "!**/etc/**/*.go"
                deny:
                    - pkg: github.com/sirupsen/logrus
                      desc: use the internal/log package
                    - pkg: go.uber.org/multierr
                      desc: "use the internal/errors package"
                    - pkg: github.com/hashicorp/go-multierror
                      desc: "use the internal/errors package"
                    - pkg: github.com/gogo/protobuf/proto
                      desc: "wrong proto package; use google.golang.org/protobuf/proto"
                    - pkg: github.com/gogo/protobuf/types
                      desc: "wrong proto package; use google.golang.org/protobuf/types/..."
                    - pkg: github.com/gogo/protobuf/jsonpb
                      desc: "wrong proto package; use google.golang.org/protobuf/encoding/protojson"
                    - pkg: github.com/golang/protobuf/proto
                      desc: "wrong proto package; use google.golang.org/protobuf/proto"
                    - pkg: github.com/golang/protobuf/ptypes
                      desc: "wrong proto package; use google.golang.org/protobuf/types/..."
                    - pkg: github.com/golang/protobuf/jsonpb
                      desc: "wrong proto package; use google.golang.org/protobuf/encoding/protojson"
