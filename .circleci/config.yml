version: 2.1

orbs:
    codecov: codecov/codecov@1.1.0
    pagerduty: fredbi/pagerduty@0.3.0
    browser-tools: circleci/browser-tools@1.2.3

jobs:
    backend-test:
        resource_class: xlarge
        docker:
            - image: cimg/node:16.11.0
        steps:
            - checkout
            - run: cd frontend && npm ci
            - run: cd backend && npm ci
            - run: cd backend && npm run lint
            - run: cd backend && npm run test -- --collect-coverage
            - codecov/upload:
                  file: backend/coverage/lcov.info
    frontend-test:
        resource_class: xlarge
        docker:
            - image: cimg/node:16.11.0
        steps:
            - checkout
            - run: cd backend && npm ci
            - run: cd frontend && npm ci
            - run: cd frontend && npm run lint
            - run: cd frontend && npm run test -- --collect-coverage
            - codecov/upload:
                  file: frontend/coverage/lcov.info
    e2e-test:
        resource_class: xlarge
        machine:
            image: ubuntu-2004:202107-02
        steps:
            - checkout
            - browser-tools/install-chrome
            - browser-tools/install-chromedriver
            - run: sudo sysctl fs.inotify.max_user_watches=524288
            - run: sudo sysctl -p
            - run: sudo apt-get update
            - run: sudo apt-get install -y libgbm-dev
            - run: nvm install 16.11.0
            - run: nvm alias default 16.11.0
            - run: nvm use 16.11.0 && node -v
            - run: nvm use 16.11.0 && npm ci
            - run: nvm use 16.11.0 && cd backend && npm ci
            - run: nvm use 16.11.0 && cd frontend && npm ci
            - run: nvm use 16.11.0 && npm run check-version
            - run: etc/testing/circle/install.sh
            - run: etc/testing/circle/start-minikube.sh
            - run: etc/testing/circle/deploy-pachyderm.sh
            - run: etc/testing/circle/setup-project.sh
            - run: nvm use 16.11.0 && pachctl port-forward & CI=true CYPRESS_RECORD_KEY=$CONSOLE_CYPRESS_RECORD_KEY npm run e2e
    build:
        resource_class: xlarge
        docker:
            - image: cimg/node:16.11.0
        steps:
            - checkout
            - run: make ci
            - run: make build
    # live-automation:
    #     resource_class: xlarge
    #     docker:
    #         - image: circleci/node:14.14.0-browsers
    #     steps:
    #         - checkout
    #         - run: cd live-automation && npm install
    #         - run:
    #               cd live-automation &&
    #               CYPRESS_RECORD_KEY=$LIVE_AUTOMATION_RECORD_KEY npm run
    #               test-and-report-production
    #         - store_artifacts:
    #               path: /tmp/cypress-screenshots
    #         - store_artifacts:
    #               path: /tmp/cypress-videos
    #         - store_artifacts:
    #               path: /tmp/cypress-network
    #         - pagerduty/notify:
    #               when: on_fail
    #               severity: critical
    #               component: production
    #               incident_title:
    #                   "Dash Live automation run against production failed"

workflows:
    version: 2
    test:
        jobs:
            - backend-test
            - frontend-test
            - e2e-test
            - build
    # live-automation:
    #     triggers:
    #         - schedule:
    #               cron: "10,30,50 * * * *"
    #               filters:
    #                   branches:
    #                       only: master
    #     jobs:
    #         - live-automation
