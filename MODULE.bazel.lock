{
  "lockFileVersion": 3,
  "moduleFileHash": "189a3ab1b66709caf4f2589def72748905e1a4510afd342fd468fd0e90112c8f",
  "flags": {
    "cmdRegistries": [
      "https://bcr.bazel.build/"
    ],
    "cmdModuleOverrides": {},
    "allowedYankedVersions": [],
    "envVarAllowedYankedVersions": "",
    "ignoreDevDependency": false,
    "directDependenciesMode": "WARNING",
    "compatibilityMode": "ERROR"
  },
  "localOverrideHashes": {
    "bazel_tools": "922ea6752dc9105de5af957f7a99a6933c0a6a712d23df6aad16a9c399f7e787"
  },
  "moduleDepGraph": {
    "<root>": {
      "name": "pachyderm",
      "version": "",
      "key": "<root>",
      "repoName": "com_github_pachyderm_pachyderm",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_go//go:extensions.bzl",
          "extensionName": "go_sdk",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 16,
            "column": 23
          },
          "imports": {
            "go_sdk": "go_sdk"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "nogo",
              "attributeValues": {
                "nogo": "//:nogo"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 17,
                "column": 12
              }
            },
            {
              "tagName": "download",
              "attributeValues": {
                "name": "go_sdk",
                "version": "1.22.1"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 18,
                "column": 16
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 24,
            "column": 24
          },
          "imports": {
            "com_github_adrg_xdg": "com_github_adrg_xdg",
            "com_github_alecthomas_jsonschema": "com_github_alecthomas_jsonschema",
            "com_github_alessio_shellescape": "com_github_alessio_shellescape",
            "com_github_aws_aws_lambda_go": "com_github_aws_aws_lambda_go",
            "com_github_aws_aws_sdk_go": "com_github_aws_aws_sdk_go",
            "com_github_azure_azure_sdk_for_go": "com_github_azure_azure_sdk_for_go",
            "com_github_c_bata_go_prompt": "com_github_c_bata_go_prompt",
            "com_github_cevaris_ordered_map": "com_github_cevaris_ordered_map",
            "com_github_chmduquesne_rollinghash": "com_github_chmduquesne_rollinghash",
            "com_github_chrusty_protoc_gen_jsonschema": "com_github_chrusty_protoc_gen_jsonschema",
            "com_github_coreos_go_oidc": "com_github_coreos_go_oidc",
            "com_github_data_dog_go_sqlmock": "com_github_data_dog_go_sqlmock",
            "com_github_determined_ai_determined_proto": "com_github_determined_ai_determined_proto",
            "com_github_dexidp_dex": "com_github_dexidp_dex",
            "com_github_dexidp_dex_api_v2": "com_github_dexidp_dex_api_v2",
            "com_github_dlmiddlecote_sqlstats": "com_github_dlmiddlecote_sqlstats",
            "com_github_docker_docker": "com_github_docker_docker",
            "com_github_docker_go_connections": "com_github_docker_go_connections",
            "com_github_docker_go_units": "com_github_docker_go_units",
            "com_github_dustin_go_humanize": "com_github_dustin_go_humanize",
            "com_github_envoyproxy_protoc_gen_validate": "com_github_envoyproxy_protoc_gen_validate",
            "com_github_evanphx_json_patch": "com_github_evanphx_json_patch",
            "com_github_fatih_camelcase": "com_github_fatih_camelcase",
            "com_github_fatih_color": "com_github_fatih_color",
            "com_github_felixge_httpsnoop": "com_github_felixge_httpsnoop",
            "com_github_fsnotify_fsnotify": "com_github_fsnotify_fsnotify",
            "com_github_fsouza_go_dockerclient": "com_github_fsouza_go_dockerclient",
            "com_github_go_logr_zapr": "com_github_go_logr_zapr",
            "com_github_go_sql_driver_mysql": "com_github_go_sql_driver_mysql",
            "com_github_golang_protobuf": "com_github_golang_protobuf",
            "com_github_google_btree": "com_github_google_btree",
            "com_github_google_go_cmp": "com_github_google_go_cmp",
            "com_github_google_gofuzz": "com_github_google_gofuzz",
            "com_github_google_shlex": "com_github_google_shlex",
            "com_github_google_uuid": "com_github_google_uuid",
            "com_github_gorilla_mux": "com_github_gorilla_mux",
            "com_github_grpc_ecosystem_go_grpc_middleware": "com_github_grpc_ecosystem_go_grpc_middleware",
            "com_github_grpc_ecosystem_go_grpc_prometheus": "com_github_grpc_ecosystem_go_grpc_prometheus",
            "com_github_grpc_ecosystem_grpc_gateway_v2": "com_github_grpc_ecosystem_grpc_gateway_v2",
            "com_github_gruntwork_io_terratest": "com_github_gruntwork_io_terratest",
            "com_github_hanwen_go_fuse_v2": "com_github_hanwen_go_fuse_v2",
            "com_github_hashicorp_golang_lru": "com_github_hashicorp_golang_lru",
            "com_github_hashicorp_golang_lru_v2": "com_github_hashicorp_golang_lru_v2",
            "com_github_iancoleman_orderedmap": "com_github_iancoleman_orderedmap",
            "com_github_iancoleman_strcase": "com_github_iancoleman_strcase",
            "com_github_itchyny_gojq": "com_github_itchyny_gojq",
            "com_github_jackc_pgconn": "com_github_jackc_pgconn",
            "com_github_jackc_pgerrcode": "com_github_jackc_pgerrcode",
            "com_github_jackc_pgx_v4": "com_github_jackc_pgx_v4",
            "com_github_jmoiron_sqlx": "com_github_jmoiron_sqlx",
            "com_github_json_iterator_go": "com_github_json_iterator_go",
            "com_github_juju_ansiterm": "com_github_juju_ansiterm",
            "com_github_klauspost_compress": "com_github_klauspost_compress",
            "com_github_lib_pq": "com_github_lib_pq",
            "com_github_mattn_go_isatty": "com_github_mattn_go_isatty",
            "com_github_minio_minio_go_v6": "com_github_minio_minio_go_v6",
            "com_github_minio_minio_go_v7": "com_github_minio_minio_go_v7",
            "com_github_modern_go_reflect2": "com_github_modern_go_reflect2",
            "com_github_opencontainers_image_spec": "com_github_opencontainers_image_spec",
            "com_github_opentracing_contrib_go_grpc": "com_github_opentracing_contrib_go_grpc",
            "com_github_opentracing_opentracing_go": "com_github_opentracing_opentracing_go",
            "com_github_pachyderm_ohmyglob": "com_github_pachyderm_ohmyglob",
            "com_github_pachyderm_s2": "com_github_pachyderm_s2",
            "com_github_pkg_browser": "com_github_pkg_browser",
            "com_github_pkg_errors": "com_github_pkg_errors",
            "com_github_prometheus_client_golang": "com_github_prometheus_client_golang",
            "com_github_prometheus_common": "com_github_prometheus_common",
            "com_github_prometheus_procfs": "com_github_prometheus_procfs",
            "com_github_pulumi_pulumi_aws_sdk_v5": "com_github_pulumi_pulumi_aws_sdk_v5",
            "com_github_pulumi_pulumi_awsx_sdk": "com_github_pulumi_pulumi_awsx_sdk",
            "com_github_pulumi_pulumi_eks_sdk": "com_github_pulumi_pulumi_eks_sdk",
            "com_github_pulumi_pulumi_kubernetes_sdk_v3": "com_github_pulumi_pulumi_kubernetes_sdk_v3",
            "com_github_pulumi_pulumi_postgresql_sdk_v3": "com_github_pulumi_pulumi_postgresql_sdk_v3",
            "com_github_pulumi_pulumi_sdk_v3": "com_github_pulumi_pulumi_sdk_v3",
            "com_github_robfig_cron": "com_github_robfig_cron",
            "com_github_satori_go_uuid": "com_github_satori_go_uuid",
            "com_github_segmentio_analytics_go": "com_github_segmentio_analytics_go",
            "com_github_sirupsen_logrus": "com_github_sirupsen_logrus",
            "com_github_spf13_cobra": "com_github_spf13_cobra",
            "com_github_spf13_pflag": "com_github_spf13_pflag",
            "com_github_stretchr_testify": "com_github_stretchr_testify",
            "com_github_timewasted_go_accept_headers": "com_github_timewasted_go_accept_headers",
            "com_github_uber_jaeger_client_go": "com_github_uber_jaeger_client_go",
            "com_github_vbauerster_mpb_v6": "com_github_vbauerster_mpb_v6",
            "com_github_wader_readline": "com_github_wader_readline",
            "com_github_wcharczuk_go_chart": "com_github_wcharczuk_go_chart",
            "com_github_xeipuuv_gojsonpointer": "com_github_xeipuuv_gojsonpointer",
            "com_github_xeipuuv_gojsonreference": "com_github_xeipuuv_gojsonreference",
            "com_github_xeipuuv_gojsonschema": "com_github_xeipuuv_gojsonschema",
            "com_github_zeebo_xxh3": "com_github_zeebo_xxh3",
            "com_google_cloud_go_profiler": "com_google_cloud_go_profiler",
            "com_google_cloud_go_storage": "com_google_cloud_go_storage",
            "dev_gocloud": "dev_gocloud",
            "in_gopkg_yaml_v3": "in_gopkg_yaml_v3",
            "io_etcd_go_etcd_api_v3": "io_etcd_go_etcd_api_v3",
            "io_etcd_go_etcd_client_v3": "io_etcd_go_etcd_client_v3",
            "io_etcd_go_etcd_server_v3": "io_etcd_go_etcd_server_v3",
            "io_k8s_api": "io_k8s_api",
            "io_k8s_apimachinery": "io_k8s_apimachinery",
            "io_k8s_client_go": "io_k8s_client_go",
            "io_k8s_klog_v2": "io_k8s_klog_v2",
            "io_k8s_kubectl": "io_k8s_kubectl",
            "io_k8s_sigs_kind": "io_k8s_sigs_kind",
            "io_k8s_sigs_yaml": "io_k8s_sigs_yaml",
            "io_k8s_utils": "io_k8s_utils",
            "net_starlark_go": "net_starlark_go",
            "org_golang_google_api": "org_golang_google_api",
            "org_golang_google_genproto_googleapis_rpc": "org_golang_google_genproto_googleapis_rpc",
            "org_golang_google_grpc": "org_golang_google_grpc",
            "org_golang_google_grpc_cmd_protoc_gen_go_grpc": "org_golang_google_grpc_cmd_protoc_gen_go_grpc",
            "org_golang_google_protobuf": "org_golang_google_protobuf",
            "org_golang_x_crypto": "org_golang_x_crypto",
            "org_golang_x_exp": "org_golang_x_exp",
            "org_golang_x_mod": "org_golang_x_mod",
            "org_golang_x_net": "org_golang_x_net",
            "org_golang_x_oauth2": "org_golang_x_oauth2",
            "org_golang_x_sync": "org_golang_x_sync",
            "org_golang_x_sys": "org_golang_x_sys",
            "org_golang_x_term": "org_golang_x_term",
            "org_golang_x_text": "org_golang_x_text",
            "org_uber_go_atomic": "org_uber_go_atomic",
            "org_uber_go_automaxprocs": "org_uber_go_automaxprocs",
            "org_uber_go_zap": "org_uber_go_zap"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 25,
                "column": 18
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "directives": [
                  "gazelle:proto disable_global"
                ],
                "path": "go.etcd.io/etcd/api/v3"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 26,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "directives": [
                  "gazelle:proto disable_global"
                ],
                "path": "go.etcd.io/etcd/server/v3"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 32,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "directives": [
                  "gazelle:proto disable_global"
                ],
                "path": "go.etcd.io/etcd/raft/v3"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 38,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "build_file_generation": "on",
                "directives": [
                  "gazelle:exclude **/**_test.go",
                  "gazelle:exclude examples",
                  "gazelle:resolve go github.com/grpc-ecosystem/grpc-gateway/internal //internal",
                  "gazelle:resolve go github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options //protoc-gen-swagger/options",
                  "gazelle:proto disable_global"
                ],
                "path": "github.com/grpc-ecosystem/grpc-gateway"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 44,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "directives": [
                  "gazelle:proto disable_global"
                ],
                "path": "github.com/determined-ai/determined/proto"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 55,
                "column": 25
              }
            },
            {
              "tagName": "module_override",
              "attributeValues": {
                "patch_strip": 1,
                "patches": [
                  "//private:protoc-gen-validate.patch"
                ],
                "path": "github.com/envoyproxy/protoc-gen-validate"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 61,
                "column": 24
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "build_file_generation": "off",
                "path": "github.com/envoyproxy/protoc-gen-validate"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 68,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "directives": [
                  "gazelle:proto disable_global"
                ],
                "path": "github.com/chrusty/protoc-gen-jsonschema"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 72,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "directives": [
                  "gazelle:proto disable_global"
                ],
                "path": "github.com/dexidp/dex"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 78,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "directives": [
                  "gazelle:proto disable_global"
                ],
                "path": "github.com/dexidp/dex/api/v2"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 84,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "directives": [
                  "gazelle:proto disable_global"
                ],
                "path": "github.com/docker/docker"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 90,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "directives": [
                  "gazelle:proto disable_global"
                ],
                "path": "github.com/grpc-ecosystem/go-grpc-middleware"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 96,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "directives": [
                  "gazelle:proto disable_global"
                ],
                "path": "github.com/opentracing/basictracer-go"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 102,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "directives": [
                  "gazelle:proto disable_global"
                ],
                "path": "sourcegraph.com/sourcegraph/appdash"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 108,
                "column": 25
              }
            },
            {
              "tagName": "gazelle_override",
              "attributeValues": {
                "build_file_generation": "off",
                "path": "google.golang.org/protobuf"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 117,
                "column": 25
              }
            },
            {
              "tagName": "module_override",
              "attributeValues": {
                "patch_strip": 1,
                "patches": [
                  "//private:google-golang-org-protobuf.patch"
                ],
                "path": "google.golang.org/protobuf"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 121,
                "column": 24
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "google.golang.org/grpc/cmd/protoc-gen-go-grpc",
                "sum": "h1:rNBFJjBCOgVr9pWD7rs/knKL4FRTKgpZmsRfV214zcA=",
                "version": "v1.3.0"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 134,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/alecthomas/jsonschema",
                "sum": "h1:SM/PhkjhbeX1w/Jkv7dHFYDn2y4/88XZp3CIqVHsdcs=",
                "version": "v0.0.0-20210918223802-a1d3f4b43d7b"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 146,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/iancoleman/orderedmap",
                "sum": "h1:sq1N/TFpYH++aViPcaKjys3bDClUEU7s5B+z6jq8pNA=",
                "version": "v0.2.0"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 151,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/iancoleman/strcase",
                "sum": "h1:05I4QRnGpI0m37iZQRuskXh+w77mr6Z41lwQzuHLwW0=",
                "version": "v0.2.0"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 156,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/xeipuuv/gojsonpointer",
                "sum": "h1:6cLsL+2FW6dRAdl5iMtHgRogVCff0QpRi9653YmdcJA=",
                "version": "v0.0.0-20190809123943-df4f5c81cb3b"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 161,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/xeipuuv/gojsonreference",
                "sum": "h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=",
                "version": "v0.0.0-20180127040603-bd5ef7bd5415"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 166,
                "column": 15
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "github.com/xeipuuv/gojsonschema",
                "sum": "h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=",
                "version": "v1.2.0"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 171,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@com_github_pachyderm_pachyderm//private:extensions.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 303,
            "column": 32
          },
          "imports": {
            "com_github_bufbuild_protoc_gen_validate_aarch64_linux": "com_github_bufbuild_protoc_gen_validate_aarch64_linux",
            "com_github_bufbuild_protoc_gen_validate_aarch64_macos": "com_github_bufbuild_protoc_gen_validate_aarch64_macos",
            "com_github_bufbuild_protoc_gen_validate_x86_64_linux": "com_github_bufbuild_protoc_gen_validate_x86_64_linux",
            "com_github_bufbuild_protoc_gen_validate_x86_64_macos": "com_github_bufbuild_protoc_gen_validate_x86_64_macos",
            "com_github_containers_skopeo_aarch64_linux": "com_github_containers_skopeo_aarch64_linux",
            "com_github_containers_skopeo_aarch64_macos": "com_github_containers_skopeo_aarch64_macos",
            "com_github_containers_skopeo_x86_64_linux": "com_github_containers_skopeo_x86_64_linux",
            "com_github_containers_skopeo_x86_64_macos": "com_github_containers_skopeo_x86_64_macos",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_aarch64_linux": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_aarch64_linux",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_aarch64_macos": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_aarch64_macos",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_aarch64_linux": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_aarch64_linux",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_aarch64_macos": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_aarch64_macos",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_x86_64_linux": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_x86_64_linux",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_x86_64_macos": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_x86_64_macos",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_x86_64_linux": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_x86_64_linux",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_x86_64_macos": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_x86_64_macos",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_aarch64_linux": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_aarch64_linux",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_aarch64_macos": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_aarch64_macos",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_x86_64_linux": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_x86_64_linux",
            "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_x86_64_macos": "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_x86_64_macos",
            "com_github_kubernetes_sigs_metrics_server_helm_chart": "com_github_kubernetes_sigs_metrics_server_helm_chart",
            "com_github_protocolbuffers_protobuf_aarch64_linux": "com_github_protocolbuffers_protobuf_aarch64_linux",
            "com_github_protocolbuffers_protobuf_aarch64_macos": "com_github_protocolbuffers_protobuf_aarch64_macos",
            "com_github_protocolbuffers_protobuf_go_protoc_gen_go_aarch64_linux": "com_github_protocolbuffers_protobuf_go_protoc_gen_go_aarch64_linux",
            "com_github_protocolbuffers_protobuf_go_protoc_gen_go_aarch64_macos": "com_github_protocolbuffers_protobuf_go_protoc_gen_go_aarch64_macos",
            "com_github_protocolbuffers_protobuf_go_protoc_gen_go_x86_64_linux": "com_github_protocolbuffers_protobuf_go_protoc_gen_go_x86_64_linux",
            "com_github_protocolbuffers_protobuf_go_protoc_gen_go_x86_64_macos": "com_github_protocolbuffers_protobuf_go_protoc_gen_go_x86_64_macos",
            "com_github_protocolbuffers_protobuf_x86_64_linux": "com_github_protocolbuffers_protobuf_x86_64_linux",
            "com_github_protocolbuffers_protobuf_x86_64_macos": "com_github_protocolbuffers_protobuf_x86_64_macos",
            "com_github_pseudomuto_protoc_gen_doc_aarch64_linux": "com_github_pseudomuto_protoc_gen_doc_aarch64_linux",
            "com_github_pseudomuto_protoc_gen_doc_aarch64_macos": "com_github_pseudomuto_protoc_gen_doc_aarch64_macos",
            "com_github_pseudomuto_protoc_gen_doc_x86_64_linux": "com_github_pseudomuto_protoc_gen_doc_x86_64_linux",
            "com_github_pseudomuto_protoc_gen_doc_x86_64_macos": "com_github_pseudomuto_protoc_gen_doc_x86_64_macos",
            "com_github_yelp_dumb_init_aarch64_linux": "com_github_yelp_dumb_init_aarch64_linux",
            "com_github_yelp_dumb_init_x86_64_linux": "com_github_yelp_dumb_init_x86_64_linux",
            "io_k8s_dl_kubectl_aarch64_linux": "io_k8s_dl_kubectl_aarch64_linux",
            "io_k8s_dl_kubectl_aarch64_macos": "io_k8s_dl_kubectl_aarch64_macos",
            "io_k8s_dl_kubectl_x86_64_linux": "io_k8s_dl_kubectl_x86_64_linux",
            "io_k8s_dl_kubectl_x86_64_macos": "io_k8s_dl_kubectl_x86_64_macos",
            "io_k8s_sigs_kind_aarch64_linux": "io_k8s_sigs_kind_aarch64_linux",
            "io_k8s_sigs_kind_aarch64_macos": "io_k8s_sigs_kind_aarch64_macos",
            "io_k8s_sigs_kind_x86_64_linux": "io_k8s_sigs_kind_x86_64_linux",
            "io_k8s_sigs_kind_x86_64_macos": "io_k8s_sigs_kind_x86_64_macos",
            "org_uber_go_gopatch_aarch64_linux": "org_uber_go_gopatch_aarch64_linux",
            "org_uber_go_gopatch_aarch64_macos": "org_uber_go_gopatch_aarch64_macos",
            "org_uber_go_gopatch_x86_64_linux": "org_uber_go_gopatch_x86_64_linux",
            "org_uber_go_gopatch_x86_64_macos": "org_uber_go_gopatch_x86_64_macos",
            "sh_helm_aarch64_linux": "sh_helm_aarch64_linux",
            "sh_helm_aarch64_macos": "sh_helm_aarch64_macos",
            "sh_helm_x86_64_linux": "sh_helm_x86_64_linux",
            "sh_helm_x86_64_macos": "sh_helm_x86_64_macos"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_oci//oci:extensions.bzl",
          "extensionName": "oci",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 361,
            "column": 20
          },
          "imports": {
            "distroless": "distroless",
            "pause": "pause",
            "zot_amd64": "zot_amd64",
            "zot_arm64": "zot_arm64"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "distroless",
                "digest": "sha256:39ae7f0201fee13b777a3e4a5a9326a8889269172c8b4f4289d9f19c831f45f4",
                "image": "gcr.io/distroless/static-debian12",
                "platforms": [
                  "linux/amd64",
                  "linux/arm64/v8"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 364,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "pause",
                "digest": "sha256:927d98197ec1141a368550822d18fa1c60bdae27b78b0c004f705f548c07814f",
                "image": "gcr.io/google-containers/pause",
                "platforms": [
                  "linux/amd64",
                  "linux/arm64"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 375,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "zot_amd64",
                "digest": "sha256:e5a5be113155d1e0032e5d669888064209da95c107497524f8d4eac8ed50b378",
                "image": "ghcr.io/project-zot/zot-linux-amd64"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 386,
                "column": 9
              }
            },
            {
              "tagName": "pull",
              "attributeValues": {
                "name": "zot_arm64",
                "digest": "sha256:370582183d29bf3b3604251d63cda48cb44c55e9622c8c13c605cba5f1b6cb21",
                "image": "ghcr.io/project-zot/zot-linux-arm64"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 391,
                "column": 9
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python:extensions.bzl",
          "extensionName": "python",
          "usingModule": "<root>",
          "location": {
            "file": "@@//:MODULE.bazel",
            "line": 398,
            "column": 23
          },
          "imports": {},
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": true,
                "python_version": "3.12.1"
              },
              "devDependency": false,
              "location": {
                "file": "@@//:MODULE.bazel",
                "line": 399,
                "column": 17
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "aspect_bazel_lib": "aspect_bazel_lib@2.5.0",
        "container_structure_test": "container_structure_test@1.16.0",
        "gazelle": "gazelle@0.35.0",
        "jsonnet_go": "jsonnet_go@0.20.0",
        "rules_go": "rules_go@0.46.0",
        "rules_oci": "rules_oci@1.5.1",
        "rules_python": "rules_python@0.27.1",
        "buildifier_prebuilt": "buildifier_prebuilt@6.4.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      }
    },
    "aspect_bazel_lib@2.5.0": {
      "name": "aspect_bazel_lib",
      "version": "2.5.0",
      "key": "aspect_bazel_lib@2.5.0",
      "repoName": "aspect_bazel_lib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@copy_directory_toolchains//:all",
        "@copy_to_directory_toolchains//:all",
        "@jq_toolchains//:all",
        "@yq_toolchains//:all",
        "@coreutils_toolchains//:all",
        "@expand_template_toolchains//:all",
        "@bats_toolchains//:all",
        "@bsd_tar_toolchains//:linux_amd64_toolchain",
        "@bsd_tar_toolchains//:linux_arm64_toolchain",
        "@bsd_tar_toolchains//:windows_amd64_toolchain",
        "@bsd_tar_toolchains//:host_toolchain"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@aspect_bazel_lib//lib:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "aspect_bazel_lib@2.5.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.5.0/MODULE.bazel",
            "line": 17,
            "column": 37
          },
          "imports": {
            "bats_toolchains": "bats_toolchains",
            "bsd_tar_toolchains": "bsd_tar_toolchains",
            "copy_directory_toolchains": "copy_directory_toolchains",
            "copy_to_directory_toolchains": "copy_to_directory_toolchains",
            "coreutils_toolchains": "coreutils_toolchains",
            "expand_template_toolchains": "expand_template_toolchains",
            "jq_toolchains": "jq_toolchains",
            "yq_toolchains": "yq_toolchains"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "copy_directory",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.5.0/MODULE.bazel",
                "line": 18,
                "column": 36
              }
            },
            {
              "tagName": "copy_to_directory",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.5.0/MODULE.bazel",
                "line": 19,
                "column": 39
              }
            },
            {
              "tagName": "jq",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.5.0/MODULE.bazel",
                "line": 20,
                "column": 24
              }
            },
            {
              "tagName": "yq",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.5.0/MODULE.bazel",
                "line": 21,
                "column": 24
              }
            },
            {
              "tagName": "coreutils",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.5.0/MODULE.bazel",
                "line": 22,
                "column": 31
              }
            },
            {
              "tagName": "tar",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.5.0/MODULE.bazel",
                "line": 23,
                "column": 25
              }
            },
            {
              "tagName": "expand_template",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.5.0/MODULE.bazel",
                "line": 24,
                "column": 37
              }
            },
            {
              "tagName": "bats",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/aspect_bazel_lib/2.5.0/MODULE.bazel",
                "line": 25,
                "column": 26
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "platforms": "platforms@0.0.8",
        "io_bazel_stardoc": "stardoc@0.5.4",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "aspect_bazel_lib~2.5.0",
          "urls": [
            "https://github.com/aspect-build/bazel-lib/releases/download/v2.5.0/bazel-lib-v2.5.0.tar.gz"
          ],
          "integrity": "sha256-9ep2aCsgnMC9kND1o7JtL3pqKIXwxfYV5ykT9IBduw0=",
          "strip_prefix": "bazel-lib-2.5.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/aspect_bazel_lib/2.5.0/patches/go_dev_dep.patch": "sha256-KgABwDzOT+DugUHn9tHLOz05osnk2FLsS10d5zqG/M0=",
            "https://bcr.bazel.build/modules/aspect_bazel_lib/2.5.0/patches/module_dot_bazel_version.patch": "sha256-Goo+3Jt++n8fe6jssy24AABw0FjsH0yA592LrOVNDSI="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "container_structure_test@1.16.0": {
      "name": "container_structure_test",
      "version": "1.16.0",
      "key": "container_structure_test@1.16.0",
      "repoName": "container_structure_test",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@structure_test_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@container_structure_test//:repositories.bzl",
          "extensionName": "extension",
          "usingModule": "container_structure_test@1.16.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/container_structure_test/1.16.0/MODULE.bazel",
            "line": 14,
            "column": 20
          },
          "imports": {
            "structure_test_toolchains": "structure_test_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "aspect_bazel_lib": "aspect_bazel_lib@2.5.0",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "container_structure_test~1.16.0",
          "urls": [
            "https://github.com/GoogleContainerTools/container-structure-test/archive/18d9b2bcd2cbee1ab8df7c232ef6b7cddff9708a.zip"
          ],
          "integrity": "sha256-bl48uxXyeFxlKCKlbgyGsUtjCmo6QQyInnGNWA8sGac=",
          "strip_prefix": "container-structure-test-18d9b2bcd2cbee1ab8df7c232ef6b7cddff9708a",
          "remote_patches": {
            "https://bcr.bazel.build/modules/container_structure_test/1.16.0/patches/module_dot_bazel.patch": "sha256-XvjiOZuN3y2tj5SJY6ws5H6VrIsuLC1Bdh3xw6qKeMs="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "gazelle@0.35.0": {
      "name": "gazelle",
      "version": "0.35.0",
      "key": "gazelle@0.35.0",
      "repoName": "bazel_gazelle",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@io_bazel_rules_go//go:extensions.bzl",
          "extensionName": "go_sdk",
          "usingModule": "gazelle@0.35.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.35.0/MODULE.bazel",
            "line": 12,
            "column": 23
          },
          "imports": {
            "go_host_compatible_sdk_label": "go_host_compatible_sdk_label"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_gazelle//internal/bzlmod:non_module_deps.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "gazelle@0.35.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.35.0/MODULE.bazel",
            "line": 20,
            "column": 32
          },
          "imports": {
            "bazel_gazelle_go_repository_cache": "bazel_gazelle_go_repository_cache",
            "bazel_gazelle_go_repository_tools": "bazel_gazelle_go_repository_tools",
            "bazel_gazelle_is_bazel_module": "bazel_gazelle_is_bazel_module"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "gazelle@0.35.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/gazelle/0.35.0/MODULE.bazel",
            "line": 28,
            "column": 24
          },
          "imports": {
            "com_github_bazelbuild_buildtools": "com_github_bazelbuild_buildtools",
            "com_github_bmatcuk_doublestar_v4": "com_github_bmatcuk_doublestar_v4",
            "com_github_fsnotify_fsnotify": "com_github_fsnotify_fsnotify",
            "com_github_google_go_cmp": "com_github_google_go_cmp",
            "com_github_pmezard_go_difflib": "com_github_pmezard_go_difflib",
            "org_golang_x_mod": "org_golang_x_mod",
            "org_golang_x_sync": "org_golang_x_sync",
            "org_golang_x_tools": "org_golang_x_tools",
            "org_golang_x_tools_go_vcs": "org_golang_x_tools_go_vcs",
            "bazel_gazelle_go_repository_config": "bazel_gazelle_go_repository_config",
            "com_github_golang_protobuf": "com_github_golang_protobuf",
            "org_golang_google_protobuf": "org_golang_google_protobuf"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/gazelle/0.35.0/MODULE.bazel",
                "line": 29,
                "column": 18
              }
            },
            {
              "tagName": "module",
              "attributeValues": {
                "path": "golang.org/x/tools",
                "sum": "h1:zdAyfUGbYmuVokhzVmghFl2ZJh5QhcfebBgmVPFYA+8=",
                "version": "v0.15.0"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/gazelle/0.35.0/MODULE.bazel",
                "line": 33,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "com_google_protobuf": "protobuf@21.7",
        "io_bazel_rules_go": "rules_go@0.46.0",
        "rules_proto": "rules_proto@5.3.0-21.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "gazelle~0.35.0",
          "urls": [
            "https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.35.0/bazel-gazelle-v0.35.0.tar.gz"
          ],
          "integrity": "sha256-MpOL2hbmcABjA1R5Bj2dJMYO2o15/Uc5Vj9Q0zHLMgk=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "jsonnet_go@0.20.0": {
      "name": "jsonnet_go",
      "version": "0.20.0",
      "key": "jsonnet_go@0.20.0",
      "repoName": "jsonnet_go",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "jsonnet_go@0.20.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/jsonnet_go/0.20.0/MODULE.bazel",
            "line": 7,
            "column": 24
          },
          "imports": {
            "com_github_fatih_color": "com_github_fatih_color",
            "com_github_sergi_go_diff": "com_github_sergi_go_diff",
            "io_k8s_sigs_yaml": "io_k8s_sigs_yaml"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "@jsonnet_go//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/jsonnet_go/0.20.0/MODULE.bazel",
                "line": 8,
                "column": 18
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_gazelle": "gazelle@0.35.0",
        "cpp_jsonnet": "jsonnet@0.20.0",
        "io_bazel_rules_go": "rules_go@0.46.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "jsonnet_go~0.20.0",
          "urls": [
            "https://github.com/google/go-jsonnet/archive/refs/tags/v0.20.0.zip"
          ],
          "integrity": "sha256-EZ9sbQ3D/JrhR3GoerP+X6dOQOPj207dv0yjh5Z453c=",
          "strip_prefix": "go-jsonnet-0.20.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/jsonnet_go/0.20.0/patches/module_dot_bazel.patch": "sha256-7/AtC31dhw3fhB7N8XIId8R5ZkJ80Y1k6BVne8xt3eo="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_go@0.46.0": {
      "name": "rules_go",
      "version": "0.46.0",
      "key": "rules_go@0.46.0",
      "repoName": "io_bazel_rules_go",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@go_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@io_bazel_rules_go//go:extensions.bzl",
          "extensionName": "go_sdk",
          "usingModule": "rules_go@0.46.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_go/0.46.0/MODULE.bazel",
            "line": 16,
            "column": 23
          },
          "imports": {
            "go_toolchains": "go_toolchains",
            "io_bazel_rules_nogo": "io_bazel_rules_nogo"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "download",
              "attributeValues": {
                "name": "go_default_sdk",
                "version": "1.21.1"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_go/0.46.0/MODULE.bazel",
                "line": 17,
                "column": 16
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@gazelle//:extensions.bzl",
          "extensionName": "go_deps",
          "usingModule": "rules_go@0.46.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_go/0.46.0/MODULE.bazel",
            "line": 32,
            "column": 24
          },
          "imports": {
            "com_github_gogo_protobuf": "com_github_gogo_protobuf",
            "com_github_golang_mock": "com_github_golang_mock",
            "com_github_golang_protobuf": "com_github_golang_protobuf",
            "org_golang_google_genproto": "org_golang_google_genproto",
            "org_golang_google_grpc": "org_golang_google_grpc",
            "org_golang_google_grpc_cmd_protoc_gen_go_grpc": "org_golang_google_grpc_cmd_protoc_gen_go_grpc",
            "org_golang_google_protobuf": "org_golang_google_protobuf",
            "org_golang_x_net": "org_golang_x_net",
            "org_golang_x_tools": "org_golang_x_tools"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "from_file",
              "attributeValues": {
                "go_mod": "//:go.mod"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_go/0.46.0/MODULE.bazel",
                "line": 33,
                "column": 18
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "io_bazel_rules_go_bazel_features": "bazel_features@1.1.1",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "platforms": "platforms@0.0.8",
        "rules_proto": "rules_proto@5.3.0-21.7",
        "com_google_protobuf": "protobuf@21.7",
        "gazelle": "gazelle@0.35.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_go~0.46.0",
          "urls": [
            "https://github.com/bazelbuild/rules_go/releases/download/v0.46.0/rules_go-v0.46.0.zip"
          ],
          "integrity": "sha256-gKmCd60TEdrNg3+bFttiiHcC6fHRxMn3ltASGkbI4YQ=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_oci@1.5.1": {
      "name": "rules_oci",
      "version": "1.5.1",
      "key": "rules_oci@1.5.1",
      "repoName": "rules_oci",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@oci_crane_toolchains//:all",
        "@oci_crane_registry_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_oci//oci:extensions.bzl",
          "extensionName": "oci",
          "usingModule": "rules_oci@1.5.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_oci/1.5.1/MODULE.bazel",
            "line": 13,
            "column": 20
          },
          "imports": {
            "oci_auth_config": "oci_auth_config",
            "oci_crane_registry_toolchains": "oci_crane_registry_toolchains",
            "oci_crane_toolchains": "oci_crane_toolchains"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchains",
              "attributeValues": {
                "crane_version": "v0.17.0"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_oci/1.5.1/MODULE.bazel",
                "line": 14,
                "column": 15
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "aspect_bazel_lib": "aspect_bazel_lib@2.5.0",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_oci~1.5.1",
          "urls": [
            "https://github.com/bazel-contrib/rules_oci/releases/download/v1.5.1/rules_oci-v1.5.1.tar.gz"
          ],
          "integrity": "sha256-aG+HH5aX4Ih3uF6mwWyNSPkRv0ZsOurxCMoKsmA8cwY=",
          "strip_prefix": "rules_oci-1.5.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_oci/1.5.1/patches/module_dot_bazel_version.patch": "sha256-qzG84ekSPzFFloru+HMmPaUBvck8rzFRYK7y3pTVl6k="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_python@0.27.1": {
      "name": "rules_python",
      "version": "0.27.1",
      "key": "rules_python@0.27.1",
      "repoName": "rules_python",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@pythons_hub//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_python//python/private/bzlmod:internal_deps.bzl",
          "extensionName": "internal_deps",
          "usingModule": "rules_python@0.27.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python/0.27.1/MODULE.bazel",
            "line": 17,
            "column": 30
          },
          "imports": {
            "rules_python_internal": "rules_python_internal",
            "pypi__build": "pypi__build",
            "pypi__click": "pypi__click",
            "pypi__colorama": "pypi__colorama",
            "pypi__importlib_metadata": "pypi__importlib_metadata",
            "pypi__installer": "pypi__installer",
            "pypi__more_itertools": "pypi__more_itertools",
            "pypi__packaging": "pypi__packaging",
            "pypi__pep517": "pypi__pep517",
            "pypi__pip": "pypi__pip",
            "pypi__pip_tools": "pypi__pip_tools",
            "pypi__pyproject_hooks": "pypi__pyproject_hooks",
            "pypi__setuptools": "pypi__setuptools",
            "pypi__tomli": "pypi__tomli",
            "pypi__wheel": "pypi__wheel",
            "pypi__zipp": "pypi__zipp"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {},
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_python/0.27.1/MODULE.bazel",
                "line": 18,
                "column": 22
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_python//python/extensions:python.bzl",
          "extensionName": "python",
          "usingModule": "rules_python@0.27.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_python/0.27.1/MODULE.bazel",
            "line": 43,
            "column": 23
          },
          "imports": {
            "pythons_hub": "pythons_hub"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "toolchain",
              "attributeValues": {
                "is_default": true,
                "python_version": "3.11"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_python/0.27.1/MODULE.bazel",
                "line": 49,
                "column": 17
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_features": "bazel_features@1.1.1",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "platforms": "platforms@0.0.8",
        "rules_proto": "rules_proto@5.3.0-21.7",
        "com_google_protobuf": "protobuf@21.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_python~0.27.1",
          "urls": [
            "https://github.com/bazelbuild/rules_python/releases/download/0.27.1/rules_python-0.27.1.tar.gz"
          ],
          "integrity": "sha256-6FrjDeM2JaY+yn/ECpT+qEXmQYiOUvMra+6pHosbJ5M=",
          "strip_prefix": "rules_python-0.27.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_python/0.27.1/patches/module_dot_bazel_version.patch": "sha256-Ier7Gb4zhbS273tClCov24gNYdheo4FdegZwaHBrQy0="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "buildifier_prebuilt@6.4.0": {
      "name": "buildifier_prebuilt",
      "version": "6.4.0",
      "key": "buildifier_prebuilt@6.4.0",
      "repoName": "buildifier_prebuilt",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@buildifier_prebuilt_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@buildifier_prebuilt//:defs.bzl",
          "extensionName": "buildifier_prebuilt_deps_extension",
          "usingModule": "buildifier_prebuilt@6.4.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/buildifier_prebuilt/6.4.0/MODULE.bazel",
            "line": 10,
            "column": 32
          },
          "imports": {
            "buildifier_prebuilt_toolchains": "buildifier_prebuilt_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "buildifier_prebuilt~6.4.0",
          "urls": [
            "https://github.com/keith/buildifier-prebuilt/archive/refs/tags/6.4.0.tar.gz"
          ],
          "integrity": "sha256-itqdiOUev1of3/N9de1B1R9eZ3zb6vsKIt2lR0fW4H4=",
          "strip_prefix": "buildifier-prebuilt-6.4.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/buildifier_prebuilt/6.4.0/patches/module_dot_bazel_version.patch": "sha256-FpUp/q4zJ2H12lwezrYaPUGLY2rr1XoWpiDRaE19udw="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "bazel_tools@_": {
      "name": "bazel_tools",
      "version": "",
      "key": "bazel_tools@_",
      "repoName": "bazel_tools",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_cc_toolchains//:all",
        "@local_config_sh//:local_sh_toolchain"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_tools//tools/cpp:cc_configure.bzl",
          "extensionName": "cc_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 17,
            "column": 29
          },
          "imports": {
            "local_config_cc": "local_config_cc",
            "local_config_cc_toolchains": "local_config_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/osx:xcode_configure.bzl",
          "extensionName": "xcode_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 21,
            "column": 32
          },
          "imports": {
            "local_config_xcode": "local_config_xcode"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@rules_java//java:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 24,
            "column": 32
          },
          "imports": {
            "local_jdk": "local_jdk",
            "remote_java_tools": "remote_java_tools",
            "remote_java_tools_linux": "remote_java_tools_linux",
            "remote_java_tools_windows": "remote_java_tools_windows",
            "remote_java_tools_darwin_x86_64": "remote_java_tools_darwin_x86_64",
            "remote_java_tools_darwin_arm64": "remote_java_tools_darwin_arm64"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/sh:sh_configure.bzl",
          "extensionName": "sh_configure_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 35,
            "column": 39
          },
          "imports": {
            "local_config_sh": "local_config_sh"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/test:extensions.bzl",
          "extensionName": "remote_coverage_tools_extension",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 39,
            "column": 48
          },
          "imports": {
            "remote_coverage_tools": "remote_coverage_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": "@bazel_tools//tools/android:android_extensions.bzl",
          "extensionName": "remote_android_tools_extensions",
          "usingModule": "bazel_tools@_",
          "location": {
            "file": "@@bazel_tools//:MODULE.bazel",
            "line": 42,
            "column": 42
          },
          "imports": {
            "android_gmaven_r8": "android_gmaven_r8",
            "android_tools": "android_tools"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "rules_cc": "rules_cc@0.0.9",
        "rules_java": "rules_java@7.1.0",
        "rules_license": "rules_license@0.0.7",
        "rules_proto": "rules_proto@5.3.0-21.7",
        "rules_python": "rules_python@0.27.1",
        "platforms": "platforms@0.0.8",
        "com_google_protobuf": "protobuf@21.7",
        "zlib": "zlib@1.3",
        "build_bazel_apple_support": "apple_support@1.5.0",
        "local_config_platform": "local_config_platform@_"
      }
    },
    "local_config_platform@_": {
      "name": "local_config_platform",
      "version": "",
      "key": "local_config_platform@_",
      "repoName": "local_config_platform",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_"
      }
    },
    "bazel_skylib@1.5.0": {
      "name": "bazel_skylib",
      "version": "1.5.0",
      "key": "bazel_skylib@1.5.0",
      "repoName": "bazel_skylib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//toolchains/unittest:cmd_toolchain",
        "//toolchains/unittest:bash_toolchain"
      ],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "bazel_skylib~1.5.0",
          "urls": [
            "https://github.com/bazelbuild/bazel-skylib/releases/download/1.5.0/bazel-skylib-1.5.0.tar.gz"
          ],
          "integrity": "sha256-zVWgYudjuTSZIfD124w5MyiNyLpPdt2UFqrGis7jy5Q=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "platforms@0.0.8": {
      "name": "platforms",
      "version": "0.0.8",
      "key": "platforms@0.0.8",
      "repoName": "platforms",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_license": "rules_license@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "platforms",
          "urls": [
            "https://github.com/bazelbuild/platforms/releases/download/0.0.8/platforms-0.0.8.tar.gz"
          ],
          "integrity": "sha256-gVBAZgU4ns7LbaB8vLUJ1WN6OrmiS8abEQFTE2fYnXQ=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "stardoc@0.5.4": {
      "name": "stardoc",
      "version": "0.5.4",
      "key": "stardoc@0.5.4",
      "repoName": "stardoc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "rules_java": "rules_java@7.1.0",
        "rules_license": "rules_license@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "stardoc~0.5.4",
          "urls": [
            "https://github.com/bazelbuild/stardoc/releases/download/0.5.4/stardoc-0.5.4.tar.gz"
          ],
          "integrity": "sha256-7FcTnkZvquVj8vw5YJ2klIpHm7UbbWeu3X2bG4BZxDM=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "protobuf@21.7": {
      "name": "protobuf",
      "version": "21.7",
      "key": "protobuf@21.7",
      "repoName": "protobuf",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_jvm_external//:extensions.bzl",
          "extensionName": "maven",
          "usingModule": "protobuf@21.7",
          "location": {
            "file": "https://bcr.bazel.build/modules/protobuf/21.7/MODULE.bazel",
            "line": 22,
            "column": 22
          },
          "imports": {
            "maven": "maven"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "maven",
                "artifacts": [
                  "com.google.code.findbugs:jsr305:3.0.2",
                  "com.google.code.gson:gson:2.8.9",
                  "com.google.errorprone:error_prone_annotations:2.3.2",
                  "com.google.j2objc:j2objc-annotations:1.3",
                  "com.google.guava:guava:31.1-jre",
                  "com.google.guava:guava-testlib:31.1-jre",
                  "com.google.truth:truth:1.1.2",
                  "junit:junit:4.13.2",
                  "org.mockito:mockito-core:4.3.1"
                ]
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/protobuf/21.7/MODULE.bazel",
                "line": 24,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "rules_python": "rules_python@0.27.1",
        "rules_cc": "rules_cc@0.0.9",
        "rules_proto": "rules_proto@5.3.0-21.7",
        "rules_java": "rules_java@7.1.0",
        "rules_pkg": "rules_pkg@0.7.0",
        "com_google_abseil": "abseil-cpp@20211102.0",
        "zlib": "zlib@1.3",
        "upb": "upb@0.0.0-20220923-a547704",
        "rules_jvm_external": "rules_jvm_external@4.4.2",
        "com_google_googletest": "googletest@1.11.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "protobuf~21.7",
          "urls": [
            "https://github.com/protocolbuffers/protobuf/releases/download/v21.7/protobuf-all-21.7.zip"
          ],
          "integrity": "sha256-VJOiH17T/FAuZv7GuUScBqVRztYwAvpIkDxA36jeeko=",
          "strip_prefix": "protobuf-21.7",
          "remote_patches": {
            "https://bcr.bazel.build/modules/protobuf/21.7/patches/add_module_dot_bazel.patch": "sha256-q3V2+eq0v2XF0z8z+V+QF4cynD6JvHI1y3kI/+rzl5s=",
            "https://bcr.bazel.build/modules/protobuf/21.7/patches/add_module_dot_bazel_for_examples.patch": "sha256-O7YP6s3lo/1opUiO0jqXYORNHdZ/2q3hjz1QGy8QdIU=",
            "https://bcr.bazel.build/modules/protobuf/21.7/patches/relative_repo_names.patch": "sha256-RK9RjW8T5UJNG7flIrnFiNE9vKwWB+8uWWtJqXYT0w4=",
            "https://bcr.bazel.build/modules/protobuf/21.7/patches/add_missing_files.patch": "sha256-Hyne4DG2u5bXcWHNxNMirA2QFAe/2Cl8oMm1XJdkQIY="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_proto@5.3.0-21.7": {
      "name": "rules_proto",
      "version": "5.3.0-21.7",
      "key": "rules_proto@5.3.0-21.7",
      "repoName": "rules_proto",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "com_google_protobuf": "protobuf@21.7",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_proto~5.3.0-21.7",
          "urls": [
            "https://github.com/bazelbuild/rules_proto/archive/refs/tags/5.3.0-21.7.tar.gz"
          ],
          "integrity": "sha256-3D+yBqLLNEG0heseQjFlsjEjWh6psDG0Qzz3vB+kYN0=",
          "strip_prefix": "rules_proto-5.3.0-21.7",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "jsonnet@0.20.0": {
      "name": "jsonnet",
      "version": "0.20.0",
      "key": "jsonnet@0.20.0",
      "repoName": "jsonnet",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//platform_defs:default_python3_toolchain"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@jsonnet//tools/build_defs:extensions.bzl",
          "extensionName": "build_defs",
          "usingModule": "jsonnet@0.20.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/jsonnet/0.20.0/MODULE.bazel",
            "line": 5,
            "column": 27
          },
          "imports": {
            "default_python3_headers": "default_python3_headers",
            "io_bazel_rules_jsonnet": "io_bazel_rules_jsonnet"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "com_google_googletest": "googletest@1.11.0",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "jsonnet~0.20.0",
          "urls": [
            "https://github.com/google/jsonnet/archive/refs/tags/v0.20.0.zip"
          ],
          "integrity": "sha256-Z0/yQbHE2OFbGYwy1d50fUklc/lbS9MesYZNm9m7CYU=",
          "strip_prefix": "jsonnet-0.20.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/jsonnet/0.20.0/patches/module_dot_bazel.patch": "sha256-zQSfOyaUBgmoR51TJwX4JWdL/tUnjOWtpjWECRtsywc=",
            "https://bcr.bazel.build/modules/jsonnet/0.20.0/patches/extensions_dot_bzl.patch": "sha256-p3qnA50AsZHbXG1TkLthairYn0MsqtpQiY41C2VHUx4="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "bazel_features@1.1.1": {
      "name": "bazel_features",
      "version": "1.1.1",
      "key": "bazel_features@1.1.1",
      "repoName": "bazel_features",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_features//private:extensions.bzl",
          "extensionName": "version_extension",
          "usingModule": "bazel_features@1.1.1",
          "location": {
            "file": "https://bcr.bazel.build/modules/bazel_features/1.1.1/MODULE.bazel",
            "line": 6,
            "column": 24
          },
          "imports": {
            "bazel_features_globals": "bazel_features_globals",
            "bazel_features_version": "bazel_features_version"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "bazel_features~1.1.1",
          "urls": [
            "https://github.com/bazel-contrib/bazel_features/releases/download/v1.1.1/bazel_features-v1.1.1.tar.gz"
          ],
          "integrity": "sha256-YsJuQn5cvHUQJERpJ2IuOYqdzfMsZDJSOIFXCdEcEag=",
          "strip_prefix": "bazel_features-1.1.1",
          "remote_patches": {
            "https://bcr.bazel.build/modules/bazel_features/1.1.1/patches/module_dot_bazel_version.patch": "sha256-+56MAEsc7bYN/Pzhn252ZQUxiRzZg9bynXj1qpsmCYs="
          },
          "remote_patch_strip": 1
        }
      }
    },
    "rules_cc@0.0.9": {
      "name": "rules_cc",
      "version": "0.0.9",
      "key": "rules_cc@0.0.9",
      "repoName": "rules_cc",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_cc_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@bazel_tools//tools/cpp:cc_configure.bzl",
          "extensionName": "cc_configure_extension",
          "usingModule": "rules_cc@0.0.9",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_cc/0.0.9/MODULE.bazel",
            "line": 9,
            "column": 29
          },
          "imports": {
            "local_config_cc_toolchains": "local_config_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_cc~0.0.9",
          "urls": [
            "https://github.com/bazelbuild/rules_cc/releases/download/0.0.9/rules_cc-0.0.9.tar.gz"
          ],
          "integrity": "sha256-IDeHW5pEVtzkp50RKorohbvEqtlo5lh9ym5k86CQDN8=",
          "strip_prefix": "rules_cc-0.0.9",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_cc/0.0.9/patches/module_dot_bazel_version.patch": "sha256-mM+qzOI0SgAdaJBlWOSMwMPKpaA9b7R37Hj/tp5bb4g="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_java@7.1.0": {
      "name": "rules_java",
      "version": "7.1.0",
      "key": "rules_java@7.1.0",
      "repoName": "rules_java",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "//toolchains:all",
        "@local_jdk//:runtime_toolchain_definition",
        "@local_jdk//:bootstrap_runtime_toolchain_definition",
        "@remotejdk11_linux_toolchain_config_repo//:all",
        "@remotejdk11_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk11_linux_ppc64le_toolchain_config_repo//:all",
        "@remotejdk11_linux_s390x_toolchain_config_repo//:all",
        "@remotejdk11_macos_toolchain_config_repo//:all",
        "@remotejdk11_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk11_win_toolchain_config_repo//:all",
        "@remotejdk11_win_arm64_toolchain_config_repo//:all",
        "@remotejdk17_linux_toolchain_config_repo//:all",
        "@remotejdk17_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk17_linux_ppc64le_toolchain_config_repo//:all",
        "@remotejdk17_linux_s390x_toolchain_config_repo//:all",
        "@remotejdk17_macos_toolchain_config_repo//:all",
        "@remotejdk17_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk17_win_toolchain_config_repo//:all",
        "@remotejdk17_win_arm64_toolchain_config_repo//:all",
        "@remotejdk21_linux_toolchain_config_repo//:all",
        "@remotejdk21_linux_aarch64_toolchain_config_repo//:all",
        "@remotejdk21_macos_toolchain_config_repo//:all",
        "@remotejdk21_macos_aarch64_toolchain_config_repo//:all",
        "@remotejdk21_win_toolchain_config_repo//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_java//java:extensions.bzl",
          "extensionName": "toolchains",
          "usingModule": "rules_java@7.1.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_java/7.1.0/MODULE.bazel",
            "line": 19,
            "column": 27
          },
          "imports": {
            "remote_java_tools": "remote_java_tools",
            "remote_java_tools_linux": "remote_java_tools_linux",
            "remote_java_tools_windows": "remote_java_tools_windows",
            "remote_java_tools_darwin_x86_64": "remote_java_tools_darwin_x86_64",
            "remote_java_tools_darwin_arm64": "remote_java_tools_darwin_arm64",
            "local_jdk": "local_jdk",
            "remotejdk11_linux_toolchain_config_repo": "remotejdk11_linux_toolchain_config_repo",
            "remotejdk11_linux_aarch64_toolchain_config_repo": "remotejdk11_linux_aarch64_toolchain_config_repo",
            "remotejdk11_linux_ppc64le_toolchain_config_repo": "remotejdk11_linux_ppc64le_toolchain_config_repo",
            "remotejdk11_linux_s390x_toolchain_config_repo": "remotejdk11_linux_s390x_toolchain_config_repo",
            "remotejdk11_macos_toolchain_config_repo": "remotejdk11_macos_toolchain_config_repo",
            "remotejdk11_macos_aarch64_toolchain_config_repo": "remotejdk11_macos_aarch64_toolchain_config_repo",
            "remotejdk11_win_toolchain_config_repo": "remotejdk11_win_toolchain_config_repo",
            "remotejdk11_win_arm64_toolchain_config_repo": "remotejdk11_win_arm64_toolchain_config_repo",
            "remotejdk17_linux_toolchain_config_repo": "remotejdk17_linux_toolchain_config_repo",
            "remotejdk17_linux_aarch64_toolchain_config_repo": "remotejdk17_linux_aarch64_toolchain_config_repo",
            "remotejdk17_linux_ppc64le_toolchain_config_repo": "remotejdk17_linux_ppc64le_toolchain_config_repo",
            "remotejdk17_linux_s390x_toolchain_config_repo": "remotejdk17_linux_s390x_toolchain_config_repo",
            "remotejdk17_macos_toolchain_config_repo": "remotejdk17_macos_toolchain_config_repo",
            "remotejdk17_macos_aarch64_toolchain_config_repo": "remotejdk17_macos_aarch64_toolchain_config_repo",
            "remotejdk17_win_toolchain_config_repo": "remotejdk17_win_toolchain_config_repo",
            "remotejdk17_win_arm64_toolchain_config_repo": "remotejdk17_win_arm64_toolchain_config_repo",
            "remotejdk21_linux_toolchain_config_repo": "remotejdk21_linux_toolchain_config_repo",
            "remotejdk21_linux_aarch64_toolchain_config_repo": "remotejdk21_linux_aarch64_toolchain_config_repo",
            "remotejdk21_macos_toolchain_config_repo": "remotejdk21_macos_toolchain_config_repo",
            "remotejdk21_macos_aarch64_toolchain_config_repo": "remotejdk21_macos_aarch64_toolchain_config_repo",
            "remotejdk21_win_toolchain_config_repo": "remotejdk21_win_toolchain_config_repo"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "platforms": "platforms@0.0.8",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "rules_proto": "rules_proto@5.3.0-21.7",
        "rules_license": "rules_license@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_java~7.1.0",
          "urls": [
            "https://github.com/bazelbuild/rules_java/releases/download/7.1.0/rules_java-7.1.0.tar.gz"
          ],
          "integrity": "sha256-o3pOX2OrgnFuXdau75iO2EYcegC46TYnImKJn1h81OE=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_license@0.0.7": {
      "name": "rules_license",
      "version": "0.0.7",
      "key": "rules_license@0.0.7",
      "repoName": "rules_license",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_license~0.0.7",
          "urls": [
            "https://github.com/bazelbuild/rules_license/releases/download/0.0.7/rules_license-0.0.7.tar.gz"
          ],
          "integrity": "sha256-RTHezLkTY5ww5cdRKgVNXYdWmNrrddjPkPKEN1/nw2A=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "zlib@1.3": {
      "name": "zlib",
      "version": "1.3",
      "key": "zlib@1.3",
      "repoName": "zlib",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "platforms": "platforms@0.0.8",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "zlib~1.3",
          "urls": [
            "https://github.com/madler/zlib/releases/download/v1.3/zlib-1.3.tar.gz"
          ],
          "integrity": "sha256-/wukwpIBPbwnUws6geH5qBPNOd4Byl4Pi/NVcC76WT4=",
          "strip_prefix": "zlib-1.3",
          "remote_patches": {
            "https://bcr.bazel.build/modules/zlib/1.3/patches/add_build_file.patch": "sha256-Ei+FYaaOo7A3jTKunMEodTI0Uw5NXQyZEcboMC8JskY=",
            "https://bcr.bazel.build/modules/zlib/1.3/patches/module_dot_bazel.patch": "sha256-fPWLM+2xaF/kuy+kZc1YTfW6hNjrkG400Ho7gckuyJk="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "apple_support@1.5.0": {
      "name": "apple_support",
      "version": "1.5.0",
      "key": "apple_support@1.5.0",
      "repoName": "build_bazel_apple_support",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [
        "@local_config_apple_cc_toolchains//:all"
      ],
      "extensionUsages": [
        {
          "extensionBzlFile": "@build_bazel_apple_support//crosstool:setup.bzl",
          "extensionName": "apple_cc_configure_extension",
          "usingModule": "apple_support@1.5.0",
          "location": {
            "file": "https://bcr.bazel.build/modules/apple_support/1.5.0/MODULE.bazel",
            "line": 17,
            "column": 35
          },
          "imports": {
            "local_config_apple_cc": "local_config_apple_cc",
            "local_config_apple_cc_toolchains": "local_config_apple_cc_toolchains"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "apple_support~1.5.0",
          "urls": [
            "https://github.com/bazelbuild/apple_support/releases/download/1.5.0/apple_support.1.5.0.tar.gz"
          ],
          "integrity": "sha256-miM41vja0yRPgj8txghKA+TQ+7J8qJLclw5okNW0gYQ=",
          "strip_prefix": "",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "rules_pkg@0.7.0": {
      "name": "rules_pkg",
      "version": "0.7.0",
      "key": "rules_pkg@0.7.0",
      "repoName": "rules_pkg",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_python": "rules_python@0.27.1",
        "bazel_skylib": "bazel_skylib@1.5.0",
        "rules_license": "rules_license@0.0.7",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_pkg~0.7.0",
          "urls": [
            "https://github.com/bazelbuild/rules_pkg/releases/download/0.7.0/rules_pkg-0.7.0.tar.gz"
          ],
          "integrity": "sha256-iimOgydi7aGDBZfWT+fbWBeKqEzVkm121bdE1lWJQcI=",
          "strip_prefix": "",
          "remote_patches": {
            "https://bcr.bazel.build/modules/rules_pkg/0.7.0/patches/module_dot_bazel.patch": "sha256-4OaEPZwYF6iC71ZTDg6MJ7LLqX7ZA0/kK4mT+4xKqiE="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "abseil-cpp@20211102.0": {
      "name": "abseil-cpp",
      "version": "20211102.0",
      "key": "abseil-cpp@20211102.0",
      "repoName": "abseil-cpp",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "rules_cc": "rules_cc@0.0.9",
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "abseil-cpp~20211102.0",
          "urls": [
            "https://github.com/abseil/abseil-cpp/archive/refs/tags/20211102.0.tar.gz"
          ],
          "integrity": "sha256-3PcbnLqNwMqZQMSzFqDHlr6Pq0KwcLtrfKtitI8OZsQ=",
          "strip_prefix": "abseil-cpp-20211102.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/abseil-cpp/20211102.0/patches/module_dot_bazel.patch": "sha256-4izqopgGCey4jVZzl/w3M2GVPNohjh2B5TmbThZNvPY="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "upb@0.0.0-20220923-a547704": {
      "name": "upb",
      "version": "0.0.0-20220923-a547704",
      "key": "upb@0.0.0-20220923-a547704",
      "repoName": "upb",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "rules_proto": "rules_proto@5.3.0-21.7",
        "com_google_protobuf": "protobuf@21.7",
        "com_google_absl": "abseil-cpp@20211102.0",
        "platforms": "platforms@0.0.8",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "upb~0.0.0-20220923-a547704",
          "urls": [
            "https://github.com/protocolbuffers/upb/archive/a5477045acaa34586420942098f5fecd3570f577.tar.gz"
          ],
          "integrity": "sha256-z39x6v+QskwaKLSWRan/A6mmwecTQpHOcJActj5zZLU=",
          "strip_prefix": "upb-a5477045acaa34586420942098f5fecd3570f577",
          "remote_patches": {
            "https://bcr.bazel.build/modules/upb/0.0.0-20220923-a547704/patches/module_dot_bazel.patch": "sha256-wH4mNS6ZYy+8uC0HoAft/c7SDsq2Kxf+J8dUakXhaB0="
          },
          "remote_patch_strip": 0
        }
      }
    },
    "rules_jvm_external@4.4.2": {
      "name": "rules_jvm_external",
      "version": "4.4.2",
      "key": "rules_jvm_external@4.4.2",
      "repoName": "rules_jvm_external",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [
        {
          "extensionBzlFile": "@rules_jvm_external//:non-module-deps.bzl",
          "extensionName": "non_module_deps",
          "usingModule": "rules_jvm_external@4.4.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel",
            "line": 9,
            "column": 32
          },
          "imports": {
            "io_bazel_rules_kotlin": "io_bazel_rules_kotlin"
          },
          "devImports": [],
          "tags": [],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        },
        {
          "extensionBzlFile": ":extensions.bzl",
          "extensionName": "maven",
          "usingModule": "rules_jvm_external@4.4.2",
          "location": {
            "file": "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel",
            "line": 16,
            "column": 22
          },
          "imports": {
            "rules_jvm_external_deps": "rules_jvm_external_deps"
          },
          "devImports": [],
          "tags": [
            {
              "tagName": "install",
              "attributeValues": {
                "name": "rules_jvm_external_deps",
                "artifacts": [
                  "com.google.cloud:google-cloud-core:1.93.10",
                  "com.google.cloud:google-cloud-storage:1.113.4",
                  "com.google.code.gson:gson:2.9.0",
                  "org.apache.maven:maven-artifact:3.8.6",
                  "software.amazon.awssdk:s3:2.17.183"
                ],
                "lock_file": "@rules_jvm_external//:rules_jvm_external_deps_install.json"
              },
              "devDependency": false,
              "location": {
                "file": "https://bcr.bazel.build/modules/rules_jvm_external/4.4.2/MODULE.bazel",
                "line": 18,
                "column": 14
              }
            }
          ],
          "hasDevUseExtension": false,
          "hasNonDevUseExtension": true
        }
      ],
      "deps": {
        "bazel_skylib": "bazel_skylib@1.5.0",
        "io_bazel_stardoc": "stardoc@0.5.4",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "rules_jvm_external~4.4.2",
          "urls": [
            "https://github.com/bazelbuild/rules_jvm_external/archive/refs/tags/4.4.2.zip"
          ],
          "integrity": "sha256-c1YC9QgT6y6pPKP15DsZWb2AshO4NqB6YqKddXZwt3s=",
          "strip_prefix": "rules_jvm_external-4.4.2",
          "remote_patches": {},
          "remote_patch_strip": 0
        }
      }
    },
    "googletest@1.11.0": {
      "name": "googletest",
      "version": "1.11.0",
      "key": "googletest@1.11.0",
      "repoName": "googletest",
      "executionPlatformsToRegister": [],
      "toolchainsToRegister": [],
      "extensionUsages": [],
      "deps": {
        "com_google_absl": "abseil-cpp@20211102.0",
        "platforms": "platforms@0.0.8",
        "rules_cc": "rules_cc@0.0.9",
        "bazel_tools": "bazel_tools@_",
        "local_config_platform": "local_config_platform@_"
      },
      "repoSpec": {
        "bzlFile": "@bazel_tools//tools/build_defs/repo:http.bzl",
        "ruleClassName": "http_archive",
        "attributes": {
          "name": "googletest~1.11.0",
          "urls": [
            "https://github.com/google/googletest/archive/refs/tags/release-1.11.0.tar.gz"
          ],
          "integrity": "sha256-tIcL8SH/d5W6INILzdhie44Ijy0dqymaAxwQNO3ck9U=",
          "strip_prefix": "googletest-release-1.11.0",
          "remote_patches": {
            "https://bcr.bazel.build/modules/googletest/1.11.0/patches/module_dot_bazel.patch": "sha256-HuahEdI/n8KCI071sN3CEziX+7qP/Ec77IWayYunLP0="
          },
          "remote_patch_strip": 0
        }
      }
    }
  },
  "moduleExtensions": {
    "//private:extensions.bzl%non_module_deps": {
      "general": {
        "bzlTransitiveDigest": "jz8RMAXOEgl2fvXQc0OZxT8iTTJlY5e1K7Cu9GOTFYA=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "com_github_pseudomuto_protoc_gen_doc_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_pseudomuto_protoc_gen_doc_aarch64_linux",
              "url": "https://github.com/pseudomuto/protoc-gen-doc/releases/download/v1.5.1/protoc-gen-doc_1.5.1_linux_arm64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-doc\"])",
              "integrity": "sha256-Fy5qGR2s7Y6zHrzZDUUjoa/6bQeQCom1SEIYI92nlv4="
            }
          },
          "io_k8s_sigs_kind_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~io_k8s_sigs_kind_aarch64_linux",
              "url": "https://github.com/kubernetes-sigs/kind/releases/download/v0.22.0/kind-linux-arm64",
              "sha256": "4431805115da3b54290e3e976fe2db9a7e703f116177aace6735dfa1d8a4f3fe",
              "executable": true,
              "downloaded_file_path": "kind"
            }
          },
          "com_github_protocolbuffers_protobuf_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_protocolbuffers_protobuf_x86_64_macos",
              "url": "https://github.com/protocolbuffers/protobuf/releases/download/v25.1/protoc-25.1-osx-x86_64.zip",
              "build_file_content": "exports_files([\"bin/protoc\"])",
              "integrity": "sha256-csbWsryFX/hojDt/sxKIzK/Qq1Ulb/g4LVcR7PzBH08="
            }
          },
          "com_github_protocolbuffers_protobuf_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_protocolbuffers_protobuf_aarch64_macos",
              "url": "https://github.com/protocolbuffers/protobuf/releases/download/v25.1/protoc-25.1-osx-aarch_64.zip",
              "build_file_content": "exports_files([\"bin/protoc\"])",
              "integrity": "sha256-MgMIzhjDWVZJSHVPUXSN5BzwKk5+3wz0eoBbnThhDxY="
            }
          },
          "com_github_protocolbuffers_protobuf_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_protocolbuffers_protobuf_aarch64_linux",
              "url": "https://github.com/protocolbuffers/protobuf/releases/download/v25.1/protoc-25.1-linux-aarch_64.zip",
              "build_file_content": "exports_files([\"bin/protoc\"])",
              "integrity": "sha256-mZdajBG4PNZcPhFRrhcUv5WavAUhrLZZv3IFJCdqsMg="
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_aarch64_macos",
              "url": "https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.18.1/protoc-gen-grpc-gateway-v2.18.1-darwin-arm64",
              "integrity": "sha256-ZKcjzAiohWlQXFa2pAvIk9+xKGnbQOpx3E0anmScSq0=",
              "executable": true,
              "downloaded_file_path": "protoc-gen-grpc-gateway"
            }
          },
          "com_github_protocolbuffers_protobuf_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_protocolbuffers_protobuf_x86_64_linux",
              "url": "https://github.com/protocolbuffers/protobuf/releases/download/v25.1/protoc-25.1-linux-x86_64.zip",
              "build_file_content": "exports_files([\"bin/protoc\"])",
              "integrity": "sha256-7Y/Kh6EciI/tMp1qWcNMfUNhZfZiosh1JG3bGsK23VA="
            }
          },
          "io_k8s_sigs_kind_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~io_k8s_sigs_kind_aarch64_macos",
              "url": "https://github.com/kubernetes-sigs/kind/releases/download/v0.22.0/kind-darwin-arm64",
              "sha256": "c8dd3b287965150ae4db668294edc48229116e95d94620c306d8fae932ee633f",
              "executable": true,
              "downloaded_file_path": "kind"
            }
          },
          "com_github_pseudomuto_protoc_gen_doc_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_pseudomuto_protoc_gen_doc_aarch64_macos",
              "url": "https://github.com/pseudomuto/protoc-gen-doc/releases/download/v1.5.1/protoc-gen-doc_1.5.1_darwin_arm64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-doc\"])",
              "integrity": "sha256-boxzfZpnpqhzo/HTfti7KgqZlvbc9nAaoQSMe9eYqvk="
            }
          },
          "org_uber_go_gopatch_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~org_uber_go_gopatch_aarch64_macos",
              "url": "https://github.com/uber-go/gopatch/releases/download/v0.3.0/gopatch_Darwin_arm64.tar.gz",
              "build_file_content": "exports_files([\"gopatch\"])",
              "sha256": "2bb3914dbf273581c34e0db0913bd99f10cbbe622849ee0d8a460dbd03f27348"
            }
          },
          "sh_helm_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~sh_helm_aarch64_macos",
              "url": "https://get.helm.sh/helm-v3.14.2-darwin-arm64.tar.gz",
              "build_file_content": "exports_files([\"helm\"])",
              "sha256": "ff502fd39b06497fa3d5a51ec2ced02b9fcfdb0e9a948d315fb1b2f13ddc39fb",
              "strip_prefix": "darwin-arm64"
            }
          },
          "org_uber_go_gopatch_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~org_uber_go_gopatch_aarch64_linux",
              "url": "https://github.com/uber-go/gopatch/releases/download/v0.3.0/gopatch_Linux_arm64.tar.gz",
              "build_file_content": "exports_files([\"gopatch\"])",
              "sha256": "2f73999527945dda74323dddf991442a52fececd4ff7f810821ef46dcf33e3ad"
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_x86_64_macos",
              "url": "https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.18.1/protoc-gen-grpc-gateway-v2.18.1-darwin-x86_64",
              "integrity": "sha256-yeFzNDsIHqcj7A+k6FfUcJL3tWag2+0vGeKzYabh9/k=",
              "executable": true,
              "downloaded_file_path": "protoc-gen-grpc-gateway"
            }
          },
          "io_k8s_sigs_kind_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~io_k8s_sigs_kind_x86_64_macos",
              "url": "https://github.com/kubernetes-sigs/kind/releases/download/v0.22.0/kind-darwin-amd64",
              "sha256": "28a9f7ad7fd77922c639e21c034d0f989b33402693f4f842099cd9185b144d20",
              "executable": true,
              "downloaded_file_path": "kind"
            }
          },
          "sh_helm_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~sh_helm_x86_64_macos",
              "url": "https://get.helm.sh/helm-v3.14.2-darwin-amd64.tar.gz",
              "build_file_content": "exports_files([\"helm\"])",
              "sha256": "64c633ae194bde77b7e7b7936a2814a7417817dc8b7bb7d270bd24a7a17b8d12",
              "strip_prefix": "darwin-amd64"
            }
          },
          "com_github_yelp_dumb_init_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_yelp_dumb_init_x86_64_linux",
              "url": "https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_x86_64",
              "integrity": "sha256-6HS1XzJ5ykFBXSkMUSp7qdCPmAQbKK58KssZpUXxxN8=",
              "executable": true,
              "downloaded_file_path": "dumb-init"
            }
          },
          "com_github_containers_skopeo_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_containers_skopeo_x86_64_macos",
              "url": "https://github.com/tgolsson/skopeo-binary/releases/download/v1.14.2/skopeo-darwin-amd64",
              "sha256": "5a82082f439508255fd2588e1aecbe9b61bf5ad62442cde2bab5d3ba665ad63f",
              "executable": true,
              "downloaded_file_path": "skopeo"
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_x86_64_linux",
              "url": "https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.18.1/protoc-gen-grpc-gateway-v2.18.1-linux-x86_64",
              "integrity": "sha256-PCEXHYgPROUCI6NBXYHMPjWaxANgpYqrw6bXMl1168k=",
              "executable": true,
              "downloaded_file_path": "protoc-gen-grpc-gateway"
            }
          },
          "com_github_protocolbuffers_protobuf_go_protoc_gen_go_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_protocolbuffers_protobuf_go_protoc_gen_go_aarch64_linux",
              "url": "https://github.com/protocolbuffers/protobuf-go/releases/download/v1.31.0/protoc-gen-go.v1.31.0.linux.arm64.tar.gz",
              "sha256": "7963f59b873680b90e61c3be94bfe35e4731789516fc7377ead1be652212fcb1",
              "build_file_content": "exports_files([\"protoc-gen-go\"])"
            }
          },
          "io_k8s_sigs_kind_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~io_k8s_sigs_kind_x86_64_linux",
              "url": "https://github.com/kubernetes-sigs/kind/releases/download/v0.22.0/kind-linux-amd64",
              "sha256": "e4264d7ee07ca642fe52818d7c0ed188b193c214889dd055c929dbcb968d1f62",
              "executable": true,
              "downloaded_file_path": "kind"
            }
          },
          "sh_helm_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~sh_helm_x86_64_linux",
              "url": "https://get.helm.sh/helm-v3.14.2-linux-amd64.tar.gz",
              "build_file_content": "exports_files([\"helm\"])",
              "sha256": "0885a501d586c1e949e9b113bf3fb3290b0bbf74db9444a1d8c2723a143006a5",
              "strip_prefix": "linux-amd64"
            }
          },
          "io_k8s_dl_kubectl_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~io_k8s_dl_kubectl_aarch64_macos",
              "url": "https://dl.k8s.io/release/v1.29.2/bin/darwin/arm64/kubectl",
              "sha256": "ce030f86625df96560402573d86d4e6f4b8b956ca3e3b9df57cb8ccf2b9a540c",
              "executable": true,
              "downloaded_file_path": "kubectl"
            }
          },
          "com_github_protocolbuffers_protobuf_go_protoc_gen_go_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_protocolbuffers_protobuf_go_protoc_gen_go_aarch64_macos",
              "url": "https://github.com/protocolbuffers/protobuf-go/releases/download/v1.31.0/protoc-gen-go.v1.31.0.darwin.arm64.tar.gz",
              "sha256": "c01ab747f9decfb9bc300c8506a8e741d35dc45860cbf3950c752572129b2139",
              "build_file_content": "exports_files([\"protoc-gen-go\"])"
            }
          },
          "com_github_protocolbuffers_protobuf_go_protoc_gen_go_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_protocolbuffers_protobuf_go_protoc_gen_go_x86_64_macos",
              "url": "https://github.com/protocolbuffers/protobuf-go/releases/download/v1.31.0/protoc-gen-go.v1.31.0.darwin.amd64.tar.gz",
              "sha256": "7890e2790dd68b181b1f6c33f306073e0abda3e7f360548e0b5ccb5fc20485a5",
              "build_file_content": "exports_files([\"protoc-gen-go\"])"
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_aarch64_linux",
              "url": "https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.18.1/protoc-gen-openapiv2-v2.18.1-linux-arm64",
              "integrity": "sha256-0+TNVOGyBSxx6+Uikbt4sI6SJ7xTYfKdyzy5SRL23v0=",
              "executable": true,
              "downloaded_file_path": "protoc-gen-openapiv2"
            }
          },
          "org_uber_go_gopatch_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~org_uber_go_gopatch_x86_64_linux",
              "url": "https://github.com/uber-go/gopatch/releases/download/v0.3.0/gopatch_Linux_x86_64.tar.gz",
              "build_file_content": "exports_files([\"gopatch\"])",
              "sha256": "34f12f161209ce91010236a3781a7c90b3a391377f69be7376cce02586a71140"
            }
          },
          "io_k8s_dl_kubectl_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~io_k8s_dl_kubectl_aarch64_linux",
              "url": "https://dl.k8s.io/release/v1.29.2/bin/linux/arm64/kubectl",
              "sha256": "3507ecb4224cf05ae2151a98d4932253624e7762159936d5347b19fe037655ca",
              "executable": true,
              "downloaded_file_path": "kubectl"
            }
          },
          "com_github_containers_skopeo_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_containers_skopeo_x86_64_linux",
              "url": "https://github.com/tgolsson/skopeo-binary/releases/download/v1.14.2/skopeo-linux-amd64",
              "sha256": "51218f93a2b079e36a36f7fbe2d2d86778be0a6947653031b4f9e254e2469224",
              "executable": true,
              "downloaded_file_path": "skopeo"
            }
          },
          "com_github_yelp_dumb_init_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_yelp_dumb_init_aarch64_linux",
              "url": "https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_aarch64",
              "integrity": "sha256-t9ZI+XFUqZxTm2PFWXnNKfAF+IQw+zgwB/40WDQLeV4=",
              "executable": true,
              "downloaded_file_path": "dumb-init"
            }
          },
          "com_github_bufbuild_protoc_gen_validate_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_bufbuild_protoc_gen_validate_aarch64_linux",
              "url": "https://github.com/bufbuild/protoc-gen-validate/releases/download/v1.0.2/protoc-gen-validate_1.0.2_linux_arm64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-validate-go\"])",
              "integrity": "sha256-kPUsHhhnC+8DdiffEJuyDiTWti7FTIMVBPB0PQLi+sI="
            }
          },
          "org_uber_go_gopatch_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~org_uber_go_gopatch_x86_64_macos",
              "url": "https://github.com/uber-go/gopatch/releases/download/v0.3.0/gopatch_Darwin_x86_64.tar.gz",
              "build_file_content": "exports_files([\"gopatch\"])",
              "sha256": "b34750977ce6802c2ade0c7c302c79d065b86eb9e09bca86fa6f245b9d3fabe3"
            }
          },
          "com_github_kubernetes_sigs_metrics_server_helm_chart": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_kubernetes_sigs_metrics_server_helm_chart",
              "url": "https://github.com/kubernetes-sigs/metrics-server/releases/download/metrics-server-helm-chart-3.11.0/metrics-server-3.11.0.tgz",
              "sha256": "e7cba5a2d7e2b0949b3ea1aa48fc3780b71eba17e1edccc8273f5da67048164b",
              "downloaded_file_path": "metrics-server.tgz"
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_x86_64_linux",
              "url": "https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.18.1/protoc-gen-openapiv2-v2.18.1-linux-x86_64",
              "integrity": "sha256-ABA8GJOn6widP5Ybn2QmN5l8rLizezUhomHlCPw+sE4=",
              "executable": true,
              "downloaded_file_path": "protoc-gen-openapiv2"
            }
          },
          "com_github_containers_skopeo_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_containers_skopeo_aarch64_macos",
              "url": "https://github.com/tgolsson/skopeo-binary/releases/download/v1.14.2/skopeo-darwin-arm64",
              "sha256": "77a31136eaa04643120b4999e526da35735e01ccc80f1c97752a33b3fed64547",
              "executable": true,
              "downloaded_file_path": "skopeo"
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_x86_64_macos",
              "url": "https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.18.1/protoc-gen-openapiv2-v2.18.1-darwin-x86_64",
              "integrity": "sha256-eHoFTKQC5E3iYmvhoglL/0QKA6m0UrnKxFn12+22jEw=",
              "executable": true,
              "downloaded_file_path": "protoc-gen-openapiv2"
            }
          },
          "sh_helm_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~sh_helm_aarch64_linux",
              "url": "https://get.helm.sh/helm-v3.14.2-linux-arm64.tar.gz",
              "build_file_content": "exports_files([\"helm\"])",
              "sha256": "c65d6a9557bb359abc2c0d26670de850b52327dc3976ad6f9e14c298ea3e1b61",
              "strip_prefix": "linux-arm64"
            }
          },
          "com_github_bufbuild_protoc_gen_validate_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_bufbuild_protoc_gen_validate_x86_64_macos",
              "url": "https://github.com/bufbuild/protoc-gen-validate/releases/download/v1.0.2/protoc-gen-validate_1.0.2_darwin_amd64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-validate-go\"])",
              "integrity": "sha256-CPPaRgwsEOlkgW0acOVctL4aLQe1wRpNbQEMXzr3QtQ="
            }
          },
          "com_github_containers_skopeo_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_containers_skopeo_aarch64_linux",
              "url": "https://github.com/tgolsson/skopeo-binary/releases/download/v1.14.2/skopeo-linux-arm64",
              "sha256": "364c46085de31edf4b312f13587442f4eade1f181bc5a9ea2ab2ffab5b575916",
              "executable": true,
              "downloaded_file_path": "skopeo"
            }
          },
          "com_github_protocolbuffers_protobuf_go_protoc_gen_go_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_protocolbuffers_protobuf_go_protoc_gen_go_x86_64_linux",
              "url": "https://github.com/protocolbuffers/protobuf-go/releases/download/v1.31.0/protoc-gen-go.v1.31.0.linux.amd64.tar.gz",
              "sha256": "04414c31a3af6f908d4359ff12a02f7ef864417978e303ccc62053af536ae13c",
              "build_file_content": "exports_files([\"protoc-gen-go\"])"
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_aarch64_macos",
              "url": "https://github.com/grpc-ecosystem/protoc-gen-grpc-gateway-ts/releases/download/v1.1.2/protoc-gen-grpc-gateway-ts_1.1.2_Darwin_arm64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-grpc-gateway-ts\"])",
              "sha256": "de4aa0ae3734ac62737a982b39a7194f7ca4925c49f282e7570f0ab6597ba532"
            }
          },
          "io_k8s_dl_kubectl_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~io_k8s_dl_kubectl_x86_64_linux",
              "url": "https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubectl",
              "sha256": "7816d067740f47f949be826ac76943167b7b3a38c4f0c18b902fffa8779a5afa",
              "executable": true,
              "downloaded_file_path": "kubectl"
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_x86_64_macos",
              "url": "https://github.com/grpc-ecosystem/protoc-gen-grpc-gateway-ts/releases/download/v1.1.2/protoc-gen-grpc-gateway-ts_1.1.2_Darwin_amd64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-grpc-gateway-ts\"])",
              "sha256": "32ccc4ac6ec42b183a4ae806dac628daa47e1eb9dd35356f72f07ffc12967357"
            }
          },
          "com_github_pseudomuto_protoc_gen_doc_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_pseudomuto_protoc_gen_doc_x86_64_linux",
              "url": "https://github.com/pseudomuto/protoc-gen-doc/releases/download/v1.5.1/protoc-gen-doc_1.5.1_linux_amd64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-doc\"])",
              "integrity": "sha256-R81ysH5tqzQI1oamXTfTpqthbafYtWSyvSopY6crcv0="
            }
          },
          "com_github_bufbuild_protoc_gen_validate_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_bufbuild_protoc_gen_validate_x86_64_linux",
              "url": "https://github.com/bufbuild/protoc-gen-validate/releases/download/v1.0.2/protoc-gen-validate_1.0.2_linux_amd64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-validate-go\"])",
              "integrity": "sha256-XVMR6B95Kben+O1jY8hfg6Jbdw7gDzvUUCSYuR5tO3E="
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_x86_64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_x86_64_linux",
              "url": "https://github.com/grpc-ecosystem/protoc-gen-grpc-gateway-ts/releases/download/v1.1.2/protoc-gen-grpc-gateway-ts_1.1.2_Linux_amd64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-grpc-gateway-ts\"])",
              "sha256": "94c348e2554d8c76d10bb48439e5e015c0da54aae46a87adca44527c737ea341"
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_ts_aarch64_linux",
              "url": "https://github.com/grpc-ecosystem/protoc-gen-grpc-gateway-ts/releases/download/v1.1.2/protoc-gen-grpc-gateway-ts_1.1.2_Linux_arm64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-grpc-gateway-ts\"])",
              "sha256": "f4a0f1f2e6cf3c92b14e5f92af3a3774e752f9ade76831a3f02568f037746042"
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_aarch64_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_grpc_gateway_aarch64_linux",
              "url": "https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.18.1/protoc-gen-grpc-gateway-v2.18.1-linux-arm64",
              "integrity": "sha256-d0Q4iffQ4eywC/lAeV+dxF2UfBLN4DwZ2MW/OSYkDuc=",
              "executable": true,
              "downloaded_file_path": "protoc-gen-grpc-gateway"
            }
          },
          "io_k8s_dl_kubectl_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~io_k8s_dl_kubectl_x86_64_macos",
              "url": "https://dl.k8s.io/release/v1.29.2/bin/darwin/amd64/kubectl",
              "sha256": "bb04d9450d9c9fa120956c5cc7c8dfaa700297038ff9c941741e730b02bbd1f3",
              "executable": true,
              "downloaded_file_path": "kubectl"
            }
          },
          "com_github_bufbuild_protoc_gen_validate_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_bufbuild_protoc_gen_validate_aarch64_macos",
              "url": "https://github.com/bufbuild/protoc-gen-validate/releases/download/v1.0.2/protoc-gen-validate_1.0.2_darwin_arm64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-validate-go\"])",
              "integrity": "sha256-CtoZYRgLAU26WIkDDV+1Row6H4l0PcbN9TRG56vbVDU="
            }
          },
          "com_github_pseudomuto_protoc_gen_doc_x86_64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "_main~non_module_deps~com_github_pseudomuto_protoc_gen_doc_x86_64_macos",
              "url": "https://github.com/pseudomuto/protoc-gen-doc/releases/download/v1.5.1/protoc-gen-doc_1.5.1_darwin_amd64.tar.gz",
              "build_file_content": "exports_files([\"protoc-gen-doc\"])",
              "integrity": "sha256-9Cnlpd3Yhr+2gmXy+SwcalCXgLetyveos76UPyjhRLo="
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_aarch64_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "_main~non_module_deps~com_github_grpc_ecosystem_grpc_gateway_protoc_gen_openapiv2_aarch64_macos",
              "url": "https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.18.1/protoc-gen-openapiv2-v2.18.1-darwin-arm64",
              "integrity": "sha256-QdkMfGznadc2KMO0ZZ8q9gQLcAp87nkdG2dRyrQ+ClE=",
              "executable": true,
              "downloaded_file_path": "protoc-gen-openapiv2"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@apple_support~1.5.0//crosstool:setup.bzl%apple_cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "pMLFCYaRPkgXPQ8vtuNkMfiHfPmRBy6QJfnid4sWfv0=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_apple_cc": {
            "bzlFile": "@@apple_support~1.5.0//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf",
            "attributes": {
              "name": "apple_support~1.5.0~apple_cc_configure_extension~local_config_apple_cc"
            }
          },
          "local_config_apple_cc_toolchains": {
            "bzlFile": "@@apple_support~1.5.0//crosstool:setup.bzl",
            "ruleClassName": "_apple_cc_autoconf_toolchains",
            "attributes": {
              "name": "apple_support~1.5.0~apple_cc_configure_extension~local_config_apple_cc_toolchains"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "apple_support~1.5.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@aspect_bazel_lib~2.5.0//lib:extensions.bzl%toolchains": {
      "general": {
        "bzlTransitiveDigest": "920imlyu0s6sCUlVmkDsMglkEyu6tt0LwO7b+99x9bg=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "expand_template_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~expand_template_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "copy_to_directory_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_to_directory_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "bsd_tar_host": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~bsd_tar_host",
              "platform": "host"
            }
          },
          "jq_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~jq_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "1.7"
            }
          },
          "copy_to_directory_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_to_directory_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "expand_template_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~expand_template_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "jq_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~jq_linux_arm64",
              "platform": "linux_arm64",
              "version": "1.7"
            }
          },
          "coreutils_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~coreutils_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "0.0.23"
            }
          },
          "copy_to_directory_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_to_directory_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "bsd_tar_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~bsd_tar_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "copy_directory_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_directory_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "coreutils_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~coreutils_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "0.0.23"
            }
          },
          "coreutils_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~coreutils_linux_arm64",
              "platform": "linux_arm64",
              "version": "0.0.23"
            }
          },
          "yq_linux_s390x": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~yq_linux_s390x",
              "platform": "linux_s390x",
              "version": "4.25.2"
            }
          },
          "yq": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_host_alias_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~yq"
            }
          },
          "expand_template_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~expand_template_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "copy_directory_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_directory_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "jq_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~jq_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "1.7"
            }
          },
          "yq_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~yq_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "4.25.2"
            }
          },
          "copy_directory_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_directory_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "expand_template_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~expand_template_toolchains",
              "user_repository_name": "expand_template"
            }
          },
          "bats_assert": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~bats_assert",
              "sha256": "98ca3b685f8b8993e48ec057565e6e2abcc541034ed5b0e81f191505682037fd",
              "urls": [
                "https://github.com/bats-core/bats-assert/archive/v2.1.0.tar.gz"
              ],
              "strip_prefix": "bats-assert-2.1.0",
              "build_file_content": "load(\"@aspect_bazel_lib//lib:copy_to_directory.bzl\", \"copy_to_directory\")\n\ncopy_to_directory(\n    name = \"assert\",\n    hardlink = \"on\",\n    srcs = glob([\n        \"src/**\",\n        \"load.bash\",\n    ]),\n    out = \"bats-assert\",\n    visibility = [\"//visibility:public\"]\n)\n"
            }
          },
          "copy_to_directory_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_to_directory_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "bsd_tar_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~bsd_tar_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "yq_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~yq_toolchains",
              "user_repository_name": "yq"
            }
          },
          "bats_support": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~bats_support",
              "sha256": "7815237aafeb42ddcc1b8c698fc5808026d33317d8701d5ec2396e9634e2918f",
              "urls": [
                "https://github.com/bats-core/bats-support/archive/v0.3.0.tar.gz"
              ],
              "strip_prefix": "bats-support-0.3.0",
              "build_file_content": "load(\"@aspect_bazel_lib//lib:copy_to_directory.bzl\", \"copy_to_directory\")\n\ncopy_to_directory(\n    name = \"support\",\n    hardlink = \"on\",\n    srcs = glob([\n        \"src/**\",\n        \"load.bash\",\n    ]),\n    out = \"bats-support\",\n    visibility = [\"//visibility:public\"]\n)\n"
            }
          },
          "bsd_tar_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "bsdtar_binary_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~bsd_tar_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "jq": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_host_alias_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~jq"
            }
          },
          "expand_template_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~expand_template_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "copy_to_directory_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_to_directory_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "coreutils_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~coreutils_linux_amd64",
              "platform": "linux_amd64",
              "version": "0.0.23"
            }
          },
          "copy_directory_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_directory_toolchains",
              "user_repository_name": "copy_directory"
            }
          },
          "yq_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~yq_linux_amd64",
              "platform": "linux_amd64",
              "version": "4.25.2"
            }
          },
          "copy_to_directory_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_to_directory_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "coreutils_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~coreutils_toolchains",
              "user_repository_name": "coreutils"
            }
          },
          "copy_directory_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_directory_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "bats_file": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~bats_file",
              "sha256": "9b69043241f3af1c2d251f89b4fcafa5df3f05e97b89db18d7c9bdf5731bb27a",
              "urls": [
                "https://github.com/bats-core/bats-file/archive/v0.4.0.tar.gz"
              ],
              "strip_prefix": "bats-file-0.4.0",
              "build_file_content": "load(\"@aspect_bazel_lib//lib:copy_to_directory.bzl\", \"copy_to_directory\")\n\ncopy_to_directory(\n    name = \"file\",\n    hardlink = \"on\",\n    srcs = glob([\n        \"src/**\",\n        \"load.bash\",\n    ]),\n    out = \"bats-file\",\n    visibility = [\"//visibility:public\"]\n)\n"
            }
          },
          "expand_template_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~expand_template_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "jq_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~jq_linux_amd64",
              "platform": "linux_amd64",
              "version": "1.7"
            }
          },
          "bsd_tar_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:tar_toolchain.bzl",
            "ruleClassName": "tar_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~bsd_tar_toolchains",
              "user_repository_name": "bsd_tar"
            }
          },
          "bats_toolchains": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~bats_toolchains",
              "sha256": "a1a9f7875aa4b6a9480ca384d5865f1ccf1b0b1faead6b47aa47d79709a5c5fd",
              "urls": [
                "https://github.com/bats-core/bats-core/archive/v1.10.0.tar.gz"
              ],
              "strip_prefix": "bats-core-1.10.0",
              "build_file_content": "load(\"@local_config_platform//:constraints.bzl\", \"HOST_CONSTRAINTS\")\nload(\"@aspect_bazel_lib//lib/private:bats_toolchain.bzl\", \"bats_toolchain\")\nload(\"@aspect_bazel_lib//lib:copy_to_directory.bzl\", \"copy_to_directory\")\n\ncopy_to_directory(\n    name = \"core\",\n    hardlink = \"on\",\n    srcs = glob([\n        \"lib/**\",\n        \"libexec/**\"\n    ]) + [\"bin/bats\"],\n    out = \"bats-core\",\n)\n\nbats_toolchain(\n    name = \"toolchain\",\n    core = \":core\",\n    libraries = [\"@bats_support//:support\", \"@bats_assert//:assert\", \"@bats_file//:file\"]\n)\n\ntoolchain(\n    name = \"bats_toolchain\",\n    exec_compatible_with = HOST_CONSTRAINTS,\n    toolchain = \":toolchain\",\n    toolchain_type = \"@aspect_bazel_lib//lib:bats_toolchain_type\",\n)\n"
            }
          },
          "yq_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~yq_windows_amd64",
              "platform": "windows_amd64",
              "version": "4.25.2"
            }
          },
          "jq_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~jq_windows_amd64",
              "platform": "windows_amd64",
              "version": "1.7"
            }
          },
          "expand_template_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:expand_template_toolchain.bzl",
            "ruleClassName": "expand_template_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~expand_template_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "yq_linux_ppc64le": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~yq_linux_ppc64le",
              "platform": "linux_ppc64le",
              "version": "4.25.2"
            }
          },
          "copy_to_directory_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_to_directory_toolchains",
              "user_repository_name": "copy_to_directory"
            }
          },
          "jq_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_toolchains_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~jq_toolchains",
              "user_repository_name": "jq"
            }
          },
          "copy_directory_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_directory_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "copy_directory_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_directory_toolchain.bzl",
            "ruleClassName": "copy_directory_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~copy_directory_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "yq_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~yq_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "4.25.2"
            }
          },
          "coreutils_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~coreutils_windows_amd64",
              "platform": "windows_amd64",
              "version": "0.0.23"
            }
          },
          "yq_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "aspect_bazel_lib~2.5.0~toolchains~yq_linux_arm64",
              "platform": "linux_arm64",
              "version": "4.25.2"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "aspect_bazel_lib~2.5.0",
            "aspect_bazel_lib",
            "aspect_bazel_lib~2.5.0"
          ],
          [
            "aspect_bazel_lib~2.5.0",
            "bazel_skylib",
            "bazel_skylib~1.5.0"
          ],
          [
            "aspect_bazel_lib~2.5.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@bazel_features~1.1.1//private:extensions.bzl%version_extension": {
      "general": {
        "bzlTransitiveDigest": "xm7Skm1Las5saxzFWt2hbS+e68BWi+MXyt6+lKIhjPA=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "bazel_features_version": {
            "bzlFile": "@@bazel_features~1.1.1//private:version_repo.bzl",
            "ruleClassName": "version_repo",
            "attributes": {
              "name": "bazel_features~1.1.1~version_extension~bazel_features_version"
            }
          },
          "bazel_features_globals": {
            "bzlFile": "@@bazel_features~1.1.1//private:globals_repo.bzl",
            "ruleClassName": "globals_repo",
            "attributes": {
              "name": "bazel_features~1.1.1~version_extension~bazel_features_globals",
              "globals": {
                "RunEnvironmentInfo": "5.3.0",
                "DefaultInfo": "0.0.1",
                "__TestingOnly_NeverAvailable": "1000000000.0.0"
              }
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@bazel_tools//tools/cpp:cc_configure.bzl%cc_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "mcsWHq3xORJexV5/4eCvNOLxFOQKV6eli3fkr+tEaqE=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_cc": {
            "bzlFile": "@@bazel_tools//tools/cpp:cc_configure.bzl",
            "ruleClassName": "cc_autoconf",
            "attributes": {
              "name": "bazel_tools~cc_configure_extension~local_config_cc"
            }
          },
          "local_config_cc_toolchains": {
            "bzlFile": "@@bazel_tools//tools/cpp:cc_configure.bzl",
            "ruleClassName": "cc_autoconf_toolchains",
            "attributes": {
              "name": "bazel_tools~cc_configure_extension~local_config_cc_toolchains"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_tools",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@bazel_tools//tools/osx:xcode_configure.bzl%xcode_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "Qh2bWTU6QW6wkrd87qrU4YeY+SG37Nvw3A0PR4Y0L2Y=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_xcode": {
            "bzlFile": "@@bazel_tools//tools/osx:xcode_configure.bzl",
            "ruleClassName": "xcode_autoconf",
            "attributes": {
              "name": "bazel_tools~xcode_configure_extension~local_config_xcode",
              "xcode_locator": "@bazel_tools//tools/osx:xcode_locator.m",
              "remote_xcode": ""
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@bazel_tools//tools/sh:sh_configure.bzl%sh_configure_extension": {
      "general": {
        "bzlTransitiveDigest": "hp4NgmNjEg5+xgvzfh6L83bt9/aiiWETuNpwNuF1MSU=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "local_config_sh": {
            "bzlFile": "@@bazel_tools//tools/sh:sh_configure.bzl",
            "ruleClassName": "sh_config",
            "attributes": {
              "name": "bazel_tools~sh_configure_extension~local_config_sh"
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@bazel_tools//tools/test:extensions.bzl%remote_coverage_tools_extension": {
      "general": {
        "bzlTransitiveDigest": "y48q5zUu2oMiYv7yUyi7rFB0wt14eqiF/RQcWT6vP7I=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "remote_coverage_tools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "bazel_tools~remote_coverage_tools_extension~remote_coverage_tools",
              "sha256": "7006375f6756819b7013ca875eab70a541cf7d89142d9c511ed78ea4fefa38af",
              "urls": [
                "https://mirror.bazel.build/bazel_coverage_output_generator/releases/coverage_output_generator-v2.6.zip"
              ]
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@buildifier_prebuilt~6.4.0//:defs.bzl%buildifier_prebuilt_deps_extension": {
      "general": {
        "bzlTransitiveDigest": "RQFsb0ZT3fXXCES8VpISUrbUSTmYe23Bpt2CX+RJbys=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "buildozer_darwin_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.4.0~buildifier_prebuilt_deps_extension~buildozer_darwin_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildozer-darwin-amd64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "d29e347ecd6b5673d72cb1a8de05bf1b06178dd229ff5eb67fad5100c840cc8e"
            }
          },
          "buildifier_linux_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.4.0~buildifier_prebuilt_deps_extension~buildifier_linux_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildifier-linux-amd64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "be63db12899f48600bad94051123b1fd7b5251e7661b9168582ce52396132e92"
            }
          },
          "buildozer_darwin_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.4.0~buildifier_prebuilt_deps_extension~buildozer_darwin_arm64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildozer-darwin-arm64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "9b9e71bdbec5e7223871e913b65d12f6d8fa026684daf991f00e52ed36a6978d"
            }
          },
          "buildozer_linux_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.4.0~buildifier_prebuilt_deps_extension~buildozer_linux_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildozer-linux-amd64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "8dfd6345da4e9042daa738d7fdf34f699c5dfce4632f7207956fceedd8494119"
            }
          },
          "buildozer_windows_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.4.0~buildifier_prebuilt_deps_extension~buildozer_windows_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildozer-windows-amd64.exe"
              ],
              "downloaded_file_path": "buildozer.exe",
              "executable": true,
              "sha256": "e7f05bf847f7c3689dd28926460ce6e1097ae97380ac8e6ae7147b7b706ba19b"
            }
          },
          "buildozer_linux_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.4.0~buildifier_prebuilt_deps_extension~buildozer_linux_arm64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildozer-linux-arm64"
              ],
              "downloaded_file_path": "buildozer",
              "executable": true,
              "sha256": "6559558fded658c8fa7432a9d011f7c4dcbac6b738feae73d2d5c352e5f605fa"
            }
          },
          "buildifier_windows_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.4.0~buildifier_prebuilt_deps_extension~buildifier_windows_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildifier-windows-amd64.exe"
              ],
              "downloaded_file_path": "buildifier.exe",
              "executable": true,
              "sha256": "da8372f35e34b65fb6d997844d041013bb841e55f58b54d596d35e49680fe13c"
            }
          },
          "buildifier_prebuilt_toolchains": {
            "bzlFile": "@@buildifier_prebuilt~6.4.0//:defs.bzl",
            "ruleClassName": "_buildifier_toolchain_setup",
            "attributes": {
              "name": "buildifier_prebuilt~6.4.0~buildifier_prebuilt_deps_extension~buildifier_prebuilt_toolchains",
              "assets_json": "[{\"arch\":\"amd64\",\"name\":\"buildifier\",\"platform\":\"darwin\",\"sha256\":\"eeb47b2de27f60efe549348b183fac24eae80f1479e8b06cac0799c486df5bed\",\"version\":\"v6.4.0\"},{\"arch\":\"arm64\",\"name\":\"buildifier\",\"platform\":\"darwin\",\"sha256\":\"fa07ba0d20165917ca4cc7609f9b19a8a4392898148b7babdf6bb2a7dd963f05\",\"version\":\"v6.4.0\"},{\"arch\":\"amd64\",\"name\":\"buildifier\",\"platform\":\"linux\",\"sha256\":\"be63db12899f48600bad94051123b1fd7b5251e7661b9168582ce52396132e92\",\"version\":\"v6.4.0\"},{\"arch\":\"arm64\",\"name\":\"buildifier\",\"platform\":\"linux\",\"sha256\":\"18540fc10f86190f87485eb86963e603e41fa022f88a2d1b0cf52ff252b5e1dd\",\"version\":\"v6.4.0\"},{\"arch\":\"amd64\",\"name\":\"buildifier\",\"platform\":\"windows\",\"sha256\":\"da8372f35e34b65fb6d997844d041013bb841e55f58b54d596d35e49680fe13c\",\"version\":\"v6.4.0\"},{\"arch\":\"amd64\",\"name\":\"buildozer\",\"platform\":\"darwin\",\"sha256\":\"d29e347ecd6b5673d72cb1a8de05bf1b06178dd229ff5eb67fad5100c840cc8e\",\"version\":\"v6.4.0\"},{\"arch\":\"arm64\",\"name\":\"buildozer\",\"platform\":\"darwin\",\"sha256\":\"9b9e71bdbec5e7223871e913b65d12f6d8fa026684daf991f00e52ed36a6978d\",\"version\":\"v6.4.0\"},{\"arch\":\"amd64\",\"name\":\"buildozer\",\"platform\":\"linux\",\"sha256\":\"8dfd6345da4e9042daa738d7fdf34f699c5dfce4632f7207956fceedd8494119\",\"version\":\"v6.4.0\"},{\"arch\":\"arm64\",\"name\":\"buildozer\",\"platform\":\"linux\",\"sha256\":\"6559558fded658c8fa7432a9d011f7c4dcbac6b738feae73d2d5c352e5f605fa\",\"version\":\"v6.4.0\"},{\"arch\":\"amd64\",\"name\":\"buildozer\",\"platform\":\"windows\",\"sha256\":\"e7f05bf847f7c3689dd28926460ce6e1097ae97380ac8e6ae7147b7b706ba19b\",\"version\":\"v6.4.0\"}]"
            }
          },
          "buildifier_darwin_amd64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.4.0~buildifier_prebuilt_deps_extension~buildifier_darwin_amd64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildifier-darwin-amd64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "eeb47b2de27f60efe549348b183fac24eae80f1479e8b06cac0799c486df5bed"
            }
          },
          "buildifier_darwin_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.4.0~buildifier_prebuilt_deps_extension~buildifier_darwin_arm64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildifier-darwin-arm64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "fa07ba0d20165917ca4cc7609f9b19a8a4392898148b7babdf6bb2a7dd963f05"
            }
          },
          "buildifier_linux_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_file",
            "attributes": {
              "name": "buildifier_prebuilt~6.4.0~buildifier_prebuilt_deps_extension~buildifier_linux_arm64",
              "urls": [
                "https://github.com/bazelbuild/buildtools/releases/download/v6.4.0/buildifier-linux-arm64"
              ],
              "downloaded_file_path": "buildifier",
              "executable": true,
              "sha256": "18540fc10f86190f87485eb86963e603e41fa022f88a2d1b0cf52ff252b5e1dd"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "buildifier_prebuilt~6.4.0",
            "bazel_skylib",
            "bazel_skylib~1.5.0"
          ],
          [
            "buildifier_prebuilt~6.4.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@container_structure_test~1.16.0//:repositories.bzl%extension": {
      "general": {
        "bzlTransitiveDigest": "/vl5vOyGN/nxHtUF3SxoDZnTDgDklt4HUpLQD5LE8+k=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "structure_test_st_linux_i386": {
            "bzlFile": "@@container_structure_test~1.16.0//:repositories.bzl",
            "ruleClassName": "structure_test_repositories",
            "attributes": {
              "name": "container_structure_test~1.16.0~extension~structure_test_st_linux_i386",
              "platform": "linux_i386"
            }
          },
          "structure_test_st_linux_s390x": {
            "bzlFile": "@@container_structure_test~1.16.0//:repositories.bzl",
            "ruleClassName": "structure_test_repositories",
            "attributes": {
              "name": "container_structure_test~1.16.0~extension~structure_test_st_linux_s390x",
              "platform": "linux_s390x"
            }
          },
          "structure_test_st_linux_amd64": {
            "bzlFile": "@@container_structure_test~1.16.0//:repositories.bzl",
            "ruleClassName": "structure_test_repositories",
            "attributes": {
              "name": "container_structure_test~1.16.0~extension~structure_test_st_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "structure_test_st_darwin_arm64": {
            "bzlFile": "@@container_structure_test~1.16.0//:repositories.bzl",
            "ruleClassName": "structure_test_repositories",
            "attributes": {
              "name": "container_structure_test~1.16.0~extension~structure_test_st_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "structure_test_st_windows_amd64": {
            "bzlFile": "@@container_structure_test~1.16.0//:repositories.bzl",
            "ruleClassName": "structure_test_repositories",
            "attributes": {
              "name": "container_structure_test~1.16.0~extension~structure_test_st_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "structure_test_st_darwin_amd64": {
            "bzlFile": "@@container_structure_test~1.16.0//:repositories.bzl",
            "ruleClassName": "structure_test_repositories",
            "attributes": {
              "name": "container_structure_test~1.16.0~extension~structure_test_st_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "structure_test_toolchains": {
            "bzlFile": "@@container_structure_test~1.16.0//bazel:toolchains_repo.bzl",
            "ruleClassName": "toolchains_repo",
            "attributes": {
              "name": "container_structure_test~1.16.0~extension~structure_test_toolchains",
              "toolchain_type": "@container_structure_test//bazel:structure_test_toolchain_type",
              "toolchain": "@structure_test_st_{platform}//:structure_test_toolchain"
            }
          },
          "structure_test_st_linux_arm64": {
            "bzlFile": "@@container_structure_test~1.16.0//:repositories.bzl",
            "ruleClassName": "structure_test_repositories",
            "attributes": {
              "name": "container_structure_test~1.16.0~extension~structure_test_st_linux_arm64",
              "platform": "linux_arm64"
            }
          }
        },
        "recordedRepoMappingEntries": []
      }
    },
    "@@gazelle~0.35.0//:extensions.bzl%go_deps": {
      "general": {
        "bzlTransitiveDigest": "zP01muRk4s4xWGK3gNPXOyDMQkOPsIhu99akeKWFFQ0=",
        "accumulatedFileDigests": {
          "@@//:go.mod": "9a32d60b068a48b06dc012a5036fff718872de8398a1a9870e01e894b0f58d6b",
          "@@jsonnet_go~0.20.0//:go.sum": "cf6cba94b78ec389dcea5dda9207b611deea699e8dbbe45e98b7a7f990482bb4",
          "@@rules_go~0.46.0//:go.sum": "d56fdb19b21a5f12bcf625c49432371ac39c2def0f564098fbda107f7c080f40",
          "@@//:go.sum": "71edde028c74edb15334066d0f33db08641bdf5571a799f2a7934687003fea0e",
          "@@gazelle~0.35.0//:go.mod": "48dc6e771c3028ee1c18b9ffc81e596fd5f6d7e0016c5ef280e30f2821f60473",
          "@@gazelle~0.35.0//:go.sum": "7c4460e8ecb5dd8691a51d4fa2e9e4751108b933636497ce46db499fc2e7a88d",
          "@@rules_go~0.46.0//:go.mod": "de22304b720f7f61350ec1c9739de6c0a1b1103fd22bfeb6e92c6c843ddc6d6e",
          "@@jsonnet_go~0.20.0//:go.mod": "35238699c0cd09f5e79619863a0014f01129615f811c8a30239b80e8e3a58145"
        },
        "envVariables": {},
        "generatedRepoSpecs": {
          "com_github_fsnotify_fsnotify": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_fsnotify_fsnotify",
              "importpath": "github.com/fsnotify/fsnotify",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "com_github_mitchellh_copystructure": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mitchellh_copystructure",
              "importpath": "github.com/mitchellh/copystructure",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=",
              "replace": "",
              "version": "v1.2.0"
            }
          },
          "com_github_pulumi_pulumi_awsx_sdk": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pulumi_pulumi_awsx_sdk",
              "importpath": "github.com/pulumi/pulumi-awsx/sdk",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:oUan8VgA/pqEmbS2vXhh5Zbn7Lhs6yX5bPMzM03QuMI=",
              "replace": "",
              "version": "v1.0.6"
            }
          },
          "com_github_aymanbagabas_go_osc52_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aymanbagabas_go_osc52_v2",
              "importpath": "github.com/aymanbagabas/go-osc52/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:HwpRHbFMcZLEVr42D4p7XBqjyuxQH5SMiErDT4WkJ2k=",
              "replace": "",
              "version": "v2.0.1"
            }
          },
          "com_github_mattn_go_colorable": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mattn_go_colorable",
              "importpath": "github.com/mattn/go-colorable",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:jF+Du6AlPIjs2BiUiQlKOX0rt3SujHxPnksPKZbaA40=",
              "replace": "",
              "version": "v0.1.12"
            }
          },
          "com_github_matttproud_golang_protobuf_extensions": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_matttproud_golang_protobuf_extensions",
              "importpath": "github.com/matttproud/golang_protobuf_extensions",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:I0XW9+e1XWDxdcEniV4rQAIOPUGDq67JSCiRCgGCZLI=",
              "replace": "",
              "version": "v1.0.2-0.20181231171920-c182affec369"
            }
          },
          "io_opentelemetry_go_proto_otlp": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_opentelemetry_go_proto_otlp",
              "importpath": "go.opentelemetry.io/proto/otlp",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:WHzDWdXUvbc5bG2ObdrGfaNpQz7ft7QN9HHmJlbiB1E=",
              "replace": "",
              "version": "v0.16.0"
            }
          },
          "com_github_golang_glog": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_golang_glog",
              "importpath": "github.com/golang/glog",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:DVjP2PbBOzHyzA+dn3WhHIq4NdVu3Q+pvivFICf/7fo=",
              "replace": "",
              "version": "v1.1.2"
            }
          },
          "com_github_sirupsen_logrus": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_sirupsen_logrus",
              "importpath": "github.com/sirupsen/logrus",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:trlNQbNUG3OdDrDil03MCb1H2o9nJ1x4/5LYw7byDE0=",
              "replace": "",
              "version": "v1.9.0"
            }
          },
          "io_k8s_client_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_client_go",
              "importpath": "k8s.io/client-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:FEg85el1TeZp+/vYJM7hkDlSTFZ+c5nnK44DJ4FyoRg=",
              "replace": "",
              "version": "v0.29.2"
            }
          },
          "com_github_pulumi_pulumi_eks_sdk": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pulumi_pulumi_eks_sdk",
              "importpath": "github.com/pulumi/pulumi-eks/sdk",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:j2tul6k0oZHDQwHU+75Jo8Qe4neYxv2hNpo5uanywrQ=",
              "replace": "",
              "version": "v1.0.4"
            }
          },
          "com_github_azuread_microsoft_authentication_library_for_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azuread_microsoft_authentication_library_for_go",
              "importpath": "github.com/AzureAD/microsoft-authentication-library-for-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:WVsrXCnHlDDX8ls+tootqRE87/hL9S/g4ewig9RsD/c=",
              "replace": "",
              "version": "v0.4.0"
            }
          },
          "com_github_protonmail_go_crypto": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_protonmail_go_crypto",
              "importpath": "github.com/ProtonMail/go-crypto",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ra2OtmuW0AE5csawV4YXMNGNQQXvLRps3z2Z59OPO+I=",
              "replace": "",
              "version": "v0.0.0-20221026131551-cf6655e29de4"
            }
          },
          "com_github_google_gofuzz": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_google_gofuzz",
              "importpath": "github.com/google/gofuzz",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=",
              "replace": "",
              "version": "v1.2.0"
            }
          },
          "com_github_gruntwork_io_terratest": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_gruntwork_io_terratest",
              "importpath": "github.com/gruntwork-io/terratest",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:+0Iz7CnhvJ3JQ4ed+yo4u20Sv0tsJVRx8ef+fAjzuVs=",
              "replace": "",
              "version": "v0.38.8"
            }
          },
          "com_github_googleapis_enterprise_certificate_proxy": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_googleapis_enterprise_certificate_proxy",
              "importpath": "github.com/googleapis/enterprise-certificate-proxy",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=",
              "replace": "",
              "version": "v0.3.2"
            }
          },
          "com_github_golang_mock": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_golang_mock",
              "importpath": "github.com/golang/mock",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:YojYx61/OLFsiv6Rw1Z96LpldJIy31o+UHmwAUMJ6/U=",
              "replace": "",
              "version": "v1.7.0-rc.1"
            }
          },
          "com_github_opencontainers_runc": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_opencontainers_runc",
              "importpath": "github.com/opencontainers/runc",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:vIXrkId+0/J2Ymu2m7VjGvbSlAId9XNRPhn2p4b+d8w=",
              "replace": "",
              "version": "v1.1.3"
            }
          },
          "com_github_opencontainers_image_spec": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_opencontainers_image_spec",
              "importpath": "github.com/opencontainers/image-spec",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:9yCKha/T5XdGtO0q9Q9a6T5NUCsTn/DrBg0D7ufOcFM=",
              "replace": "",
              "version": "v1.0.2"
            }
          },
          "org_uber_go_automaxprocs": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_uber_go_automaxprocs",
              "importpath": "go.uber.org/automaxprocs",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:e1YG66Lrk73dn4qhg8WFSvhF0JuFQF0ERIp4rpuV8Qk=",
              "replace": "",
              "version": "v1.5.1"
            }
          },
          "com_github_mattn_go_sqlite3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mattn_go_sqlite3",
              "importpath": "github.com/mattn/go-sqlite3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:gXHsfypPkaMZrKbD5209QV9jbUTJKjyR5WD3HYQSd+U=",
              "replace": "",
              "version": "v2.0.3+incompatible"
            }
          },
          "org_golang_x_xerrors": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_xerrors",
              "importpath": "golang.org/x/xerrors",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:H2TDz8ibqkAF6YGhCdN3jS9O0/s90v0rJh3X/OLHEUk=",
              "replace": "",
              "version": "v0.0.0-20220907171357-04be3eba64a2"
            }
          },
          "com_github_modern_go_concurrent": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_modern_go_concurrent",
              "importpath": "github.com/modern-go/concurrent",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=",
              "replace": "",
              "version": "v0.0.0-20180306012644-bacd9c7ef1dd"
            }
          },
          "com_github_jackc_pgproto3_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jackc_pgproto3_v2",
              "importpath": "github.com/jackc/pgproto3/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:brH0pCGBDkBW07HWlN/oSBXrmo3WB0UvZd1pIuDcL8Y=",
              "replace": "",
              "version": "v2.3.0"
            }
          },
          "com_github_segmentio_analytics_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_segmentio_analytics_go",
              "importpath": "github.com/segmentio/analytics-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:+0sDBHuIsUlerfNGmggprc/aCAFQ5ZvPReQOHHTVZUs=",
              "replace": "",
              "version": "v0.0.0-20160426181448-2d840d861c32"
            }
          },
          "com_github_azure_go_ansiterm": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_go_ansiterm",
              "importpath": "github.com/Azure/go-ansiterm",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=",
              "replace": "",
              "version": "v0.0.0-20210617225240-d185dfc1b5a1"
            }
          },
          "com_github_golang_jwt_jwt": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_golang_jwt_jwt",
              "importpath": "github.com/golang-jwt/jwt",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:73Z+4BJcrTC+KczS6WvTPvRGOp1WmfEP4Q1lOd9Z/+c=",
              "replace": "",
              "version": "v3.2.1+incompatible"
            }
          },
          "com_github_dexidp_dex": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_dexidp_dex",
              "importpath": "github.com/dexidp/dex",
              "build_directives": [
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:4nB6VFs6lYANUkhjmQfrT4nToW38/YX0WZfztDoiuLI=",
              "replace": "github.com/pachyderm/dex",
              "version": "v0.0.0-20230426001747-706aec218aba"
            }
          },
          "org_golang_x_mod": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_mod",
              "importpath": "golang.org/x/mod",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:dGoOF9QVLYng8IHTm7BAyWqCqSheQ5pYWGhzW00YJr0=",
              "replace": "",
              "version": "v0.14.0"
            }
          },
          "com_github_google_s2a_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_google_s2a_go",
              "importpath": "github.com/google/s2a-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=",
              "replace": "",
              "version": "v0.1.7"
            }
          },
          "com_github_itchyny_astgen_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_itchyny_astgen_go",
              "importpath": "github.com/itchyny/astgen-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:9ZAJ5+eh9dfcPsJ1CXoiE16JzsBmJm1e124eUkXAyc0=",
              "replace": "",
              "version": "v0.0.0-20200815150004-12a293722290"
            }
          },
          "com_github_pulumi_pulumi_sdk_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pulumi_pulumi_sdk_v3",
              "importpath": "github.com/pulumi/pulumi/sdk/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:d711GUpjZK1beNpIKFReC1LBmHXYE684sYWntJWQ4Q0=",
              "replace": "",
              "version": "v3.81.0"
            }
          },
          "com_github_masterminds_semver_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_masterminds_semver_v3",
              "importpath": "github.com/Masterminds/semver/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:3MEsd0SM6jqZojhjLWWeBY+Kcjy9i6MQAeY7YgDP83g=",
              "replace": "",
              "version": "v3.2.0"
            }
          },
          "dev_gocloud": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~dev_gocloud",
              "importpath": "gocloud.dev",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:j0WTUsnKTxCsWO7y8T+YCiBZUmLl9w/WIowqAY3yo0g=",
              "replace": "",
              "version": "v0.27.0"
            }
          },
          "io_k8s_sigs_kind": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_sigs_kind",
              "importpath": "sigs.k8s.io/kind",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:z/+yr/azoOfzsfooqRsPw1wjJlqT/ukXP0ShkHwNlsI=",
              "replace": "",
              "version": "v0.22.0"
            }
          },
          "com_github_munnerz_goautoneg": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_munnerz_goautoneg",
              "importpath": "github.com/munnerz/goautoneg",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=",
              "replace": "",
              "version": "v0.0.0-20191010083416-a7dc8b61c822"
            }
          },
          "com_github_azure_go_autorest_autorest": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_go_autorest_autorest",
              "importpath": "github.com/Azure/go-autorest/autorest",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ndAExarwr5Y+GaHE6VCaY1kyS/HwwGGyuimVhWsHOEM=",
              "replace": "",
              "version": "v0.11.28"
            }
          },
          "com_github_itchyny_timefmt_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_itchyny_timefmt_go",
              "importpath": "github.com/itchyny/timefmt-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:rLpnm9xxb39PEEVzO0n4IRp0q6/RmBc7Dy/rE4HrA0U=",
              "replace": "",
              "version": "v0.1.1"
            }
          },
          "com_github_jackc_pgservicefile": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jackc_pgservicefile",
              "importpath": "github.com/jackc/pgservicefile",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:bbPeKD0xmW/Y25WS6cokEszi5g+S0QxI/d45PkRi7Nk=",
              "replace": "",
              "version": "v0.0.0-20221227161230-091c0ba34f0a"
            }
          },
          "com_github_inconshreveable_mousetrap": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_inconshreveable_mousetrap",
              "importpath": "github.com/inconshreveable/mousetrap",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=",
              "replace": "",
              "version": "v1.1.0"
            }
          },
          "com_github_alecthomas_jsonschema": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_alecthomas_jsonschema",
              "importpath": "github.com/alecthomas/jsonschema",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:SM/PhkjhbeX1w/Jkv7dHFYDn2y4/88XZp3CIqVHsdcs=",
              "replace": "",
              "version": "v0.0.0-20210918223802-a1d3f4b43d7b"
            }
          },
          "com_github_aws_aws_sdk_go_v2_internal_ini": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_internal_ini",
              "importpath": "github.com/aws/aws-sdk-go-v2/internal/ini",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:f0ySVcmQhwmzn7zQozd8wBM3yuGBfzdpsOaKQ0/Epzw=",
              "replace": "",
              "version": "v1.3.16"
            }
          },
          "io_opentelemetry_go_otel_exporters_otlp_otlptrace_otlptracegrpc": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_opentelemetry_go_otel_exporters_otlp_otlptrace_otlptracegrpc",
              "importpath": "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:MFAyzUPrTwLOwCi+cltN0ZVyy4phU41lwH+lyMyQTS4=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "com_github_pmezard_go_difflib": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pmezard_go_difflib",
              "importpath": "github.com/pmezard/go-difflib",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_github_mattn_go_isatty": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mattn_go_isatty",
              "importpath": "github.com/mattn/go-isatty",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:DOKFKCQ7FNG2L1rbrmstDN4QVRdS89Nkh85u68Uwp98=",
              "replace": "",
              "version": "v0.0.18"
            }
          },
          "com_github_pulumi_pulumi_postgresql_sdk_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pulumi_pulumi_postgresql_sdk_v3",
              "importpath": "github.com/pulumi/pulumi-postgresql/sdk/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Bnktung50rzCWUb6TIfOMc/RFmpuIvKeD8NeGwyyL14=",
              "replace": "",
              "version": "v3.10.0"
            }
          },
          "com_github_hashicorp_hcl_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_hashicorp_hcl_v2",
              "importpath": "github.com/hashicorp/hcl/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:BwuxEMD/tsYgbhIW7UuI3crjovf3MzuFWiVgiv57iHg=",
              "replace": "",
              "version": "v2.16.1"
            }
          },
          "com_github_benbjohnson_clock": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_benbjohnson_clock",
              "importpath": "github.com/benbjohnson/clock",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ip6w0uFQkncKQ979AypyG0ER7mqUSBdKLOgAle/AT8A=",
              "replace": "",
              "version": "v1.3.0"
            }
          },
          "org_golang_x_tools": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_tools",
              "importpath": "golang.org/x/tools",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:zdAyfUGbYmuVokhzVmghFl2ZJh5QhcfebBgmVPFYA+8=",
              "replace": "",
              "version": "v0.15.0"
            }
          },
          "com_github_kevinburke_ssh_config": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_kevinburke_ssh_config",
              "importpath": "github.com/kevinburke/ssh_config",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:x584FjTGwHzMwvHx18PXxbBVzfnxogHaAReU4gf13a4=",
              "replace": "",
              "version": "v1.2.0"
            }
          },
          "net_starlark_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~net_starlark_go",
              "importpath": "go.starlark.net",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:kNt8RXSIU6IRBO9MP3m+6q3WpyBHQQXqSktcyVKDPOQ=",
              "replace": "",
              "version": "v0.0.0-20230912135651-745481cf39ed"
            }
          },
          "com_github_gogo_protobuf": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_gogo_protobuf",
              "importpath": "github.com/gogo/protobuf",
              "build_directives": [
                "gazelle:proto disable"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=",
              "replace": "",
              "version": "v1.3.2"
            }
          },
          "org_uber_go_multierr": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_uber_go_multierr",
              "importpath": "go.uber.org/multierr",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:dg6GjLku4EH+249NNmoIciG9N/jURbDG+pFlTkhzIC8=",
              "replace": "",
              "version": "v1.8.0"
            }
          },
          "io_k8s_sigs_kustomize_api": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_sigs_kustomize_api",
              "importpath": "sigs.k8s.io/kustomize/api",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:XX3Ajgzov2RKUdc5jW3t5jwY7Bo7dcRm+tFxT+NfgY0=",
              "replace": "",
              "version": "v0.13.5-0.20230601165947-6ce0bf390ce3"
            }
          },
          "com_github_go_git_go_git_v5": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_git_go_git_v5",
              "importpath": "github.com/go-git/go-git/v5",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:JvBdYfcttd+0kdpuWO7KTu0FYgCf5W0t5VwkWGobaa4=",
              "replace": "",
              "version": "v5.6.0"
            }
          },
          "com_github_go_git_go_billy_v5": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_git_go_billy_v5",
              "importpath": "github.com/go-git/go-billy/v5",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Vaw7LaSTRJOUric7pe4vnzBSgyuf2KrLsu2Y4ZpQBDE=",
              "replace": "",
              "version": "v5.4.0"
            }
          },
          "com_github_determined_ai_determined_proto": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_determined_ai_determined_proto",
              "importpath": "github.com/determined-ai/determined/proto",
              "build_directives": [
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:qpk8MByp1GwUZcySraImnIvFTC/i8wx4RI8+cr5H9NU=",
              "replace": "",
              "version": "v0.0.0-20230615001349-d3aff5bab560"
            }
          },
          "com_github_mxk_go_flowrate": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mxk_go_flowrate",
              "importpath": "github.com/mxk/go-flowrate",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:y5//uYreIhSUg3J1GEMiLbxo1LJaP8RfCpH6pymGZus=",
              "replace": "",
              "version": "v0.0.0-20140419014527-cca7078d478f"
            }
          },
          "com_github_tmc_grpc_websocket_proxy": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_tmc_grpc_websocket_proxy",
              "importpath": "github.com/tmc/grpc-websocket-proxy",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:uruHq4dN7GR16kFc5fp3d1RIYzJW5onx8Ybykw2YQFA=",
              "replace": "",
              "version": "v0.0.0-20201229170055-e5319fda7802"
            }
          },
          "org_golang_google_genproto_googleapis_rpc": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_google_genproto_googleapis_rpc",
              "importpath": "google.golang.org/genproto/googleapis/rpc",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:DC7wcm+i+P1rN3Ff07vL+OndGg5OhNddHyTA+ocPqYE=",
              "replace": "",
              "version": "v0.0.0-20231127180814-3a041ad873d4"
            }
          },
          "com_github_atotto_clipboard": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_atotto_clipboard",
              "importpath": "github.com/atotto/clipboard",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:EH0zSVneZPSuFR11BlR9YppQTVDbh5+16AmcJi4g1z4=",
              "replace": "",
              "version": "v0.1.4"
            }
          },
          "com_github_go_git_gcfg": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_git_gcfg",
              "importpath": "github.com/go-git/gcfg",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Q5ViNfGF8zFgyJWPqYwA7qGFoMTEiBmdlkcfRmpIMa4=",
              "replace": "",
              "version": "v1.5.0"
            }
          },
          "com_github_google_go_cmp": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_google_go_cmp",
              "importpath": "github.com/google/go-cmp",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=",
              "replace": "",
              "version": "v0.6.0"
            }
          },
          "com_github_go_sql_driver_mysql": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_sql_driver_mysql",
              "importpath": "github.com/go-sql-driver/mysql",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ueSltNNllEqE3qcWBTD0iQd3IpL/6U+mJxLkazJ7YPc=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "com_github_docker_go_connections": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_docker_go_connections",
              "importpath": "github.com/docker/go-connections",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:El9xVISelRB7BuFusrZozjnkIM5YnzCViNKohAFqRJQ=",
              "replace": "",
              "version": "v0.4.0"
            }
          },
          "com_github_xiang90_probing": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_xiang90_probing",
              "importpath": "github.com/xiang90/probing",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:eY9dn8+vbi4tKz5Qo6v2eYzo7kUS51QINcR5jNpbZS8=",
              "replace": "",
              "version": "v0.0.0-20190116061207-43a291ad63a2"
            }
          },
          "com_github_google_uuid": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_google_uuid",
              "importpath": "github.com/google/uuid",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:MtMxsa51/r9yyhkyLsVeVt0B+BGQZzpQiTQ4eHZ8bc4=",
              "replace": "",
              "version": "v1.4.0"
            }
          },
          "com_github_evanphx_json_patch_v5": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_evanphx_json_patch_v5",
              "importpath": "github.com/evanphx/json-patch/v5",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:b91NhWfaz02IuVxO9faSllyAtNXHMPkC5J8sJCLunww=",
              "replace": "",
              "version": "v5.6.0"
            }
          },
          "com_github_cpuguy83_go_md2man_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_cpuguy83_go_md2man_v2",
              "importpath": "github.com/cpuguy83/go-md2man/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=",
              "replace": "",
              "version": "v2.0.2"
            }
          },
          "com_github_opentracing_opentracing_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_opentracing_opentracing_go",
              "importpath": "github.com/opentracing/opentracing-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:uEJPy/1a5RIPAJ0Ov+OIO8OxWu77jEv+1B0VhjKrZUs=",
              "replace": "",
              "version": "v1.2.0"
            }
          },
          "com_github_mailru_easyjson": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mailru_easyjson",
              "importpath": "github.com/mailru/easyjson",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=",
              "replace": "",
              "version": "v0.7.7"
            }
          },
          "com_github_russross_blackfriday_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_russross_blackfriday_v2",
              "importpath": "github.com/russross/blackfriday/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=",
              "replace": "",
              "version": "v2.1.0"
            }
          },
          "com_github_azure_go_autorest_logger": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_go_autorest_logger",
              "importpath": "github.com/Azure/go-autorest/logger",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:IG7i4p/mDa2Ce4TRyAO8IHnVhAVF3RFU+ZtXWSmf4Tg=",
              "replace": "",
              "version": "v0.2.1"
            }
          },
          "com_github_azure_azure_sdk_for_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_azure_sdk_for_go",
              "importpath": "github.com/Azure/azure-sdk-for-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:bmmC38SlE8/E81nNADlgmVGurPWMHDX2YNXVQMrBpEE=",
              "replace": "",
              "version": "v66.0.0+incompatible"
            }
          },
          "com_github_timewasted_go_accept_headers": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_timewasted_go_accept_headers",
              "importpath": "github.com/timewasted/go-accept-headers",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:QVxbx5l/0pzciWYOynixQMtUhPYC3YKD6EcUlOsgGqw=",
              "replace": "",
              "version": "v0.0.0-20130320203746-c78f304b1b09"
            }
          },
          "io_k8s_utils": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_utils",
              "importpath": "k8s.io/utils",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:sgn3ZU783SCgtaSJjpcVVlRqd6GSnlTLKgpAAttJvpI=",
              "replace": "",
              "version": "v0.0.0-20230726121419-3b25d923346b"
            }
          },
          "com_github_go_ldap_ldap_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_ldap_ldap_v3",
              "importpath": "github.com/go-ldap/ldap/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:qPjipEpt+qDa6SI/h1fzuGWoRUY+qqQ9sOZq67/PYUs=",
              "replace": "",
              "version": "v3.4.4"
            }
          },
          "com_github_pquerna_cachecontrol": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pquerna_cachecontrol",
              "importpath": "github.com/pquerna/cachecontrol",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:J9b7z+QKAmPf4YLrFg6oQUotqHQeUNWwkvo7jZp1GLU=",
              "replace": "",
              "version": "v0.0.0-20180517163645-1555304b9b35"
            }
          },
          "io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc",
              "importpath": "go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Ky1MObd188aGbgb5OgNnwGuEEwI9MVIcc7rBW6zk5Ak=",
              "replace": "",
              "version": "v0.28.0"
            }
          },
          "com_github_satori_go_uuid": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_satori_go_uuid",
              "importpath": "github.com/satori/go.uuid",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:gQZ0qzfKHQIybLANtM3mBXNUtOfsCFXeTsnBqCsx1KM=",
              "replace": "",
              "version": "v1.2.1-0.20181028125025-b2ce2384e17b"
            }
          },
          "io_k8s_apimachinery": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_apimachinery",
              "importpath": "k8s.io/apimachinery",
              "build_directives": [
                "gazelle:proto disable"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:EWGpfJ856oj11C52NRCHuU7rFDwxev48z+6DSlGNsV8=",
              "replace": "",
              "version": "v0.29.2"
            }
          },
          "org_golang_x_image": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_image",
              "importpath": "golang.org/x/image",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:lP9pYkih3DUSC641giIXa2XqfTIbbbRr0w2EOTA7wHA=",
              "replace": "",
              "version": "v0.0.0-20210216034530-4410531fe030"
            }
          },
          "com_github_coreos_go_oidc_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_coreos_go_oidc_v3",
              "importpath": "github.com/coreos/go-oidc/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:VxKtbccHZxs8juq7RdJntSqtXFtde9YpNpGn0yqgEHw=",
              "replace": "",
              "version": "v3.5.0"
            }
          },
          "com_github_aead_chacha20": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aead_chacha20",
              "importpath": "github.com/aead/chacha20",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:KjTM2ks9d14ZYCvmHS9iAKVt9AyzRSqNU1qabPih5BY=",
              "replace": "",
              "version": "v0.0.0-20180709150244-8b13a72661da"
            }
          },
          "com_github_google_pprof": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_google_pprof",
              "importpath": "github.com/google/pprof",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:mpL/HvfIgIejhVwAfxBQkwEjlhP5o0O9RAeTAjpwzxc=",
              "replace": "",
              "version": "v0.0.0-20220608213341-c488b8fa1db3"
            }
          },
          "com_github_kylelemons_godebug": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_kylelemons_godebug",
              "importpath": "github.com/kylelemons/godebug",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=",
              "replace": "",
              "version": "v1.1.0"
            }
          },
          "com_github_google_shlex": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_google_shlex",
              "importpath": "github.com/google/shlex",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=",
              "replace": "",
              "version": "v0.0.0-20191202100458-e7afc7fbc510"
            }
          },
          "org_golang_x_tools_go_vcs": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_tools_go_vcs",
              "importpath": "golang.org/x/tools/go/vcs",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:cOIJqWBl99H1dH5LWizPa+0ImeeJq3t3cJjaeOWUAL4=",
              "replace": "",
              "version": "v0.1.0-deprecated"
            }
          },
          "com_github_aws_aws_sdk_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go",
              "importpath": "github.com/aws/aws-sdk-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:7zNr5+HLG0TMq+ZcZ8KhT4eT2KyL7v+u7/jANKEIinM=",
              "replace": "",
              "version": "v1.44.68"
            }
          },
          "com_github_lunixbochs_vtclean": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_lunixbochs_vtclean",
              "importpath": "github.com/lunixbochs/vtclean",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:xu2sLAri4lGiovBDQKxl5mrXyESr3gUr5m5SM5+LVb8=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_github_beevik_etree": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_beevik_etree",
              "importpath": "github.com/beevik/etree",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:T0xke/WvNtMoCqgzPhkX2r4rjY3GDZFi+FjpRZY2Jbs=",
              "replace": "",
              "version": "v1.1.0"
            }
          },
          "com_github_spf13_cobra": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_spf13_cobra",
              "importpath": "github.com/spf13/cobra",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:hyqWnYt1ZQShIddO5kBpj3vu05/++x6tJ6dg8EC572I=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "com_github_jehiah_go_strftime": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jehiah_go_strftime",
              "importpath": "github.com/jehiah/go-strftime",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:IPJ3dvxmJ4uczJe5YQdrYB16oTJlGSC/OyZDqUk9xX4=",
              "replace": "",
              "version": "v0.0.0-20171201141054-1d33003b3869"
            }
          },
          "com_github_tweekmonster_luser": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_tweekmonster_luser",
              "importpath": "github.com/tweekmonster/luser",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:X9dsIWPuuEJlPX//UmRKophhOKCGXc46RVIGuttks68=",
              "replace": "",
              "version": "v0.0.0-20161003172636-3fa38070dbd7"
            }
          },
          "com_github_jackc_pgtype": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jackc_pgtype",
              "importpath": "github.com/jackc/pgtype",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:u4uiGPz/1hryuXzyaBhSk6dnIyyG2683olG2OV+UUgs=",
              "replace": "",
              "version": "v1.11.0"
            }
          },
          "com_github_aws_aws_sdk_go_v2_internal_v4a": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_internal_v4a",
              "importpath": "github.com/aws/aws-sdk-go-v2/internal/v4a",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:3L8pcjvgaSOs0zzZcMKzxDSkYKEpwJ2dNVDdxm68jAY=",
              "replace": "",
              "version": "v1.0.6"
            }
          },
          "com_github_jackc_pgio": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jackc_pgio",
              "importpath": "github.com/jackc/pgio",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:g12B9UwVnzGhueNavwioyEEpAmqMe1E/BN9ES+8ovkE=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_github_spf13_cast": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_spf13_cast",
              "importpath": "github.com/spf13/cast",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=",
              "replace": "",
              "version": "v1.5.0"
            }
          },
          "com_github_spf13_pflag": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_spf13_pflag",
              "importpath": "github.com/spf13/pflag",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=",
              "replace": "",
              "version": "v1.0.5"
            }
          },
          "io_etcd_go_bbolt": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_etcd_go_bbolt",
              "importpath": "go.etcd.io/bbolt",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:j+zJOnnEjF/kyHlDDgGnVL/AIqIJPq8UoB2GSNfkUfQ=",
              "replace": "",
              "version": "v1.3.7"
            }
          },
          "in_gopkg_inf_v0": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~in_gopkg_inf_v0",
              "importpath": "gopkg.in/inf.v0",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:73M5CoZyi3ZLMOyDlQh031Cx6N9NDJ2Vvfl76EDAgDc=",
              "replace": "",
              "version": "v0.9.1"
            }
          },
          "com_github_beorn7_perks": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_beorn7_perks",
              "importpath": "github.com/beorn7/perks",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=",
              "replace": "",
              "version": "v1.0.1"
            }
          },
          "org_golang_x_oauth2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_oauth2",
              "importpath": "golang.org/x/oauth2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:jDDenyj+WgFtmV3zYVoi8aE2BwtXFLWOA67ZfNWftiY=",
              "replace": "",
              "version": "v0.13.0"
            }
          },
          "com_github_masterminds_goutils": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_masterminds_goutils",
              "importpath": "github.com/Masterminds/goutils",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=",
              "replace": "",
              "version": "v1.1.1"
            }
          },
          "com_github_opentracing_basictracer_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_opentracing_basictracer_go",
              "importpath": "github.com/opentracing/basictracer-go",
              "build_directives": [
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Oa1fTSBvAl8pa3U+IJYqrKm0NALwH9OsgwOqDv4xJW0=",
              "replace": "",
              "version": "v1.1.0"
            }
          },
          "in_gopkg_yaml_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~in_gopkg_yaml_v2",
              "importpath": "gopkg.in/yaml.v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=",
              "replace": "",
              "version": "v2.4.0"
            }
          },
          "com_github_azure_go_autorest_autorest_adal": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_go_autorest_autorest_adal",
              "importpath": "github.com/Azure/go-autorest/autorest/adal",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:jjQnVFXPfekaqb8vIsv2G1lxshoW+oGv4MDlhRtnYZk=",
              "replace": "",
              "version": "v0.9.21"
            }
          },
          "com_github_cheggaaa_pb": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_cheggaaa_pb",
              "importpath": "github.com/cheggaaa/pb",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:FckUN5ngEk2LpvuG0fw1GEFx6LtyY2pWI/Z2QgCnEYo=",
              "replace": "",
              "version": "v1.0.29"
            }
          },
          "com_github_containerd_continuity": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_containerd_continuity",
              "importpath": "github.com/containerd/continuity",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:nisirsYROK15TAMVukJOUyGJjz4BNQJBVsNvAXZJ/eg=",
              "replace": "",
              "version": "v0.3.0"
            }
          },
          "com_sourcegraph_sourcegraph_appdash": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_sourcegraph_sourcegraph_appdash",
              "importpath": "sourcegraph.com/sourcegraph/appdash",
              "build_directives": [
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:hfyJ5ku9yFtLVOiSxa3IN+dx5eBQT9mPmKFypAmg8XM=",
              "replace": "",
              "version": "v0.0.0-20211028080628-e2786a622600"
            }
          },
          "com_github_wcharczuk_go_chart": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_wcharczuk_go_chart",
              "importpath": "github.com/wcharczuk/go-chart",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:0pz39ZAycJFF7ju/1mepnk26RLVLBCWz1STcD3doU0A=",
              "replace": "",
              "version": "v2.0.1+incompatible"
            }
          },
          "com_github_moby_sys_mount": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_moby_sys_mount",
              "importpath": "github.com/moby/sys/mount",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:bXZYMmq7DBQPwHRxH/MG+u9+XF90ZOwoXpHTOznMGp0=",
              "replace": "",
              "version": "v0.3.0"
            }
          },
          "com_github_grpc_ecosystem_go_grpc_middleware": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_grpc_ecosystem_go_grpc_middleware",
              "importpath": "github.com/grpc-ecosystem/go-grpc-middleware",
              "build_directives": [
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:UH//fgunKIs4JdUbpDl1VZCDaL56wXCB/5+wF6uHfaI=",
              "replace": "",
              "version": "v1.4.0"
            }
          },
          "com_github_rogpeppe_go_internal": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_rogpeppe_go_internal",
              "importpath": "github.com/rogpeppe/go-internal",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=",
              "replace": "",
              "version": "v1.10.0"
            }
          },
          "com_github_uber_jaeger_lib": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_uber_jaeger_lib",
              "importpath": "github.com/uber/jaeger-lib",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:td4jdvLcExb4cBISKIpHuGoVXh+dVKhn2Um6rjCsSsg=",
              "replace": "",
              "version": "v2.4.1+incompatible"
            }
          },
          "com_github_aws_aws_sdk_go_v2_service_internal_checksum": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_service_internal_checksum",
              "importpath": "github.com/aws/aws-sdk-go-v2/service/internal/checksum",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:7LJcuRalaLw+GYQTMGmVUl4opg2HrDZkvn/L3KvIQfw=",
              "replace": "",
              "version": "v1.1.10"
            }
          },
          "com_lukechampine_frand": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_lukechampine_frand",
              "importpath": "lukechampine.com/frand",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:RzFIpOvkMXuPMBb9maa4ND4wjBn71E1Jpf8BzJHMaVw=",
              "replace": "",
              "version": "v1.4.2"
            }
          },
          "com_google_cloud_go_storage": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_google_cloud_go_storage",
              "importpath": "cloud.google.com/go/storage",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:uOdMxAs8HExqBlnLtnQyP0YkvbiDpdGShGKtx6U/oNM=",
              "replace": "",
              "version": "v1.30.1"
            }
          },
          "com_github_aws_aws_lambda_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_lambda_go",
              "importpath": "github.com/aws/aws-lambda-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Ogihmi8BnpmCNktKAGpNwSiILNNING1MiosnKUfU8m0=",
              "replace": "",
              "version": "v1.17.0"
            }
          },
          "org_golang_google_genproto_googleapis_api": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_google_genproto_googleapis_api",
              "importpath": "google.golang.org/genproto/googleapis/api",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:JpwMPBpFN3uKhdaekDpiNlImDdkUAyiJ6ez/uxGaUSo=",
              "replace": "",
              "version": "v0.0.0-20231106174013-bbf56f31fb17"
            }
          },
          "org_golang_google_protobuf": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_google_protobuf",
              "importpath": "google.golang.org/protobuf",
              "build_directives": [],
              "build_file_generation": "off",
              "build_extra_args": [],
              "patches": [
                "@@//private:google-golang-org-protobuf.patch"
              ],
              "patch_args": [
                "-p1"
              ],
              "sum": "h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=",
              "replace": "",
              "version": "v1.33.0"
            }
          },
          "com_github_emirpasic_gods": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_emirpasic_gods",
              "importpath": "github.com/emirpasic/gods",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:FXtiHYKDGKCW2KzwZKx0iC0PQmdlorYgdFG9jPXJ1Bc=",
              "replace": "",
              "version": "v1.18.1"
            }
          },
          "com_github_google_wire": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_google_wire",
              "importpath": "github.com/google/wire",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:I7ELFeVBr3yfPIcc8+MWvrjk+3VjbcSzoXm3JVa+jD8=",
              "replace": "",
              "version": "v0.5.0"
            }
          },
          "com_github_fatih_color": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_fatih_color",
              "importpath": "github.com/fatih/color",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:8LOYc1KYPPmyKMuN8QV2DNRWNbLo6LZ0iLs8+mlH53w=",
              "replace": "",
              "version": "v1.13.0"
            }
          },
          "in_gopkg_yaml_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~in_gopkg_yaml_v3",
              "importpath": "gopkg.in/yaml.v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=",
              "replace": "",
              "version": "v3.0.1"
            }
          },
          "com_github_prometheus_client_model": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_prometheus_client_model",
              "importpath": "github.com/prometheus/client_model",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:UBgGFHqYdG/TPFD1B1ogZywDqEkwp3fBMvqdiQ7Xew4=",
              "replace": "",
              "version": "v0.3.0"
            }
          },
          "org_golang_x_crypto": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_crypto",
              "importpath": "golang.org/x/crypto",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:r8bRNjWL3GshPW3gkd+RpvzWrZAwPS49OmTGZ/uhM4k=",
              "replace": "",
              "version": "v0.17.0"
            }
          },
          "com_github_aws_aws_sdk_go_v2_internal_configsources": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_internal_configsources",
              "importpath": "github.com/aws/aws-sdk-go-v2/internal/configsources",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:bx5F2mr6H6FC7zNIQoDoUr8wEKnvmwRncujT3FYRtic=",
              "replace": "",
              "version": "v1.1.15"
            }
          },
          "com_github_aws_aws_sdk_go_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2",
              "importpath": "github.com/aws/aws-sdk-go-v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:gOe9UPR98XSf7oEJCcojYg+N2/jCRm4DdeIsP85pIyQ=",
              "replace": "",
              "version": "v1.16.8"
            }
          },
          "com_github_skeema_knownhosts": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_skeema_knownhosts",
              "importpath": "github.com/skeema/knownhosts",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Wvr9V0MxhjRbl3f9nMnKnFfiWTJmtECJ9Njkea3ysW0=",
              "replace": "",
              "version": "v1.1.0"
            }
          },
          "com_github_zclconf_go_cty": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_zclconf_go_cty",
              "importpath": "github.com/zclconf/go-cty",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:PcupnljUm9EIvbgSHQnHhUr3fO6oFmkOrvs2BAFNXXY=",
              "replace": "",
              "version": "v1.12.1"
            }
          },
          "com_github_aws_aws_sdk_go_v2_service_s3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_service_s3",
              "importpath": "github.com/aws/aws-sdk-go-v2/service/s3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:NvzGue25jKnuAsh6yQ+TZ4ResMcnp49AWgWGm2L4b5o=",
              "replace": "",
              "version": "v1.27.2"
            }
          },
          "org_uber_go_zap": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_uber_go_zap",
              "importpath": "go.uber.org/zap",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:FiJd5l1UOLj0wCgbSE0rwwXHzEdAZS6hiiSnxJN/D60=",
              "replace": "",
              "version": "v1.24.0"
            }
          },
          "com_github_monochromegane_go_gitignore": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_monochromegane_go_gitignore",
              "importpath": "github.com/monochromegane/go-gitignore",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:n6/2gBQ3RWajuToeY6ZtZTIKv2v7ThUy5KKusIT0yc0=",
              "replace": "",
              "version": "v0.0.0-20200626010858-205db1a8cc00"
            }
          },
          "io_opentelemetry_go_otel_sdk": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_opentelemetry_go_otel_sdk",
              "importpath": "go.opentelemetry.io/otel/sdk",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:4OmStpcKVOfvDOgCt7UriAPtKolwIhxpnSNI/yK+1B0=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "com_github_coreos_go_semver": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_coreos_go_semver",
              "importpath": "github.com/coreos/go-semver",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:wkHLiw0WNATZnSG7epLsujiMCgPAc9xhjJ4tgnAxmfM=",
              "replace": "",
              "version": "v0.3.0"
            }
          },
          "in_gopkg_square_go_jose_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~in_gopkg_square_go_jose_v2",
              "importpath": "gopkg.in/square/go-jose.v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:NGk74WTnPKBNUhNzQX7PYcTLUjoq7mzKk2OKbvwk2iI=",
              "replace": "",
              "version": "v2.6.0"
            }
          },
          "com_github_segmentio_backo_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_segmentio_backo_go",
              "importpath": "github.com/segmentio/backo-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:rsRTAcCR5CeNLkvgBVSjQoDGRRt6kggsE6XYBqCv2KQ=",
              "replace": "",
              "version": "v0.0.0-20160424052352-204274ad699c"
            }
          },
          "com_github_microsoft_hcsshim": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_microsoft_hcsshim",
              "importpath": "github.com/Microsoft/hcsshim",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:k371PzBuRrz2b+ebGuI2nVgVhgsVX60jMfSw80NECxo=",
              "replace": "",
              "version": "v0.9.3"
            }
          },
          "com_github_mattermost_xml_roundtrip_validator": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mattermost_xml_roundtrip_validator",
              "importpath": "github.com/mattermost/xml-roundtrip-validator",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:RXbVD2UAl7A7nOTR4u7E3ILa4IbtvKBHw64LDsmu9hU=",
              "replace": "",
              "version": "v0.1.0"
            }
          },
          "com_github_itchyny_gojq": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_itchyny_gojq",
              "importpath": "github.com/itchyny/gojq",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:lKhMKfH7fTKMWj2Zr8az/9TliCn0TTXVc/BXfQ8Jhfc=",
              "replace": "",
              "version": "v0.11.2"
            }
          },
          "com_github_ghodss_yaml": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_ghodss_yaml",
              "importpath": "github.com/ghodss/yaml",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:wQHKEahhL6wmXdzwWG11gIVCkOv05bNOh+Rxn0yngAk=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_github_hashicorp_errwrap": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_hashicorp_errwrap",
              "importpath": "github.com/hashicorp/errwrap",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=",
              "replace": "",
              "version": "v1.1.0"
            }
          },
          "com_github_soheilhy_cmux": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_soheilhy_cmux",
              "importpath": "github.com/soheilhy/cmux",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:jjzc5WVemNEDTLwv9tlmemhC73tI08BNOIGwBOo10Js=",
              "replace": "",
              "version": "v0.1.5"
            }
          },
          "com_github_azure_go_ntlmssp": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_go_ntlmssp",
              "importpath": "github.com/Azure/go-ntlmssp",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:NeAW1fUYUEWhft7pkxDf6WoUvEZJ/uOKsvtpjLnn8MU=",
              "replace": "",
              "version": "v0.0.0-20220621081337-cb9428e4ac1e"
            }
          },
          "com_github_huandu_xstrings": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_huandu_xstrings",
              "importpath": "github.com/huandu/xstrings",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:D17IlohoQq4UcpqD7fDk80P7l+lwAmlFaBHgOipl2FU=",
              "replace": "",
              "version": "v1.4.0"
            }
          },
          "org_golang_google_grpc_cmd_protoc_gen_go_grpc": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_google_grpc_cmd_protoc_gen_go_grpc",
              "importpath": "google.golang.org/grpc/cmd/protoc-gen-go-grpc",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:rNBFJjBCOgVr9pWD7rs/knKL4FRTKgpZmsRfV214zcA=",
              "replace": "",
              "version": "v1.3.0"
            }
          },
          "com_github_mattn_go_zglob": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mattn_go_zglob",
              "importpath": "github.com/mattn/go-zglob",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ofNAzWCcyTALn2Zv40+8XitdzCgXY6e9qvXwN9W0YXg=",
              "replace": "",
              "version": "v0.0.2-0.20190814121620-e3c945676326"
            }
          },
          "com_github_rivo_uniseg": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_rivo_uniseg",
              "importpath": "github.com/rivo/uniseg",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:8TfxU8dW6PdqD27gjM8MVNuicgxIjxpm4K7x4jp8sis=",
              "replace": "",
              "version": "v0.4.4"
            }
          },
          "com_github_aws_aws_sdk_go_v2_aws_protocol_eventstream": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_aws_protocol_eventstream",
              "importpath": "github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:S/ZBwevQkr7gv5YxONYpGQxlMFFYSRfz3RMcjsC9Qhk=",
              "replace": "",
              "version": "v1.4.3"
            }
          },
          "com_github_go_openapi_jsonpointer": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_openapi_jsonpointer",
              "importpath": "github.com/go-openapi/jsonpointer",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:eCs3fxoIi3Wh6vtgmLTOjdhSpiqphQ+DaPn38N2ZdrE=",
              "replace": "",
              "version": "v0.19.6"
            }
          },
          "com_github_mattn_go_runewidth": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mattn_go_runewidth",
              "importpath": "github.com/mattn/go-runewidth",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:+xnbZSEeDbOIg5/mE6JF0w6n9duR1l3/WmbinWVwUuU=",
              "replace": "",
              "version": "v0.0.14"
            }
          },
          "io_opencensus_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_opencensus_go",
              "importpath": "go.opencensus.io",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=",
              "replace": "",
              "version": "v0.24.0"
            }
          },
          "com_github_google_btree": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_google_btree",
              "importpath": "github.com/google/btree",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:xf4v41cLI2Z6FxbKm+8Bu+m8ifhj15JuZ9sa0jZCMUU=",
              "replace": "",
              "version": "v1.1.2"
            }
          },
          "org_golang_google_genproto": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_google_genproto",
              "importpath": "google.golang.org/genproto",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Vn+VyHU5guc9KjB5KrjI2q0wCOWEOIh0OEsleqakHJg=",
              "replace": "",
              "version": "v0.0.0-20231120223509-83a465c0220f"
            }
          },
          "io_etcd_go_etcd_pkg_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_etcd_go_etcd_pkg_v3",
              "importpath": "go.etcd.io/etcd/pkg/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:hz6w5Cb4p7dbt642m8Y35Ts9yWPWUCymc3v4Z/aiGEU=",
              "replace": "",
              "version": "v3.5.8"
            }
          },
          "com_github_stretchr_testify": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_stretchr_testify",
              "importpath": "github.com/stretchr/testify",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=",
              "replace": "",
              "version": "v1.8.4"
            }
          },
          "com_github_charmbracelet_bubbletea": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_charmbracelet_bubbletea",
              "importpath": "github.com/charmbracelet/bubbletea",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:uaQIKx9Ai6Gdh5zpTbGiWpytMU+CfsPp06RaW2cx/SY=",
              "replace": "",
              "version": "v0.24.2"
            }
          },
          "com_github_mattn_go_tty": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mattn_go_tty",
              "importpath": "github.com/mattn/go-tty",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:5OfyWorkyO7xP52Mq7tB36ajHDG5OHrmBGIS/DtakQI=",
              "replace": "",
              "version": "v0.0.3"
            }
          },
          "com_github_blang_semver": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_blang_semver",
              "importpath": "github.com/blang/semver",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:cQNTCjp13qL8KC3Nbxr/y2Bqb63oX6wdnnjpJbkM4JQ=",
              "replace": "",
              "version": "v3.5.1+incompatible"
            }
          },
          "com_google_cloud_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_google_cloud_go",
              "importpath": "cloud.google.com/go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:LXy9GEO+timppncPIAZoOj3l58LIU9k+kn48AN7IO3Y=",
              "replace": "",
              "version": "v0.110.10"
            }
          },
          "com_github_c_bata_go_prompt": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_c_bata_go_prompt",
              "importpath": "github.com/c-bata/go-prompt",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:3zg6PecEywxNn0xiqcXHD96fkbxghD+gdB2tbsYfl+Y=",
              "replace": "",
              "version": "v0.2.5"
            }
          },
          "org_golang_google_grpc": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_google_grpc",
              "importpath": "google.golang.org/grpc",
              "build_directives": [
                "gazelle:proto disable"
              ],
              "build_file_generation": "on",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Z5Iec2pjwb+LEOqzpB2MR12/eKFhDPhuqW91O+4bwUk=",
              "replace": "",
              "version": "v1.59.0"
            }
          },
          "com_github_aws_smithy_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_smithy_go",
              "importpath": "github.com/aws/smithy-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:gXpeZel/jPoWQ7OEmLIgCUnhkFftqNfwWUwAHSlp1v0=",
              "replace": "",
              "version": "v1.12.0"
            }
          },
          "io_k8s_cli_runtime": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_cli_runtime",
              "importpath": "k8s.io/cli-runtime",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:smfsOcT4QujeghsNjECKN3lwyX9AwcFU0nvJ7sFN3ro=",
              "replace": "",
              "version": "v0.29.2"
            }
          },
          "com_github_go_openapi_swag": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_openapi_swag",
              "importpath": "github.com/go-openapi/swag",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:yMBqmnQ0gyZvEb/+KzuWZOXgllrXT4SADYbvDaXHv/g=",
              "replace": "",
              "version": "v0.22.3"
            }
          },
          "com_github_jackc_pgerrcode": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jackc_pgerrcode",
              "importpath": "github.com/jackc/pgerrcode",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:WAvSpGf7MsFuzAtK4Vk7R4EVe+liW4x83r4oWu0WHKw=",
              "replace": "",
              "version": "v0.0.0-20201024163028-a0d42d470451"
            }
          },
          "com_github_opencontainers_go_digest": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_opencontainers_go_digest",
              "importpath": "github.com/opencontainers/go-digest",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_google_cloud_go_profiler": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_google_cloud_go_profiler",
              "importpath": "cloud.google.com/go/profiler",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:R6y/xAeifaUXxd2x6w+jIwKxoKl8Cv5HJvcvASTPWJo=",
              "replace": "",
              "version": "v0.3.0"
            }
          },
          "com_github_pjbgf_sha1cd": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pjbgf_sha1cd",
              "importpath": "github.com/pjbgf/sha1cd",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:4D5XXmUUBUl/xQ6IjCkEAbqXskkq/4O7LmGn0AqMDs4=",
              "replace": "",
              "version": "v0.3.0"
            }
          },
          "com_github_prometheus_procfs": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_prometheus_procfs",
              "importpath": "github.com/prometheus/procfs",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ODq8ZFEaYeCaZOJlZZdJA2AbQR98dSHSM1KW/You5mo=",
              "replace": "",
              "version": "v0.8.0"
            }
          },
          "com_github_russellhaering_goxmldsig": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_russellhaering_goxmldsig",
              "importpath": "github.com/russellhaering/goxmldsig",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:DllIWUgMy0cRUMfGiASiYEa35nsieyD3cigIwLonTPM=",
              "replace": "",
              "version": "v1.3.0"
            }
          },
          "org_golang_x_text": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_text",
              "importpath": "golang.org/x/text",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=",
              "replace": "",
              "version": "v0.14.0"
            }
          },
          "com_github_go_logr_logr": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_logr_logr",
              "importpath": "github.com/go-logr/logr",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:2y3SDp0ZXuc6/cjLSZ+Q3ir+QB9T/iG5yYRXqsagWSY=",
              "replace": "",
              "version": "v1.3.0"
            }
          },
          "in_gopkg_warnings_v0": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~in_gopkg_warnings_v0",
              "importpath": "gopkg.in/warnings.v0",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:wFXVbFY8DY5/xOe1ECiWdKCzZlxgshcYVNkBHstARME=",
              "replace": "",
              "version": "v0.1.2"
            }
          },
          "com_github_chmduquesne_rollinghash": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_chmduquesne_rollinghash",
              "importpath": "github.com/chmduquesne/rollinghash",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:hnREQO+DXjqIw3rUTzWN7/+Dpw+N5Um8zpKV0JOEgbo=",
              "replace": "",
              "version": "v4.0.0+incompatible"
            }
          },
          "com_github_jonboulle_clockwork": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jonboulle_clockwork",
              "importpath": "github.com/jonboulle/clockwork",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:UOGuzwb1PwsrDAObMuhUnj0p5ULPj8V/xJ7Kx9qUBdQ=",
              "replace": "",
              "version": "v0.2.2"
            }
          },
          "com_github_dlclark_regexp2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_dlclark_regexp2",
              "importpath": "github.com/dlclark/regexp2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:8sAhBGEM0dRWogWqWyQeIJnxjWO6oIjl8FKqREDsGfk=",
              "replace": "",
              "version": "v1.2.0"
            }
          },
          "io_k8s_klog_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_klog_v2",
              "importpath": "k8s.io/klog/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:U/Af64HJf7FcwMcXyKm2RPM22WZzyR7OSpYj5tg3cL0=",
              "replace": "",
              "version": "v2.110.1"
            }
          },
          "com_github_cloudflare_circl": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_cloudflare_circl",
              "importpath": "github.com/cloudflare/circl",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:fE/Qz0QdIGqeWfnwq0RE0R7MI51s0M2E4Ga9kq5AEMs=",
              "replace": "",
              "version": "v1.3.3"
            }
          },
          "com_github_azure_azure_sdk_for_go_sdk_internal": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_azure_sdk_for_go_sdk_internal",
              "importpath": "github.com/Azure/azure-sdk-for-go/sdk/internal",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:jp0dGvZ7ZK0mgqnTSClMxa5xuRL7NZgHameVYF6BurY=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_github_santhosh_tekuri_jsonschema_v5": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_santhosh_tekuri_jsonschema_v5",
              "importpath": "github.com/santhosh-tekuri/jsonschema/v5",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:TToq11gyfNlrMFZiYujSekIsPd9AmsA2Bj/iv+s4JHE=",
              "replace": "",
              "version": "v5.0.0"
            }
          },
          "com_github_acomagu_bufpipe": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_acomagu_bufpipe",
              "importpath": "github.com/acomagu/bufpipe",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:fxAGrHZTgQ9w5QqVItgzwj235/uYZYgbXitB+dLupOk=",
              "replace": "",
              "version": "v1.0.3"
            }
          },
          "com_github_hashicorp_golang_lru_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_hashicorp_golang_lru_v2",
              "importpath": "github.com/hashicorp/golang-lru/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:5pv5N1lT1fjLg2VQ5KWc7kmucp2x/kvFOnxuVTqZ6x4=",
              "replace": "",
              "version": "v2.0.1"
            }
          },
          "com_github_moby_sys_mountinfo": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_moby_sys_mountinfo",
              "importpath": "github.com/moby/sys/mountinfo",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:BzJjoreD5BMFNmD9Rus6gdd1pLuecOFPt8wC+Vygl78=",
              "replace": "",
              "version": "v0.6.2"
            }
          },
          "com_github_azure_go_autorest_autorest_date": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_go_autorest_autorest_date",
              "importpath": "github.com/Azure/go-autorest/autorest/date",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:7gUk1U5M/CQbp9WoqinNzJar+8KY+LPI6wiWrP/myHw=",
              "replace": "",
              "version": "v0.3.0"
            }
          },
          "com_github_jackc_pgx_v4": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jackc_pgx_v4",
              "importpath": "github.com/jackc/pgx/v4",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:JzTglcal01DrghUqt+PmzWsZx/Yh7SC/CTQmSBMTd0Y=",
              "replace": "",
              "version": "v4.16.1"
            }
          },
          "bazel_gazelle_go_repository_config": {
            "bzlFile": "@@gazelle~0.35.0//internal/bzlmod:go_deps.bzl",
            "ruleClassName": "_go_repository_config",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~bazel_gazelle_go_repository_config",
              "importpaths": {
                "org_golang_google_grpc_cmd_protoc_gen_go_grpc": "google.golang.org/grpc/cmd/protoc-gen-go-grpc",
                "com_github_alecthomas_jsonschema": "github.com/alecthomas/jsonschema",
                "com_github_iancoleman_orderedmap": "github.com/iancoleman/orderedmap",
                "com_github_iancoleman_strcase": "github.com/iancoleman/strcase",
                "com_github_xeipuuv_gojsonpointer": "github.com/xeipuuv/gojsonpointer",
                "com_github_xeipuuv_gojsonreference": "github.com/xeipuuv/gojsonreference",
                "com_github_xeipuuv_gojsonschema": "github.com/xeipuuv/gojsonschema",
                "com_google_cloud_go_profiler": "cloud.google.com/go/profiler",
                "com_google_cloud_go_storage": "cloud.google.com/go/storage",
                "com_github_azure_azure_sdk_for_go": "github.com/Azure/azure-sdk-for-go",
                "com_github_data_dog_go_sqlmock": "github.com/DATA-DOG/go-sqlmock",
                "com_github_adrg_xdg": "github.com/adrg/xdg",
                "com_github_aws_aws_lambda_go": "github.com/aws/aws-lambda-go",
                "com_github_aws_aws_sdk_go": "github.com/aws/aws-sdk-go",
                "@rules_go~0.46.0": "github.com/bazelbuild/rules_go",
                "com_github_c_bata_go_prompt": "github.com/c-bata/go-prompt",
                "com_github_cevaris_ordered_map": "github.com/cevaris/ordered_map",
                "com_github_chmduquesne_rollinghash": "github.com/chmduquesne/rollinghash",
                "com_github_chrusty_protoc_gen_jsonschema": "github.com/chrusty/protoc-gen-jsonschema",
                "com_github_coreos_go_oidc": "github.com/coreos/go-oidc",
                "com_github_determined_ai_determined_proto": "github.com/determined-ai/determined/proto",
                "com_github_dexidp_dex": "github.com/dexidp/dex",
                "com_github_dexidp_dex_api_v2": "github.com/dexidp/dex/api/v2",
                "com_github_dlmiddlecote_sqlstats": "github.com/dlmiddlecote/sqlstats",
                "com_github_docker_docker": "github.com/docker/docker",
                "com_github_docker_go_connections": "github.com/docker/go-connections",
                "com_github_docker_go_units": "github.com/docker/go-units",
                "com_github_dustin_go_humanize": "github.com/dustin/go-humanize",
                "com_github_envoyproxy_protoc_gen_validate": "github.com/envoyproxy/protoc-gen-validate",
                "com_github_evanphx_json_patch": "github.com/evanphx/json-patch",
                "com_github_fatih_camelcase": "github.com/fatih/camelcase",
                "com_github_fatih_color": "github.com/fatih/color",
                "com_github_felixge_httpsnoop": "github.com/felixge/httpsnoop",
                "com_github_fsouza_go_dockerclient": "github.com/fsouza/go-dockerclient",
                "com_github_go_logr_zapr": "github.com/go-logr/zapr",
                "com_github_go_sql_driver_mysql": "github.com/go-sql-driver/mysql",
                "com_github_golang_protobuf": "github.com/golang/protobuf",
                "com_github_google_btree": "github.com/google/btree",
                "com_github_google_go_cmp": "github.com/google/go-cmp",
                "@jsonnet_go~0.20.0": "github.com/google/go-jsonnet",
                "com_github_google_gofuzz": "github.com/google/gofuzz",
                "com_github_google_uuid": "github.com/google/uuid",
                "com_github_gorilla_mux": "github.com/gorilla/mux",
                "com_github_grpc_ecosystem_go_grpc_middleware": "github.com/grpc-ecosystem/go-grpc-middleware",
                "com_github_grpc_ecosystem_go_grpc_prometheus": "github.com/grpc-ecosystem/go-grpc-prometheus",
                "com_github_grpc_ecosystem_grpc_gateway_v2": "github.com/grpc-ecosystem/grpc-gateway/v2",
                "com_github_gruntwork_io_terratest": "github.com/gruntwork-io/terratest",
                "com_github_hanwen_go_fuse_v2": "github.com/hanwen/go-fuse/v2",
                "com_github_hashicorp_golang_lru": "github.com/hashicorp/golang-lru",
                "com_github_hashicorp_golang_lru_v2": "github.com/hashicorp/golang-lru/v2",
                "com_github_itchyny_gojq": "github.com/itchyny/gojq",
                "com_github_jackc_pgconn": "github.com/jackc/pgconn",
                "com_github_jackc_pgerrcode": "github.com/jackc/pgerrcode",
                "com_github_jackc_pgx_v4": "github.com/jackc/pgx/v4",
                "com_github_jmoiron_sqlx": "github.com/jmoiron/sqlx",
                "com_github_json_iterator_go": "github.com/json-iterator/go",
                "com_github_juju_ansiterm": "github.com/juju/ansiterm",
                "com_github_klauspost_compress": "github.com/klauspost/compress",
                "com_github_lib_pq": "github.com/lib/pq",
                "com_github_mattn_go_isatty": "github.com/mattn/go-isatty",
                "com_github_minio_minio_go_v6": "github.com/minio/minio-go/v6",
                "com_github_minio_minio_go_v7": "github.com/minio/minio-go/v7",
                "com_github_modern_go_reflect2": "github.com/modern-go/reflect2",
                "com_github_opentracing_contrib_go_grpc": "github.com/opentracing-contrib/go-grpc",
                "com_github_opentracing_opentracing_go": "github.com/opentracing/opentracing-go",
                "com_github_pachyderm_ohmyglob": "github.com/pachyderm/ohmyglob",
                "com_github_pachyderm_s2": "github.com/pachyderm/s2",
                "com_github_pkg_browser": "github.com/pkg/browser",
                "com_github_pkg_errors": "github.com/pkg/errors",
                "com_github_prometheus_client_golang": "github.com/prometheus/client_golang",
                "com_github_prometheus_common": "github.com/prometheus/common",
                "com_github_prometheus_procfs": "github.com/prometheus/procfs",
                "com_github_pulumi_pulumi_aws_sdk_v5": "github.com/pulumi/pulumi-aws/sdk/v5",
                "com_github_pulumi_pulumi_awsx_sdk": "github.com/pulumi/pulumi-awsx/sdk",
                "com_github_pulumi_pulumi_eks_sdk": "github.com/pulumi/pulumi-eks/sdk",
                "com_github_pulumi_pulumi_kubernetes_sdk_v3": "github.com/pulumi/pulumi-kubernetes/sdk/v3",
                "com_github_pulumi_pulumi_postgresql_sdk_v3": "github.com/pulumi/pulumi-postgresql/sdk/v3",
                "com_github_pulumi_pulumi_sdk_v3": "github.com/pulumi/pulumi/sdk/v3",
                "com_github_robfig_cron": "github.com/robfig/cron",
                "com_github_satori_go_uuid": "github.com/satori/go.uuid",
                "com_github_segmentio_analytics_go": "github.com/segmentio/analytics-go",
                "com_github_sirupsen_logrus": "github.com/sirupsen/logrus",
                "com_github_spf13_cobra": "github.com/spf13/cobra",
                "com_github_spf13_pflag": "github.com/spf13/pflag",
                "com_github_stretchr_testify": "github.com/stretchr/testify",
                "com_github_timewasted_go_accept_headers": "github.com/timewasted/go-accept-headers",
                "com_github_uber_jaeger_client_go": "github.com/uber/jaeger-client-go",
                "com_github_vbauerster_mpb_v6": "github.com/vbauerster/mpb/v6",
                "com_github_wader_readline": "github.com/wader/readline",
                "com_github_wcharczuk_go_chart": "github.com/wcharczuk/go-chart",
                "com_github_zeebo_xxh3": "github.com/zeebo/xxh3",
                "io_etcd_go_etcd_api_v3": "go.etcd.io/etcd/api/v3",
                "io_etcd_go_etcd_client_v3": "go.etcd.io/etcd/client/v3",
                "io_etcd_go_etcd_server_v3": "go.etcd.io/etcd/server/v3",
                "net_starlark_go": "go.starlark.net",
                "org_uber_go_atomic": "go.uber.org/atomic",
                "org_uber_go_automaxprocs": "go.uber.org/automaxprocs",
                "org_uber_go_zap": "go.uber.org/zap",
                "dev_gocloud": "gocloud.dev",
                "org_golang_x_crypto": "golang.org/x/crypto",
                "org_golang_x_exp": "golang.org/x/exp",
                "org_golang_x_mod": "golang.org/x/mod",
                "org_golang_x_net": "golang.org/x/net",
                "org_golang_x_oauth2": "golang.org/x/oauth2",
                "org_golang_x_sync": "golang.org/x/sync",
                "org_golang_x_sys": "golang.org/x/sys",
                "org_golang_x_term": "golang.org/x/term",
                "org_golang_x_text": "golang.org/x/text",
                "org_golang_google_api": "google.golang.org/api",
                "org_golang_google_genproto_googleapis_rpc": "google.golang.org/genproto/googleapis/rpc",
                "org_golang_google_grpc": "google.golang.org/grpc",
                "org_golang_google_protobuf": "google.golang.org/protobuf",
                "in_gopkg_yaml_v3": "gopkg.in/yaml.v3",
                "io_k8s_api": "k8s.io/api",
                "io_k8s_apimachinery": "k8s.io/apimachinery",
                "io_k8s_client_go": "k8s.io/client-go",
                "io_k8s_klog_v2": "k8s.io/klog/v2",
                "io_k8s_kubectl": "k8s.io/kubectl",
                "io_k8s_utils": "k8s.io/utils",
                "io_k8s_sigs_kind": "sigs.k8s.io/kind",
                "io_k8s_sigs_yaml": "sigs.k8s.io/yaml",
                "com_github_burntsushi_toml": "github.com/BurntSushi/toml",
                "com_github_evanphx_json_patch_v5": "github.com/evanphx/json-patch/v5",
                "com_github_google_gnostic_models": "github.com/google/gnostic-models",
                "com_github_google_safetext": "github.com/google/safetext",
                "com_github_moby_term": "github.com/moby/term",
                "com_github_mxk_go_flowrate": "github.com/mxk/go-flowrate",
                "com_github_pelletier_go_toml": "github.com/pelletier/go-toml",
                "com_google_cloud_go": "cloud.google.com/go",
                "com_google_cloud_go_compute": "cloud.google.com/go/compute",
                "com_google_cloud_go_compute_metadata": "cloud.google.com/go/compute/metadata",
                "com_google_cloud_go_iam": "cloud.google.com/go/iam",
                "com_github_appsflyer_go_sundheit": "github.com/AppsFlyer/go-sundheit",
                "com_github_azure_azure_sdk_for_go_sdk_azcore": "github.com/Azure/azure-sdk-for-go/sdk/azcore",
                "com_github_azure_azure_sdk_for_go_sdk_azidentity": "github.com/Azure/azure-sdk-for-go/sdk/azidentity",
                "com_github_azure_azure_sdk_for_go_sdk_internal": "github.com/Azure/azure-sdk-for-go/sdk/internal",
                "com_github_azure_azure_sdk_for_go_sdk_storage_azblob": "github.com/Azure/azure-sdk-for-go/sdk/storage/azblob",
                "com_github_azure_go_ansiterm": "github.com/Azure/go-ansiterm",
                "com_github_azure_go_autorest": "github.com/Azure/go-autorest",
                "com_github_azure_go_autorest_autorest": "github.com/Azure/go-autorest/autorest",
                "com_github_azure_go_autorest_autorest_adal": "github.com/Azure/go-autorest/autorest/adal",
                "com_github_azure_go_autorest_autorest_date": "github.com/Azure/go-autorest/autorest/date",
                "com_github_azure_go_autorest_autorest_to": "github.com/Azure/go-autorest/autorest/to",
                "com_github_azure_go_autorest_logger": "github.com/Azure/go-autorest/logger",
                "com_github_azure_go_autorest_tracing": "github.com/Azure/go-autorest/tracing",
                "com_github_azure_go_ntlmssp": "github.com/Azure/go-ntlmssp",
                "com_github_azuread_microsoft_authentication_library_for_go": "github.com/AzureAD/microsoft-authentication-library-for-go",
                "com_github_masterminds_goutils": "github.com/Masterminds/goutils",
                "com_github_masterminds_semver": "github.com/Masterminds/semver",
                "com_github_masterminds_semver_v3": "github.com/Masterminds/semver/v3",
                "com_github_masterminds_sprig_v3": "github.com/Masterminds/sprig/v3",
                "com_github_microsoft_go_winio": "github.com/Microsoft/go-winio",
                "com_github_microsoft_hcsshim": "github.com/Microsoft/hcsshim",
                "com_github_protonmail_go_crypto": "github.com/ProtonMail/go-crypto",
                "com_github_vividcortex_ewma": "github.com/VividCortex/ewma",
                "com_github_acarl005_stripansi": "github.com/acarl005/stripansi",
                "com_github_acomagu_bufpipe": "github.com/acomagu/bufpipe",
                "com_github_aead_chacha20": "github.com/aead/chacha20",
                "com_github_agext_levenshtein": "github.com/agext/levenshtein",
                "com_github_alessio_shellescape": "github.com/alessio/shellescape",
                "com_github_apparentlymart_go_textseg_v13": "github.com/apparentlymart/go-textseg/v13",
                "com_github_atotto_clipboard": "github.com/atotto/clipboard",
                "com_github_aws_aws_sdk_go_v2": "github.com/aws/aws-sdk-go-v2",
                "com_github_aws_aws_sdk_go_v2_aws_protocol_eventstream": "github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream",
                "com_github_aws_aws_sdk_go_v2_config": "github.com/aws/aws-sdk-go-v2/config",
                "com_github_aws_aws_sdk_go_v2_credentials": "github.com/aws/aws-sdk-go-v2/credentials",
                "com_github_aws_aws_sdk_go_v2_feature_ec2_imds": "github.com/aws/aws-sdk-go-v2/feature/ec2/imds",
                "com_github_aws_aws_sdk_go_v2_feature_s3_manager": "github.com/aws/aws-sdk-go-v2/feature/s3/manager",
                "com_github_aws_aws_sdk_go_v2_internal_configsources": "github.com/aws/aws-sdk-go-v2/internal/configsources",
                "com_github_aws_aws_sdk_go_v2_internal_endpoints_v2": "github.com/aws/aws-sdk-go-v2/internal/endpoints/v2",
                "com_github_aws_aws_sdk_go_v2_internal_ini": "github.com/aws/aws-sdk-go-v2/internal/ini",
                "com_github_aws_aws_sdk_go_v2_internal_v4a": "github.com/aws/aws-sdk-go-v2/internal/v4a",
                "com_github_aws_aws_sdk_go_v2_service_internal_accept_encoding": "github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding",
                "com_github_aws_aws_sdk_go_v2_service_internal_checksum": "github.com/aws/aws-sdk-go-v2/service/internal/checksum",
                "com_github_aws_aws_sdk_go_v2_service_internal_presigned_url": "github.com/aws/aws-sdk-go-v2/service/internal/presigned-url",
                "com_github_aws_aws_sdk_go_v2_service_internal_s3shared": "github.com/aws/aws-sdk-go-v2/service/internal/s3shared",
                "com_github_aws_aws_sdk_go_v2_service_s3": "github.com/aws/aws-sdk-go-v2/service/s3",
                "com_github_aws_aws_sdk_go_v2_service_sso": "github.com/aws/aws-sdk-go-v2/service/sso",
                "com_github_aws_aws_sdk_go_v2_service_sts": "github.com/aws/aws-sdk-go-v2/service/sts",
                "com_github_aws_smithy_go": "github.com/aws/smithy-go",
                "com_github_aymanbagabas_go_osc52_v2": "github.com/aymanbagabas/go-osc52/v2",
                "com_github_beevik_etree": "github.com/beevik/etree",
                "com_github_benbjohnson_clock": "github.com/benbjohnson/clock",
                "com_github_beorn7_perks": "github.com/beorn7/perks",
                "com_github_blang_semver": "github.com/blang/semver",
                "com_github_blend_go_sdk": "github.com/blend/go-sdk",
                "com_github_boombuler_barcode": "github.com/boombuler/barcode",
                "com_github_cenkalti_backoff_v4": "github.com/cenkalti/backoff/v4",
                "com_github_cespare_xxhash_v2": "github.com/cespare/xxhash/v2",
                "com_github_charmbracelet_bubbles": "github.com/charmbracelet/bubbles",
                "com_github_charmbracelet_bubbletea": "github.com/charmbracelet/bubbletea",
                "com_github_charmbracelet_lipgloss": "github.com/charmbracelet/lipgloss",
                "com_github_cheggaaa_pb": "github.com/cheggaaa/pb",
                "com_github_cloudflare_circl": "github.com/cloudflare/circl",
                "com_github_containerd_cgroups": "github.com/containerd/cgroups",
                "com_github_containerd_console": "github.com/containerd/console",
                "com_github_containerd_continuity": "github.com/containerd/continuity",
                "com_github_coreos_go_oidc_v3": "github.com/coreos/go-oidc/v3",
                "com_github_coreos_go_semver": "github.com/coreos/go-semver",
                "com_github_coreos_go_systemd_v22": "github.com/coreos/go-systemd/v22",
                "com_github_cpuguy83_go_md2man_v2": "github.com/cpuguy83/go-md2man/v2",
                "com_github_davecgh_go_spew": "github.com/davecgh/go-spew",
                "com_github_djherbis_times": "github.com/djherbis/times",
                "com_github_dlclark_regexp2": "github.com/dlclark/regexp2",
                "com_github_docker_distribution": "github.com/docker/distribution",
                "com_github_emicklei_go_restful_v3": "github.com/emicklei/go-restful/v3",
                "com_github_emirpasic_gods": "github.com/emirpasic/gods",
                "com_github_fsnotify_fsnotify": "github.com/fsnotify/fsnotify",
                "com_github_ghodss_yaml": "github.com/ghodss/yaml",
                "com_github_go_asn1_ber_asn1_ber": "github.com/go-asn1-ber/asn1-ber",
                "com_github_go_errors_errors": "github.com/go-errors/errors",
                "com_github_go_git_gcfg": "github.com/go-git/gcfg",
                "com_github_go_git_go_billy_v5": "github.com/go-git/go-billy/v5",
                "com_github_go_git_go_git_v5": "github.com/go-git/go-git/v5",
                "com_github_go_jose_go_jose_v3": "github.com/go-jose/go-jose/v3",
                "com_github_go_ldap_ldap_v3": "github.com/go-ldap/ldap/v3",
                "com_github_go_logr_logr": "github.com/go-logr/logr",
                "com_github_go_logr_stdr": "github.com/go-logr/stdr",
                "com_github_go_openapi_jsonpointer": "github.com/go-openapi/jsonpointer",
                "com_github_go_openapi_jsonreference": "github.com/go-openapi/jsonreference",
                "com_github_go_openapi_swag": "github.com/go-openapi/swag",
                "com_github_gobwas_glob": "github.com/gobwas/glob",
                "com_github_gofrs_uuid": "github.com/gofrs/uuid",
                "com_github_gogo_protobuf": "github.com/gogo/protobuf",
                "com_github_golang_jwt_jwt": "github.com/golang-jwt/jwt",
                "com_github_golang_jwt_jwt_v4": "github.com/golang-jwt/jwt/v4",
                "com_github_golang_freetype": "github.com/golang/freetype",
                "com_github_golang_glog": "github.com/golang/glog",
                "com_github_golang_groupcache": "github.com/golang/groupcache",
                "com_github_google_pprof": "github.com/google/pprof",
                "com_github_google_s2a_go": "github.com/google/s2a-go",
                "com_github_google_shlex": "github.com/google/shlex",
                "com_github_google_wire": "github.com/google/wire",
                "com_github_googleapis_enterprise_certificate_proxy": "github.com/googleapis/enterprise-certificate-proxy",
                "com_github_googleapis_gax_go_v2": "github.com/googleapis/gax-go/v2",
                "com_github_gorilla_handlers": "github.com/gorilla/handlers",
                "com_github_gorilla_websocket": "github.com/gorilla/websocket",
                "com_github_gregjones_httpcache": "github.com/gregjones/httpcache",
                "com_github_grpc_ecosystem_grpc_gateway": "github.com/grpc-ecosystem/grpc-gateway",
                "com_github_grpc_ecosystem_grpc_opentracing": "github.com/grpc-ecosystem/grpc-opentracing",
                "com_github_gruntwork_io_go_commons": "github.com/gruntwork-io/go-commons",
                "com_github_hashicorp_errwrap": "github.com/hashicorp/errwrap",
                "com_github_hashicorp_go_multierror": "github.com/hashicorp/go-multierror",
                "com_github_hashicorp_hcl_v2": "github.com/hashicorp/hcl/v2",
                "com_github_huandu_xstrings": "github.com/huandu/xstrings",
                "com_github_ijc_gotty": "github.com/ijc/Gotty",
                "com_github_imdario_mergo": "github.com/imdario/mergo",
                "com_github_inconshreveable_mousetrap": "github.com/inconshreveable/mousetrap",
                "com_github_itchyny_astgen_go": "github.com/itchyny/astgen-go",
                "com_github_itchyny_timefmt_go": "github.com/itchyny/timefmt-go",
                "com_github_jackc_chunkreader_v2": "github.com/jackc/chunkreader/v2",
                "com_github_jackc_pgio": "github.com/jackc/pgio",
                "com_github_jackc_pgpassfile": "github.com/jackc/pgpassfile",
                "com_github_jackc_pgproto3_v2": "github.com/jackc/pgproto3/v2",
                "com_github_jackc_pgservicefile": "github.com/jackc/pgservicefile",
                "com_github_jackc_pgtype": "github.com/jackc/pgtype",
                "com_github_jbenet_go_context": "github.com/jbenet/go-context",
                "com_github_jehiah_go_strftime": "github.com/jehiah/go-strftime",
                "com_github_jmespath_go_jmespath": "github.com/jmespath/go-jmespath",
                "com_github_jonboulle_clockwork": "github.com/jonboulle/clockwork",
                "com_github_josharian_intern": "github.com/josharian/intern",
                "com_github_kevinburke_ssh_config": "github.com/kevinburke/ssh_config",
                "com_github_klauspost_cpuid_v2": "github.com/klauspost/cpuid/v2",
                "com_github_kylelemons_godebug": "github.com/kylelemons/godebug",
                "com_github_liggitt_tabwriter": "github.com/liggitt/tabwriter",
                "com_github_lucasb_eyer_go_colorful": "github.com/lucasb-eyer/go-colorful",
                "com_github_lunixbochs_vtclean": "github.com/lunixbochs/vtclean",
                "com_github_mailru_easyjson": "github.com/mailru/easyjson",
                "com_github_mattermost_xml_roundtrip_validator": "github.com/mattermost/xml-roundtrip-validator",
                "com_github_mattn_go_colorable": "github.com/mattn/go-colorable",
                "com_github_mattn_go_localereader": "github.com/mattn/go-localereader",
                "com_github_mattn_go_runewidth": "github.com/mattn/go-runewidth",
                "com_github_mattn_go_sqlite3": "github.com/mattn/go-sqlite3",
                "com_github_mattn_go_tty": "github.com/mattn/go-tty",
                "com_github_mattn_go_zglob": "github.com/mattn/go-zglob",
                "com_github_matttproud_golang_protobuf_extensions": "github.com/matttproud/golang_protobuf_extensions",
                "com_github_minio_md5_simd": "github.com/minio/md5-simd",
                "com_github_minio_sha256_simd": "github.com/minio/sha256-simd",
                "com_github_mitchellh_copystructure": "github.com/mitchellh/copystructure",
                "com_github_mitchellh_go_homedir": "github.com/mitchellh/go-homedir",
                "com_github_mitchellh_go_ps": "github.com/mitchellh/go-ps",
                "com_github_mitchellh_go_wordwrap": "github.com/mitchellh/go-wordwrap",
                "com_github_mitchellh_reflectwalk": "github.com/mitchellh/reflectwalk",
                "com_github_moby_spdystream": "github.com/moby/spdystream",
                "com_github_moby_sys_mount": "github.com/moby/sys/mount",
                "com_github_moby_sys_mountinfo": "github.com/moby/sys/mountinfo",
                "com_github_modern_go_concurrent": "github.com/modern-go/concurrent",
                "com_github_monochromegane_go_gitignore": "github.com/monochromegane/go-gitignore",
                "com_github_muesli_ansi": "github.com/muesli/ansi",
                "com_github_muesli_cancelreader": "github.com/muesli/cancelreader",
                "com_github_muesli_reflow": "github.com/muesli/reflow",
                "com_github_muesli_termenv": "github.com/muesli/termenv",
                "com_github_munnerz_goautoneg": "github.com/munnerz/goautoneg",
                "com_github_opencontainers_go_digest": "github.com/opencontainers/go-digest",
                "com_github_opencontainers_image_spec": "github.com/opencontainers/image-spec",
                "com_github_opencontainers_runc": "github.com/opencontainers/runc",
                "com_github_opentracing_basictracer_go": "github.com/opentracing/basictracer-go",
                "com_github_peterbourgon_diskv": "github.com/peterbourgon/diskv",
                "com_github_pjbgf_sha1cd": "github.com/pjbgf/sha1cd",
                "com_github_pkg_term": "github.com/pkg/term",
                "com_github_pmezard_go_difflib": "github.com/pmezard/go-difflib",
                "com_github_pquerna_cachecontrol": "github.com/pquerna/cachecontrol",
                "com_github_pquerna_otp": "github.com/pquerna/otp",
                "com_github_prometheus_client_model": "github.com/prometheus/client_model",
                "com_github_pulumi_pulumi_docker_sdk_v3": "github.com/pulumi/pulumi-docker/sdk/v3",
                "com_github_rivo_uniseg": "github.com/rivo/uniseg",
                "com_github_rogpeppe_go_internal": "github.com/rogpeppe/go-internal",
                "com_github_rs_xid": "github.com/rs/xid",
                "com_github_russellhaering_goxmldsig": "github.com/russellhaering/goxmldsig",
                "com_github_russross_blackfriday_v2": "github.com/russross/blackfriday/v2",
                "com_github_sabhiram_go_gitignore": "github.com/sabhiram/go-gitignore",
                "com_github_santhosh_tekuri_jsonschema_v5": "github.com/santhosh-tekuri/jsonschema/v5",
                "com_github_segmentio_backo_go": "github.com/segmentio/backo-go",
                "com_github_sergi_go_diff": "github.com/sergi/go-diff",
                "com_github_shopspring_decimal": "github.com/shopspring/decimal",
                "com_github_skeema_knownhosts": "github.com/skeema/knownhosts",
                "com_github_soheilhy_cmux": "github.com/soheilhy/cmux",
                "com_github_spf13_cast": "github.com/spf13/cast",
                "com_github_texttheater_golang_levenshtein": "github.com/texttheater/golang-levenshtein",
                "com_github_tmc_grpc_websocket_proxy": "github.com/tmc/grpc-websocket-proxy",
                "com_github_tweekmonster_luser": "github.com/tweekmonster/luser",
                "com_github_uber_jaeger_lib": "github.com/uber/jaeger-lib",
                "com_github_urfave_cli": "github.com/urfave/cli",
                "com_github_xanzy_ssh_agent": "github.com/xanzy/ssh-agent",
                "com_github_xiang90_probing": "github.com/xiang90/probing",
                "com_github_xlab_treeprint": "github.com/xlab/treeprint",
                "com_github_xtgo_uuid": "github.com/xtgo/uuid",
                "com_github_zclconf_go_cty": "github.com/zclconf/go-cty",
                "io_etcd_go_bbolt": "go.etcd.io/bbolt",
                "io_etcd_go_etcd_client_pkg_v3": "go.etcd.io/etcd/client/pkg/v3",
                "io_etcd_go_etcd_client_v2": "go.etcd.io/etcd/client/v2",
                "io_etcd_go_etcd_pkg_v3": "go.etcd.io/etcd/pkg/v3",
                "io_etcd_go_etcd_raft_v3": "go.etcd.io/etcd/raft/v3",
                "io_opencensus_go": "go.opencensus.io",
                "io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc": "go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc",
                "io_opentelemetry_go_otel": "go.opentelemetry.io/otel",
                "io_opentelemetry_go_otel_exporters_otlp_internal_retry": "go.opentelemetry.io/otel/exporters/otlp/internal/retry",
                "io_opentelemetry_go_otel_exporters_otlp_otlptrace": "go.opentelemetry.io/otel/exporters/otlp/otlptrace",
                "io_opentelemetry_go_otel_exporters_otlp_otlptrace_otlptracegrpc": "go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc",
                "io_opentelemetry_go_otel_sdk": "go.opentelemetry.io/otel/sdk",
                "io_opentelemetry_go_otel_trace": "go.opentelemetry.io/otel/trace",
                "io_opentelemetry_go_proto_otlp": "go.opentelemetry.io/proto/otlp",
                "org_uber_go_multierr": "go.uber.org/multierr",
                "org_golang_x_image": "golang.org/x/image",
                "org_golang_x_time": "golang.org/x/time",
                "org_golang_x_xerrors": "golang.org/x/xerrors",
                "org_golang_google_appengine": "google.golang.org/appengine",
                "org_golang_google_genproto": "google.golang.org/genproto",
                "org_golang_google_genproto_googleapis_api": "google.golang.org/genproto/googleapis/api",
                "in_gopkg_inf_v0": "gopkg.in/inf.v0",
                "in_gopkg_ini_v1": "gopkg.in/ini.v1",
                "in_gopkg_natefinch_lumberjack_v2": "gopkg.in/natefinch/lumberjack.v2",
                "in_gopkg_square_go_jose_v2": "gopkg.in/square/go-jose.v2",
                "in_gopkg_warnings_v0": "gopkg.in/warnings.v0",
                "in_gopkg_yaml_v2": "gopkg.in/yaml.v2",
                "io_k8s_cli_runtime": "k8s.io/cli-runtime",
                "io_k8s_kube_openapi": "k8s.io/kube-openapi",
                "com_lukechampine_frand": "lukechampine.com/frand",
                "io_k8s_sigs_json": "sigs.k8s.io/json",
                "io_k8s_sigs_kustomize_api": "sigs.k8s.io/kustomize/api",
                "io_k8s_sigs_kustomize_kyaml": "sigs.k8s.io/kustomize/kyaml",
                "io_k8s_sigs_structured_merge_diff_v4": "sigs.k8s.io/structured-merge-diff/v4",
                "com_sourcegraph_sourcegraph_appdash": "sourcegraph.com/sourcegraph/appdash",
                "org_golang_x_tools": "golang.org/x/tools",
                "com_github_bazelbuild_buildtools": "github.com/bazelbuild/buildtools",
                "com_github_bmatcuk_doublestar_v4": "github.com/bmatcuk/doublestar/v4",
                "org_golang_x_tools_go_vcs": "golang.org/x/tools/go/vcs",
                "com_github_golang_mock": "github.com/golang/mock",
                "@gazelle~0.35.0": "github.com/bazelbuild/bazel-gazelle"
              },
              "module_names": {
                "@gazelle~0.35.0": "gazelle",
                "@jsonnet_go~0.20.0": "jsonnet_go",
                "@rules_go~0.46.0": "rules_go"
              },
              "build_naming_conventions": {}
            }
          },
          "com_github_boombuler_barcode": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_boombuler_barcode",
              "importpath": "github.com/boombuler/barcode",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:biVzkmvwrH8WK8raXaxBx6fRVTlJILwEwQGL1I/ByEI=",
              "replace": "",
              "version": "v1.0.1-0.20190219062509-6c824513bacc"
            }
          },
          "com_github_burntsushi_toml": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_burntsushi_toml",
              "importpath": "github.com/BurntSushi/toml",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Ws8e5YmnrGEHzZEzg0YvK/7COGYtTC5PbaH9oSSbgfA=",
              "replace": "",
              "version": "v1.3.0"
            }
          },
          "com_github_pulumi_pulumi_kubernetes_sdk_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pulumi_pulumi_kubernetes_sdk_v3",
              "importpath": "github.com/pulumi/pulumi-kubernetes/sdk/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:xJu48+RW+BHHnKtBni6Vj5vKqOEgCzdZAysGbh6tVM0=",
              "replace": "",
              "version": "v3.30.2"
            }
          },
          "com_github_vividcortex_ewma": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_vividcortex_ewma",
              "importpath": "github.com/VividCortex/ewma",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:MnEK4VOv6n0RSY4vtRe3h11qjxL3+t0B8yOL8iMXdcM=",
              "replace": "",
              "version": "v1.1.1"
            }
          },
          "com_github_alessio_shellescape": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_alessio_shellescape",
              "importpath": "github.com/alessio/shellescape",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:MHPfaU+ddJ0/bYWpgIeUnQUqKrlJ1S7BfEYPM4uEoM0=",
              "replace": "",
              "version": "v1.4.2"
            }
          },
          "org_golang_x_sys": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_sys",
              "importpath": "golang.org/x/sys",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:h48lPFYpsTvQJZF4EKyI4aLHaev3CxivZmv7yZig9pc=",
              "replace": "",
              "version": "v0.15.0"
            }
          },
          "com_github_docker_go_units": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_docker_go_units",
              "importpath": "github.com/docker/go-units",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:3uh0PgVws3nIA0Q+MwDC8yjEPf9zjRfZZWXZYDct3Tw=",
              "replace": "",
              "version": "v0.4.0"
            }
          },
          "com_github_adrg_xdg": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_adrg_xdg",
              "importpath": "github.com/adrg/xdg",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:RzRqFcjH4nE5C6oTAxhBtoE2IRyjBSa62SCbyPidvls=",
              "replace": "",
              "version": "v0.4.0"
            }
          },
          "com_github_prometheus_common": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_prometheus_common",
              "importpath": "github.com/prometheus/common",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ccBbHCgIiT9uSoFY0vX8H3zsNR5eLt17/RQLUvn8pXE=",
              "replace": "",
              "version": "v0.37.0"
            }
          },
          "com_github_google_gnostic_models": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_google_gnostic_models",
              "importpath": "github.com/google/gnostic-models",
              "build_directives": [
                "gazelle:proto disable"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:yo/ABAfM5IMRsS1VnXjTBvUb61tFIHozhlYvRgGre9I=",
              "replace": "",
              "version": "v0.6.8"
            }
          },
          "io_k8s_sigs_structured_merge_diff_v4": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_sigs_structured_merge_diff_v4",
              "importpath": "sigs.k8s.io/structured-merge-diff/v4",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:150L+0vs/8DA78h1u02ooW1/fFq/Lwr+sGiqlzvrtq4=",
              "replace": "",
              "version": "v4.4.1"
            }
          },
          "com_github_djherbis_times": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_djherbis_times",
              "importpath": "github.com/djherbis/times",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:79myA211VwPhFTqUk8xehWrsEO+zcIZj0zT8mXPVARU=",
              "replace": "",
              "version": "v1.5.0"
            }
          },
          "com_github_zeebo_xxh3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_zeebo_xxh3",
              "importpath": "github.com/zeebo/xxh3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:xZmwmqxHZA8AI603jOQ0tMqmBr9lPeFwGg6d+xy9DC0=",
              "replace": "",
              "version": "v1.0.2"
            }
          },
          "com_github_googleapis_gax_go_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_googleapis_gax_go_v2",
              "importpath": "github.com/googleapis/gax-go/v2",
              "build_directives": [
                "gazelle:proto disable"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:A+gCJKdRfqXkr+BIRGtZLibNXf0m1f9E4HG56etFpas=",
              "replace": "",
              "version": "v2.12.0"
            }
          },
          "org_golang_x_exp": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_exp",
              "importpath": "golang.org/x/exp",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:nFVjjKDgNY37+ZSYCJmtYf7tOlfQswHqplG2eosjOMg=",
              "replace": "",
              "version": "v0.0.0-20221019170559-20944726eadf"
            }
          },
          "com_github_minio_md5_simd": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_minio_md5_simd",
              "importpath": "github.com/minio/md5-simd",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Gdi1DZK69+ZVMoNHRXJyNcxrMA4dSxoYHZSQbirFg34=",
              "replace": "",
              "version": "v1.1.2"
            }
          },
          "com_github_cevaris_ordered_map": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_cevaris_ordered_map",
              "importpath": "github.com/cevaris/ordered_map",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:q1g9lSyo/nOIC3W5E3FK3Unrz8b9LdLXCyuC+ZcpPC0=",
              "replace": "",
              "version": "v0.0.0-20190319150403-3adeae072e73"
            }
          },
          "com_github_appsflyer_go_sundheit": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_appsflyer_go_sundheit",
              "importpath": "github.com/AppsFlyer/go-sundheit",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:/VxpyigCfJrq1r97mn9HPiAB2qrhcTFHwNIIDr15CZM=",
              "replace": "",
              "version": "v0.5.0"
            }
          },
          "io_k8s_sigs_kustomize_kyaml": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_sigs_kustomize_kyaml",
              "importpath": "sigs.k8s.io/kustomize/kyaml",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:W6cLQc5pnqM7vh3b7HvGNfXrJ/xL6BDMS0v1V/HHg5U=",
              "replace": "",
              "version": "v0.14.3-0.20230601165947-6ce0bf390ce3"
            }
          },
          "com_github_microsoft_go_winio": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_microsoft_go_winio",
              "importpath": "github.com/Microsoft/go-winio",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:a9IhgEQBCUEk6QCdml9CiJGhAws+YwffDHEMp1VMrpA=",
              "replace": "",
              "version": "v0.5.2"
            }
          },
          "com_github_peterbourgon_diskv": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_peterbourgon_diskv",
              "importpath": "github.com/peterbourgon/diskv",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:UBdAOUP5p4RWqPBg048CAvpKN+vxiaj6gdUUzhl4XmI=",
              "replace": "",
              "version": "v2.0.1+incompatible"
            }
          },
          "com_github_josharian_intern": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_josharian_intern",
              "importpath": "github.com/josharian/intern",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_github_lucasb_eyer_go_colorful": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_lucasb_eyer_go_colorful",
              "importpath": "github.com/lucasb-eyer/go-colorful",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:1nnpGOrhyZZuNyfu1QjKiUICQ74+3FNCN69Aj6K7nkY=",
              "replace": "",
              "version": "v1.2.0"
            }
          },
          "com_github_go_errors_errors": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_errors_errors",
              "importpath": "github.com/go-errors/errors",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:J6MZopCL4uSllY1OfXM374weqZFFItUbrImctkmUxIA=",
              "replace": "",
              "version": "v1.4.2"
            }
          },
          "com_github_imdario_mergo": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_imdario_mergo",
              "importpath": "github.com/imdario/mergo",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:lFzP57bqS/wsqKssCGmtLAb8A0wKjLGrve2q3PPVcBk=",
              "replace": "",
              "version": "v0.3.13"
            }
          },
          "com_github_coreos_go_oidc": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_coreos_go_oidc",
              "importpath": "github.com/coreos/go-oidc",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:mh48q/BqXqgjVHpy2ZY7WnWAbenxRjsz9N1i1YxjHAk=",
              "replace": "",
              "version": "v2.2.1+incompatible"
            }
          },
          "com_github_grpc_ecosystem_go_grpc_prometheus": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_grpc_ecosystem_go_grpc_prometheus",
              "importpath": "github.com/grpc-ecosystem/go-grpc-prometheus",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:uGoIog/wiQHI9GAxXO5TJbT0wWKH3O9HhOJW1F9c3fY=",
              "replace": "",
              "version": "v1.2.1-0.20191002090509-6af20e3a5340"
            }
          },
          "com_github_hashicorp_golang_lru": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_hashicorp_golang_lru",
              "importpath": "github.com/hashicorp/golang-lru",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:YDjusn29QI/Das2iO9M0BHnIbxPeyuCHsjMW+lJfyTc=",
              "replace": "",
              "version": "v0.5.4"
            }
          },
          "in_gopkg_natefinch_lumberjack_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~in_gopkg_natefinch_lumberjack_v2",
              "importpath": "gopkg.in/natefinch/lumberjack.v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:1Lc07Kr7qY4U2YPouBjpCLxpiyxIVoxqXgkXLknAOE8=",
              "replace": "",
              "version": "v2.0.0"
            }
          },
          "com_github_docker_docker": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_docker_docker",
              "importpath": "github.com/docker/docker",
              "build_directives": [
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:JYCuMrWaVNophQTOrMMoSwudOVEfcegoZZrleKc1xwE=",
              "replace": "",
              "version": "v20.10.17+incompatible"
            }
          },
          "com_github_aws_aws_sdk_go_v2_service_internal_accept_encoding": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_service_internal_accept_encoding",
              "importpath": "github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:4n4KCtv5SUoT5Er5XV41huuzrCqepxlW3SDI9qHQebc=",
              "replace": "",
              "version": "v1.9.3"
            }
          },
          "com_github_cespare_xxhash_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_cespare_xxhash_v2",
              "importpath": "github.com/cespare/xxhash/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=",
              "replace": "",
              "version": "v2.2.0"
            }
          },
          "com_github_go_logr_zapr": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_logr_zapr",
              "importpath": "github.com/go-logr/zapr",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:a9vnzlIBPQBBkeaR9IuMUfmVOrQlkoC4YfPoFkX3T7A=",
              "replace": "",
              "version": "v1.2.3"
            }
          },
          "com_github_json_iterator_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_json_iterator_go",
              "importpath": "github.com/json-iterator/go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=",
              "replace": "",
              "version": "v1.1.12"
            }
          },
          "io_etcd_go_etcd_api_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_etcd_go_etcd_api_v3",
              "importpath": "go.etcd.io/etcd/api/v3",
              "build_directives": [
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:4wSsluwyTbGGmyjJktOf3wFQoTBIURXHnq9n/G/JQHs=",
              "replace": "",
              "version": "v3.5.9"
            }
          },
          "com_github_azure_go_autorest_autorest_to": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_go_autorest_autorest_to",
              "importpath": "github.com/Azure/go-autorest/autorest/to",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:oXVqrxakqqV1UZdSazDOPOLvOIz+XA683u8EctwboHk=",
              "replace": "",
              "version": "v0.4.0"
            }
          },
          "io_etcd_go_etcd_raft_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_etcd_go_etcd_raft_v3",
              "importpath": "go.etcd.io/etcd/raft/v3",
              "build_directives": [
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:wM4IAfiY1+vrCAkUicIOzkyjpV9MawnAul2KvxeMgy4=",
              "replace": "",
              "version": "v3.5.8"
            }
          },
          "com_github_containerd_cgroups": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_containerd_cgroups",
              "importpath": "github.com/containerd/cgroups",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:jN/mbWBEaz+T1pi5OFtnkQ+8qnmEbAr1Oo1FRm5B0dA=",
              "replace": "",
              "version": "v1.0.4"
            }
          },
          "com_github_envoyproxy_protoc_gen_validate": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_envoyproxy_protoc_gen_validate",
              "importpath": "github.com/envoyproxy/protoc-gen-validate",
              "build_directives": [],
              "build_file_generation": "off",
              "build_extra_args": [],
              "patches": [
                "@@//private:protoc-gen-validate.patch"
              ],
              "patch_args": [
                "-p1"
              ],
              "sum": "h1:QkIBuU5k+x7/QXPvPPnWXWlCdaBFApVqftFV6k087DA=",
              "replace": "",
              "version": "v1.0.2"
            }
          },
          "com_github_minio_sha256_simd": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_minio_sha256_simd",
              "importpath": "github.com/minio/sha256-simd",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:v1ta+49hkWZyvaKwrQB8elexRqm6Y0aMLjCNsrYxo6g=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "io_opentelemetry_go_otel_exporters_otlp_internal_retry": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_opentelemetry_go_otel_exporters_otlp_internal_retry",
              "importpath": "go.opentelemetry.io/otel/exporters/otlp/internal/retry",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:7Yxsak1q4XrJ5y7XBnNwqWx9amMZvoidCctv62XOQ6Y=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "com_github_blend_go_sdk": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_blend_go_sdk",
              "importpath": "github.com/blend/go-sdk",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:snyngpyEgUM/aWkEtL2i7xigcW0yyac5erHXcjuafug=",
              "replace": "",
              "version": "v1.20210908.5"
            }
          },
          "com_github_go_jose_go_jose_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_jose_go_jose_v3",
              "importpath": "github.com/go-jose/go-jose/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:pWmKFVtt+Jl0vBZTIpz/eAKwsm6LkIxDVVbFHKkchhA=",
              "replace": "",
              "version": "v3.0.1"
            }
          },
          "com_github_hashicorp_go_multierror": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_hashicorp_go_multierror",
              "importpath": "github.com/hashicorp/go-multierror",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=",
              "replace": "",
              "version": "v1.1.1"
            }
          },
          "com_github_moby_spdystream": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_moby_spdystream",
              "importpath": "github.com/moby/spdystream",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:cjW1zVyyoiM0T7b6UoySUFqzXMoqRckQtXwGPiBhOM8=",
              "replace": "",
              "version": "v0.2.0"
            }
          },
          "com_github_xeipuuv_gojsonreference": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_xeipuuv_gojsonreference",
              "importpath": "github.com/xeipuuv/gojsonreference",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:EzJWgHovont7NscjpAxXsDA8S8BMYve8Y5+7cuRE7R0=",
              "replace": "",
              "version": "v0.0.0-20180127040603-bd5ef7bd5415"
            }
          },
          "com_github_klauspost_compress": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_klauspost_compress",
              "importpath": "github.com/klauspost/compress",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:91KN02FnsOYhuunwU4ssRe8lc2JosWmizWa91B5v1PU=",
              "replace": "",
              "version": "v1.16.4"
            }
          },
          "com_github_pkg_term": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pkg_term",
              "importpath": "github.com/pkg/term",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:xIAAdCMh3QIAy+5FrE8Ad8XoDhEU4ufwbaSozViP9kk=",
              "replace": "",
              "version": "v1.1.0"
            }
          },
          "org_golang_x_time": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_time",
              "importpath": "golang.org/x/time",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=",
              "replace": "",
              "version": "v0.3.0"
            }
          },
          "com_github_xtgo_uuid": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_xtgo_uuid",
              "importpath": "github.com/xtgo/uuid",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:3lbZUMbMiGUW/LMkfsEABsc5zNT9+b1CvsJx47JzJ8g=",
              "replace": "",
              "version": "v0.0.0-20140804021211-a0b114877d4c"
            }
          },
          "com_github_masterminds_semver": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_masterminds_semver",
              "importpath": "github.com/Masterminds/semver",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:H65muMkzWKEuNDnfl9d70GUjFniHKHRbFPGBuZ3QEww=",
              "replace": "",
              "version": "v1.5.0"
            }
          },
          "com_github_aws_aws_sdk_go_v2_feature_ec2_imds": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_feature_ec2_imds",
              "importpath": "github.com/aws/aws-sdk-go-v2/feature/ec2/imds",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:hz8tc+OW17YqxyFFPSkvfSikbqWcyyHRyPVSTzC0+aI=",
              "replace": "",
              "version": "v1.12.9"
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_grpc_ecosystem_grpc_gateway_v2",
              "importpath": "github.com/grpc-ecosystem/grpc-gateway/v2",
              "build_directives": [],
              "build_file_generation": "on",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ERKrevVTnCw3Wu4I3mtR15QU3gtWy86cBo6De0jEohg=",
              "replace": "",
              "version": "v2.10.2"
            }
          },
          "com_github_jackc_chunkreader_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jackc_chunkreader_v2",
              "importpath": "github.com/jackc/chunkreader/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:i+RDz65UE+mmpjTfyz0MoVTnzeYxroil2G82ki7MGG8=",
              "replace": "",
              "version": "v2.0.1"
            }
          },
          "com_github_cenkalti_backoff_v4": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_cenkalti_backoff_v4",
              "importpath": "github.com/cenkalti/backoff/v4",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:cFAlzYUlVYDysBEH2T5hyJZMh3+5+WCBvSnK6Q8UtC4=",
              "replace": "",
              "version": "v4.1.3"
            }
          },
          "com_github_coreos_go_systemd_v22": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_coreos_go_systemd_v22",
              "importpath": "github.com/coreos/go-systemd/v22",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:D9/bQk5vlXQFZ6Kwuu6zaiXJ9oTPe68++AzAJc1DzSI=",
              "replace": "",
              "version": "v22.3.2"
            }
          },
          "com_github_aws_aws_sdk_go_v2_service_sso": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_service_sso",
              "importpath": "github.com/aws/aws-sdk-go-v2/service/sso",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:DQpf+al+aWozOEmVEdml67qkVZ6vdtGUi71BZZWw40k=",
              "replace": "",
              "version": "v1.11.13"
            }
          },
          "com_github_gorilla_mux": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_gorilla_mux",
              "importpath": "github.com/gorilla/mux",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:i40aqfkR1h2SlN9hojwV5ZA91wcXFOvkdNIeFDP5koI=",
              "replace": "",
              "version": "v1.8.0"
            }
          },
          "com_github_grpc_ecosystem_grpc_gateway": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_grpc_ecosystem_grpc_gateway",
              "importpath": "github.com/grpc-ecosystem/grpc-gateway",
              "build_directives": [
                "gazelle:exclude **/**_test.go",
                "gazelle:exclude examples",
                "gazelle:resolve go github.com/grpc-ecosystem/grpc-gateway/internal //internal",
                "gazelle:resolve go github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options //protoc-gen-swagger/options",
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "on",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:gmcG1KaJ57LophUzW0Hy8NmPhnMZb4M0+kPpLofRdBo=",
              "replace": "",
              "version": "v1.16.0"
            }
          },
          "com_github_jmespath_go_jmespath": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jmespath_go_jmespath",
              "importpath": "github.com/jmespath/go-jmespath",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=",
              "replace": "",
              "version": "v0.4.0"
            }
          },
          "com_github_jmoiron_sqlx": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jmoiron_sqlx",
              "importpath": "github.com/jmoiron/sqlx",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:vFFPA71p1o5gAeqtEAwLU4dnX2napprKtHr7PYIcN3g=",
              "replace": "",
              "version": "v1.3.5"
            }
          },
          "com_github_wader_readline": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_wader_readline",
              "importpath": "github.com/wader/readline",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:AzpBtmgdXa3uznrb3esNeEoaLqtNEwckRmaUH0qWD6w=",
              "replace": "",
              "version": "v0.0.0-20230307172220-bcb7158e7448"
            }
          },
          "com_github_liggitt_tabwriter": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_liggitt_tabwriter",
              "importpath": "github.com/liggitt/tabwriter",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:9TO3cAIGXtEhnIaL+V+BEER86oLrvS+kWobKpbJuye0=",
              "replace": "",
              "version": "v0.0.0-20181228230101-89fcab3d43de"
            }
          },
          "com_github_emicklei_go_restful_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_emicklei_go_restful_v3",
              "importpath": "github.com/emicklei/go-restful/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:rAQeMHw1c7zTmncogyy8VvRZwtkmkZ4FxERmMY4rD+g=",
              "replace": "",
              "version": "v3.11.0"
            }
          },
          "com_github_xlab_treeprint": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_xlab_treeprint",
              "importpath": "github.com/xlab/treeprint",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:HzHnuAF1plUN2zGlAFHbSQP2qJ0ZAD3XF5XD7OesXRQ=",
              "replace": "",
              "version": "v1.2.0"
            }
          },
          "com_github_jbenet_go_context": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jbenet_go_context",
              "importpath": "github.com/jbenet/go-context",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:BQSFePA1RWJOlocH6Fxy8MmwDt+yVQYULKfN0RoTN8A=",
              "replace": "",
              "version": "v0.0.0-20150711004518-d14ea06fba99"
            }
          },
          "com_github_containerd_console": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_containerd_console",
              "importpath": "github.com/containerd/console",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:q2hJAaP1k2wIvVRd/hEHD7lacgqrCPS+k8g1MndzfWY=",
              "replace": "",
              "version": "v1.0.4-0.20230313162750-1ae8d489ac81"
            }
          },
          "com_github_aws_aws_sdk_go_v2_feature_s3_manager": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_feature_s3_manager",
              "importpath": "github.com/aws/aws-sdk-go-v2/feature/s3/manager",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:bpiKFJ9aC0xTVpygSRRRL/YHC1JZ+pHQHENATHuoiwo=",
              "replace": "",
              "version": "v1.11.21"
            }
          },
          "com_github_gruntwork_io_go_commons": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_gruntwork_io_go_commons",
              "importpath": "github.com/gruntwork-io/go-commons",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:k/yypwrPqSeYHevLlEDmvmgQzcyTwrlZGRaxEM6G0ro=",
              "replace": "",
              "version": "v0.8.0"
            }
          },
          "com_github_aws_aws_sdk_go_v2_internal_endpoints_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_internal_endpoints_v2",
              "importpath": "github.com/aws/aws-sdk-go-v2/internal/endpoints/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:5sbyznZC2TeFpa4fvtpvpcGbzeXEEs1l1Jo51ynUNsQ=",
              "replace": "",
              "version": "v2.4.9"
            }
          },
          "com_github_azure_azure_sdk_for_go_sdk_azidentity": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_azure_sdk_for_go_sdk_azidentity",
              "importpath": "github.com/Azure/azure-sdk-for-go/sdk/azidentity",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Yoicul8bnVdQrhDMTHxdEckRGX01XvwXDHUT9zYZ3k0=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_github_acarl005_stripansi": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_acarl005_stripansi",
              "importpath": "github.com/acarl005/stripansi",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:licZJFw2RwpHMqeKTCYkitsPqHNxTmd4SNR5r94FGM8=",
              "replace": "",
              "version": "v0.0.0-20180116102854-5a71ef0e047d"
            }
          },
          "com_github_azure_azure_sdk_for_go_sdk_storage_azblob": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_azure_sdk_for_go_sdk_storage_azblob",
              "importpath": "github.com/Azure/azure-sdk-for-go/sdk/storage/azblob",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:QSdcrd/UFJv6Bp/CfoVf2SrENpFn9P6Yh8yb+xNhYMM=",
              "replace": "",
              "version": "v0.4.1"
            }
          },
          "com_github_prometheus_client_golang": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_prometheus_client_golang",
              "importpath": "github.com/prometheus/client_golang",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:nJdhIvne2eSX/XRAFV9PcvFFRbrjbcTUj0VP62TMhnw=",
              "replace": "",
              "version": "v1.14.0"
            }
          },
          "com_github_google_safetext": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_google_safetext",
              "importpath": "github.com/google/safetext",
              "build_directives": [
                "gazelle:build_file_name BUILD.bazel",
                "gazelle:build_file_proto_mode disable_global"
              ],
              "build_file_generation": "on",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:SJ+NtwL6QaZ21U+IrK7d0gGgpjGGvd2kz+FzTHVzdqI=",
              "replace": "",
              "version": "v0.0.0-20220905092116-b49f7bc46da2"
            }
          },
          "com_github_xanzy_ssh_agent": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_xanzy_ssh_agent",
              "importpath": "github.com/xanzy/ssh-agent",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:+/15pJfg/RsTxqYcX6fHqOXZwwMP+2VyYWJeWM2qQFM=",
              "replace": "",
              "version": "v0.3.3"
            }
          },
          "com_google_cloud_go_compute_metadata": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_google_cloud_go_compute_metadata",
              "importpath": "cloud.google.com/go/compute/metadata",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=",
              "replace": "",
              "version": "v0.2.3"
            }
          },
          "com_github_aws_aws_sdk_go_v2_service_sts": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_service_sts",
              "importpath": "github.com/aws/aws-sdk-go-v2/service/sts",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:7tquJrhjYz2EsCBvA9VTl+sBAAh1bv7h/sGASdZOGGo=",
              "replace": "",
              "version": "v1.16.10"
            }
          },
          "com_github_juju_ansiterm": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_juju_ansiterm",
              "importpath": "github.com/juju/ansiterm",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:FaWFmfWdAUKbSCtOU2QjDaorUexogfaMgbipgYATUMU=",
              "replace": "",
              "version": "v0.0.0-20180109212912-720a0952cc2a"
            }
          },
          "io_etcd_go_etcd_client_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_etcd_go_etcd_client_v2",
              "importpath": "go.etcd.io/etcd/client/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:IGp9Ozt8awy3qRTXSIYJd/o/cr4oUyrm9MF1RJ2dr/c=",
              "replace": "",
              "version": "v2.305.8"
            }
          },
          "io_etcd_go_etcd_client_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_etcd_go_etcd_client_v3",
              "importpath": "go.etcd.io/etcd/client/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:B6ngTKZSWWowHEoaucOKHQR/AtZKaoHLiUpWxOLG4l4=",
              "replace": "",
              "version": "v3.5.8"
            }
          },
          "com_github_klauspost_cpuid_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_klauspost_cpuid_v2",
              "importpath": "github.com/klauspost/cpuid/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:eyi1Ad2aNJMW95zcSbmGg7Cg6cq3ADwLpMAP96d8rF0=",
              "replace": "",
              "version": "v2.1.0"
            }
          },
          "com_github_aws_aws_sdk_go_v2_service_internal_s3shared": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_service_internal_s3shared",
              "importpath": "github.com/aws/aws-sdk-go-v2/service/internal/s3shared",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:sJdKvydGYDML9LTFcp6qq6Z5fIjN0Rdq2Gvw1hUg8tc=",
              "replace": "",
              "version": "v1.13.9"
            }
          },
          "org_uber_go_atomic": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_uber_go_atomic",
              "importpath": "go.uber.org/atomic",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ECmE8Bn/WFTYwEW/bpKD3M8VtR/zQVbavAoalC1PYyE=",
              "replace": "",
              "version": "v1.9.0"
            }
          },
          "com_github_lib_pq": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_lib_pq",
              "importpath": "github.com/lib/pq",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:p7ZhMD+KsSRozJr34udlUrhboJwWAgCg34+/ZZNvZZw=",
              "replace": "",
              "version": "v1.10.7"
            }
          },
          "com_github_mitchellh_reflectwalk": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mitchellh_reflectwalk",
              "importpath": "github.com/mitchellh/reflectwalk",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=",
              "replace": "",
              "version": "v1.0.2"
            }
          },
          "com_github_chrusty_protoc_gen_jsonschema": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_chrusty_protoc_gen_jsonschema",
              "importpath": "github.com/chrusty/protoc-gen-jsonschema",
              "build_directives": [
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:WqTuh63Eanl4DrV0oAUW7ZJgpG9x25NCTTx3v6h4LPM=",
              "replace": "",
              "version": "v0.0.0-20230418203306-956cc32e45d6"
            }
          },
          "com_github_gregjones_httpcache": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_gregjones_httpcache",
              "importpath": "github.com/gregjones/httpcache",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:pdN6V1QBWetyv/0+wjACpqVH+eVULgEjkurDLq3goeM=",
              "replace": "",
              "version": "v0.0.0-20180305231024-9cad4c3443a7"
            }
          },
          "com_github_gobwas_glob": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_gobwas_glob",
              "importpath": "github.com/gobwas/glob",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:A4xDbljILXROh+kObIiy5kIaPYD8e96x1tgBhUI5J+Y=",
              "replace": "",
              "version": "v0.2.3"
            }
          },
          "com_github_aws_aws_sdk_go_v2_service_internal_presigned_url": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_service_internal_presigned_url",
              "importpath": "github.com/aws/aws-sdk-go-v2/service/internal/presigned-url",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:sHfDuhbOuuWSIAEDd3pma6p0JgUcR2iePxtCE8gfCxQ=",
              "replace": "",
              "version": "v1.9.9"
            }
          },
          "com_github_azure_go_autorest": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_go_autorest",
              "importpath": "github.com/Azure/go-autorest",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:V5VMDjClD3GiElqLWO7mz2MxNAK/vTfRHdAubSIPRgs=",
              "replace": "",
              "version": "v14.2.0+incompatible"
            }
          },
          "com_github_grpc_ecosystem_grpc_opentracing": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_grpc_ecosystem_grpc_opentracing",
              "importpath": "github.com/grpc-ecosystem/grpc-opentracing",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:MJG/KsmcqMwFAkh8mTnAwhyKoB+sTAnY4CACC110tbU=",
              "replace": "",
              "version": "v0.0.0-20180507213350-8e809c8a8645"
            }
          },
          "com_github_sabhiram_go_gitignore": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_sabhiram_go_gitignore",
              "importpath": "github.com/sabhiram/go-gitignore",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:OkMGxebDjyw0ULyrTYWeN0UNCCkmCWfjPnIA2W6oviI=",
              "replace": "",
              "version": "v0.0.0-20210923224102-525f6e181f06"
            }
          },
          "com_github_jackc_pgconn": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jackc_pgconn",
              "importpath": "github.com/jackc/pgconn",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:rsDFzIpRk7xT4B8FufgpCCeyjdNpKyghZeSefViE5W8=",
              "replace": "",
              "version": "v1.12.1"
            }
          },
          "com_github_agext_levenshtein": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_agext_levenshtein",
              "importpath": "github.com/agext/levenshtein",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:YB2fHEn0UJagG8T1rrWknE3ZQzWM06O8AMAatNn7lmo=",
              "replace": "",
              "version": "v1.2.3"
            }
          },
          "com_github_golang_freetype": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_golang_freetype",
              "importpath": "github.com/golang/freetype",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:DACJavvAHhabrF08vX0COfcOBJRhZ8lUbR+ZWIs0Y5g=",
              "replace": "",
              "version": "v0.0.0-20170609003504-e2365dfdc4a0"
            }
          },
          "com_github_mitchellh_go_homedir": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mitchellh_go_homedir",
              "importpath": "github.com/mitchellh/go-homedir",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=",
              "replace": "",
              "version": "v1.1.0"
            }
          },
          "com_github_aws_aws_sdk_go_v2_credentials": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_credentials",
              "importpath": "github.com/aws/aws-sdk-go-v2/credentials",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:7gGcMQePejwiKoDWjB9cWnpfVdnz/e5JwJFuT6OrroI=",
              "replace": "",
              "version": "v1.12.10"
            }
          },
          "com_github_modern_go_reflect2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_modern_go_reflect2",
              "importpath": "github.com/modern-go/reflect2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=",
              "replace": "",
              "version": "v1.0.2"
            }
          },
          "org_golang_x_net": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_net",
              "importpath": "golang.org/x/net",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:zTwKpTd2XuCqf8huc7Fo2iSy+4RHPd10s4KzeTnVr1c=",
              "replace": "",
              "version": "v0.19.0"
            }
          },
          "com_github_xeipuuv_gojsonschema": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_xeipuuv_gojsonschema",
              "importpath": "github.com/xeipuuv/gojsonschema",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:LhYJRs+L4fBtjZUfuSZIKGeVu0QRy8e5Xi7D17UxZ74=",
              "replace": "",
              "version": "v1.2.0"
            }
          },
          "io_k8s_api": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_api",
              "importpath": "k8s.io/api",
              "build_directives": [
                "gazelle:proto disable"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:hBC7B9+MU+ptchxEqTNW2DkUosJpp1P+Wn6YncZ474A=",
              "replace": "",
              "version": "v0.29.2"
            }
          },
          "com_github_aws_aws_sdk_go_v2_config": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_aws_aws_sdk_go_v2_config",
              "importpath": "github.com/aws/aws-sdk-go-v2/config",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:yBV+J7Au5KZwOIrIYhYkTGJbifZPCkAnCFSvGsF3ui8=",
              "replace": "",
              "version": "v1.15.15"
            }
          },
          "com_github_xeipuuv_gojsonpointer": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_xeipuuv_gojsonpointer",
              "importpath": "github.com/xeipuuv/gojsonpointer",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:6cLsL+2FW6dRAdl5iMtHgRogVCff0QpRi9653YmdcJA=",
              "replace": "",
              "version": "v0.0.0-20190809123943-df4f5c81cb3b"
            }
          },
          "com_github_pelletier_go_toml": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pelletier_go_toml",
              "importpath": "github.com/pelletier/go-toml",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:tjENF6MfZAg8e4ZmZTeWaWiT2vXtsoO6+iuOjFhECwM=",
              "replace": "",
              "version": "v1.9.4"
            }
          },
          "io_k8s_sigs_json": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_sigs_json",
              "importpath": "sigs.k8s.io/json",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:EDPBXCAspyGV4jQlpZSudPeMmr1bNJefnuqLsRAsHZo=",
              "replace": "",
              "version": "v0.0.0-20221116044647-bc3834ca7abd"
            }
          },
          "com_github_muesli_cancelreader": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_muesli_cancelreader",
              "importpath": "github.com/muesli/cancelreader",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:3I4Kt4BQjOR54NavqnDogx/MIoWBFa0StPA8ELUXHmA=",
              "replace": "",
              "version": "v0.2.2"
            }
          },
          "org_golang_x_sync": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_sync",
              "importpath": "golang.org/x/sync",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:60k92dhOjHxJkrqnwsfl8KuaHbn/5dl0lUPUklKo3qE=",
              "replace": "",
              "version": "v0.5.0"
            }
          },
          "com_github_iancoleman_strcase": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_iancoleman_strcase",
              "importpath": "github.com/iancoleman/strcase",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:05I4QRnGpI0m37iZQRuskXh+w77mr6Z41lwQzuHLwW0=",
              "replace": "",
              "version": "v0.2.0"
            }
          },
          "org_golang_google_appengine": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_google_appengine",
              "importpath": "google.golang.org/appengine",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:FZR1q0exgwxzPzp/aF+VccGrSfxfPpkBqjIIEq3ru6c=",
              "replace": "",
              "version": "v1.6.7"
            }
          },
          "com_github_azure_go_autorest_tracing": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_go_autorest_tracing",
              "importpath": "github.com/Azure/go-autorest/tracing",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:TYi4+3m5t6K48TGI9AUdb+IzbnSxvnvUMfuitfgcfuo=",
              "replace": "",
              "version": "v0.6.0"
            }
          },
          "com_github_rs_xid": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_rs_xid",
              "importpath": "github.com/rs/xid",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:qd7wPTDkN6KQx2VmMBLrpHkiyQwgFXRnkOLacUiaSNY=",
              "replace": "",
              "version": "v1.4.0"
            }
          },
          "com_github_fatih_camelcase": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_fatih_camelcase",
              "importpath": "github.com/fatih/camelcase",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:hxNvNX/xYBp0ovncs8WyWZrOrpBNub/JfaMvbURyft8=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_github_felixge_httpsnoop": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_felixge_httpsnoop",
              "importpath": "github.com/felixge/httpsnoop",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:s/nj+GCswXYzN5v2DpNMuMQYe+0DDwt5WVCU6CWBdXk=",
              "replace": "",
              "version": "v1.0.3"
            }
          },
          "io_opentelemetry_go_otel": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_opentelemetry_go_otel",
              "importpath": "go.opentelemetry.io/otel",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Z2lA3Tdch0iDcrhJXDIlC94XE+bxok1F9B+4Lz/lGsM=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "com_github_minio_minio_go_v7": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_minio_minio_go_v7",
              "importpath": "github.com/minio/minio-go/v7",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:fP56plNR/Tkw/+Xczw9NL5TGxe5gJDvgd8LidNR3BEI=",
              "replace": "",
              "version": "v7.0.42"
            }
          },
          "com_github_minio_minio_go_v6": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_minio_minio_go_v6",
              "importpath": "github.com/minio/minio-go/v6",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ixPkbKkyD7IhnluRgQpGSpHdpvNVaW6OD5R9IAO/9Tw=",
              "replace": "",
              "version": "v6.0.57"
            }
          },
          "com_github_uber_jaeger_client_go": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_uber_jaeger_client_go",
              "importpath": "github.com/uber/jaeger-client-go",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:D6wyKGCecFaSRUpo8lCVbaOOb6ThwMmTEbhRwtKR97o=",
              "replace": "",
              "version": "v2.30.0+incompatible"
            }
          },
          "org_golang_x_term": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_x_term",
              "importpath": "golang.org/x/term",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:y/Oo/a/q3IXu26lQgl04j/gjuBDOBlx7X6Om1j2CPW4=",
              "replace": "",
              "version": "v0.15.0"
            }
          },
          "com_github_dexidp_dex_api_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_dexidp_dex_api_v2",
              "importpath": "github.com/dexidp/dex/api/v2",
              "build_directives": [
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:V7XTnG2HM2bqWZMABDQpf4EA6F+0jWPsv9pGaUIDo+k=",
              "replace": "",
              "version": "v2.1.0"
            }
          },
          "io_opentelemetry_go_otel_exporters_otlp_otlptrace": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_opentelemetry_go_otel_exporters_otlp_otlptrace",
              "importpath": "go.opentelemetry.io/otel/exporters/otlp/otlptrace",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:cMDtmgJ5FpRvqx9x2Aq+Mm0O6K/zcUkH73SFz20TuBw=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "com_github_charmbracelet_bubbles": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_charmbracelet_bubbles",
              "importpath": "github.com/charmbracelet/bubbles",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:6uzpAAaT9ZqKssntbvZMlksWHruQLNxg49H5WdeuYSY=",
              "replace": "",
              "version": "v0.16.1"
            }
          },
          "com_github_evanphx_json_patch": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_evanphx_json_patch",
              "importpath": "github.com/evanphx/json-patch",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:4onqiflcdA9EOZ4RxV643DvftH5pOlLGNtQ5lPWQu84=",
              "replace": "",
              "version": "v4.12.0+incompatible"
            }
          },
          "io_etcd_go_etcd_server_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_etcd_go_etcd_server_v3",
              "importpath": "go.etcd.io/etcd/server/v3",
              "build_directives": [
                "gazelle:proto disable_global"
              ],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:eK9fU6Pd6IJD1k0u4zAq1NZsSsEOOimlP3kIkpcQrho=",
              "replace": "",
              "version": "v3.5.8"
            }
          },
          "com_github_golang_protobuf": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_golang_protobuf",
              "importpath": "github.com/golang/protobuf",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=",
              "replace": "",
              "version": "v1.5.4"
            }
          },
          "com_github_gorilla_handlers": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_gorilla_handlers",
              "importpath": "github.com/gorilla/handlers",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:9lRY6j8DEeeBT10CvO9hGW0gmky0BprnvDI5vfhUHH4=",
              "replace": "",
              "version": "v1.5.1"
            }
          },
          "com_github_fsouza_go_dockerclient": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_fsouza_go_dockerclient",
              "importpath": "github.com/fsouza/go-dockerclient",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:W7wuJ3IB48WYZv/UBk9dCTIb9oX805+L9KIm65HcUYs=",
              "replace": "",
              "version": "v1.4.1"
            }
          },
          "com_github_robfig_cron": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_robfig_cron",
              "importpath": "github.com/robfig/cron",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ZjScXvvxeQ63Dbyxy76Fj3AT3Ut0aKsyd2/tl3DTMuQ=",
              "replace": "",
              "version": "v1.2.0"
            }
          },
          "com_github_golang_jwt_jwt_v4": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_golang_jwt_jwt_v4",
              "importpath": "github.com/golang-jwt/jwt/v4",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:rcc4lwaZgFMCZ5jxF9ABolDcIHdBytAFgqFPbSJQAYs=",
              "replace": "",
              "version": "v4.4.2"
            }
          },
          "io_k8s_kube_openapi": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_kube_openapi",
              "importpath": "k8s.io/kube-openapi",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:aVUu9fTY98ivBPKR9Y5w/AuzbMm96cd3YHRTU83I780=",
              "replace": "",
              "version": "v0.0.0-20231010175941-2dd684a91f00"
            }
          },
          "com_google_cloud_go_iam": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_google_cloud_go_iam",
              "importpath": "cloud.google.com/go/iam",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:1jTsCu4bcsNsE4iiqNT5SHwrDRCfRmIaaaVFhRveTJI=",
              "replace": "",
              "version": "v1.1.5"
            }
          },
          "com_github_ijc_gotty": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_ijc_gotty",
              "importpath": "github.com/ijc/Gotty",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:anPrsicrIi2ColgWTVPk+TrN42hJIWlfPHSBP9S0ZkM=",
              "replace": "",
              "version": "v0.0.0-20170406111628-a8b993ba6abd"
            }
          },
          "com_github_gofrs_uuid": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_gofrs_uuid",
              "importpath": "github.com/gofrs/uuid",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:yyYWMnhkhrKwwr8gAOcOCYxOOscHgDS9yZgBrnJfGa0=",
              "replace": "",
              "version": "v4.2.0+incompatible"
            }
          },
          "io_k8s_kubectl": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_kubectl",
              "importpath": "k8s.io/kubectl",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:uaDYaBhumvkwz0S2XHt36fK0v5IdNgL7HyUniwb2IUo=",
              "replace": "",
              "version": "v0.29.2"
            }
          },
          "com_github_moby_term": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_moby_term",
              "importpath": "github.com/moby/term",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:HfkjXDfhgVaN5rmueG8cL8KKeFNecRCXFhaJ2qZ5SKA=",
              "replace": "",
              "version": "v0.0.0-20221205130635-1aeaba878587"
            }
          },
          "io_etcd_go_etcd_client_pkg_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_etcd_go_etcd_client_pkg_v3",
              "importpath": "go.etcd.io/etcd/client/pkg/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:tPp9YRn/UBFAHdhOQUII9eUs7aOK35eulpMhX4YBd+M=",
              "replace": "",
              "version": "v3.5.8"
            }
          },
          "com_github_bmatcuk_doublestar_v4": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_bmatcuk_doublestar_v4",
              "importpath": "github.com/bmatcuk/doublestar/v4",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:FH9SifrbvJhnlQpztAx++wlkk70QBf0iBWDwNy7PA4I=",
              "replace": "",
              "version": "v4.6.1"
            }
          },
          "com_github_mitchellh_go_ps": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mitchellh_go_ps",
              "importpath": "github.com/mitchellh/go-ps",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:i6ampVEEF4wQFF+bkYfwYgY+F/uYJDktmvLPf7qIgjc=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_github_davecgh_go_spew": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_davecgh_go_spew",
              "importpath": "github.com/davecgh/go-spew",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=",
              "replace": "",
              "version": "v1.1.1"
            }
          },
          "com_github_mitchellh_go_wordwrap": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mitchellh_go_wordwrap",
              "importpath": "github.com/mitchellh/go-wordwrap",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:TLuKupo69TCn6TQSyGxwI1EblZZEsQ0vMlAFQflz0v0=",
              "replace": "",
              "version": "v1.0.1"
            }
          },
          "com_github_bazelbuild_buildtools": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_bazelbuild_buildtools",
              "importpath": "github.com/bazelbuild/buildtools",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:2Gc2Q6hVR1SJ8bBI9Ybzoggp8u/ED2WkM4MfvEIn9+c=",
              "replace": "",
              "version": "v0.0.0-20231115204819-d4c9dccdfbb1"
            }
          },
          "com_github_hanwen_go_fuse_v2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_hanwen_go_fuse_v2",
              "importpath": "github.com/hanwen/go-fuse/v2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:+32ffteETaLYClUj0a3aHjZ1hOPxxaNEHiZiujuDaek=",
              "replace": "",
              "version": "v2.1.0"
            }
          },
          "com_github_urfave_cli": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_urfave_cli",
              "importpath": "github.com/urfave/cli",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:gsqYFH8bb9ekPA12kRo0hfjngWQjkJPlN9R0N78BoUo=",
              "replace": "",
              "version": "v1.22.2"
            }
          },
          "com_github_pquerna_otp": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pquerna_otp",
              "importpath": "github.com/pquerna/otp",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:/A3+Jn+cagqayeR3iHs/L62m5ue7710D35zl1zJ1kok=",
              "replace": "",
              "version": "v1.2.0"
            }
          },
          "com_github_pulumi_pulumi_docker_sdk_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pulumi_pulumi_docker_sdk_v3",
              "importpath": "github.com/pulumi/pulumi-docker/sdk/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:plWLn9O6u80Vr37LoCsckyobBfcrdTU9cERor72QjqA=",
              "replace": "",
              "version": "v3.6.1"
            }
          },
          "com_github_mattn_go_localereader": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_mattn_go_localereader",
              "importpath": "github.com/mattn/go-localereader",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:ygSAOl7ZXTx4RdPYinUpg6W99U8jWvWi9Ye2JC/oIi4=",
              "replace": "",
              "version": "v0.0.1"
            }
          },
          "com_github_shopspring_decimal": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_shopspring_decimal",
              "importpath": "github.com/shopspring/decimal",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:2Usl1nmF/WZucqkFZhnfFYxxxu8LG21F6nPQBE5gKV8=",
              "replace": "",
              "version": "v1.3.1"
            }
          },
          "com_github_pkg_errors": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pkg_errors",
              "importpath": "github.com/pkg/errors",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=",
              "replace": "",
              "version": "v0.9.1"
            }
          },
          "com_github_charmbracelet_lipgloss": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_charmbracelet_lipgloss",
              "importpath": "github.com/charmbracelet/lipgloss",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:17WMwi7N1b1rVWOjMT+rCh7sQkvDU75B2hbZpc5Kc1E=",
              "replace": "",
              "version": "v0.7.1"
            }
          },
          "com_github_pachyderm_s2": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pachyderm_s2",
              "importpath": "github.com/pachyderm/s2",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Zf5KLyfmWSnL28nLAZCmSVFXGASD/BAUHqicqB+vRsQ=",
              "replace": "",
              "version": "v0.0.0-20220510214824-e4a20345d93c"
            }
          },
          "com_github_iancoleman_orderedmap": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_iancoleman_orderedmap",
              "importpath": "github.com/iancoleman/orderedmap",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:sq1N/TFpYH++aViPcaKjys3bDClUEU7s5B+z6jq8pNA=",
              "replace": "",
              "version": "v0.2.0"
            }
          },
          "com_github_azure_azure_sdk_for_go_sdk_azcore": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_azure_azure_sdk_for_go_sdk_azcore",
              "importpath": "github.com/Azure/azure-sdk-for-go/sdk/azcore",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:tz19qLF65vuu2ibfTqGVJxG/zZAI27NEIIbvAOQwYbw=",
              "replace": "",
              "version": "v1.1.1"
            }
          },
          "com_github_muesli_ansi": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_muesli_ansi",
              "importpath": "github.com/muesli/ansi",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:1XF24mVaiu7u+CFywTdcDo2ie1pzzhwjt6RHqzpMU34=",
              "replace": "",
              "version": "v0.0.0-20211018074035-2e021307bc4b"
            }
          },
          "com_github_pkg_browser": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pkg_browser",
              "importpath": "github.com/pkg/browser",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:KoWmjvw+nsYOo29YJK9vDA65RGE3NrOnUtO7a+RF9HU=",
              "replace": "",
              "version": "v0.0.0-20210911075715-681adbf594b8"
            }
          },
          "com_github_dustin_go_humanize": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_dustin_go_humanize",
              "importpath": "github.com/dustin/go-humanize",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=",
              "replace": "",
              "version": "v1.0.1"
            }
          },
          "com_github_vbauerster_mpb_v6": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_vbauerster_mpb_v6",
              "importpath": "github.com/vbauerster/mpb/v6",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:DWFnBOcgHi9GUNduC1MbQ936Z7B77wvOnZexP9Hjzcw=",
              "replace": "",
              "version": "v6.0.2"
            }
          },
          "io_k8s_sigs_yaml": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_k8s_sigs_yaml",
              "importpath": "sigs.k8s.io/yaml",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:a2VclLzOGrwOHDiV8EfBGhvjHvP46CtW5j6POvhYGGo=",
              "replace": "",
              "version": "v1.3.0"
            }
          },
          "com_github_go_asn1_ber_asn1_ber": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_asn1_ber_asn1_ber",
              "importpath": "github.com/go-asn1-ber/asn1-ber",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:vXT6d/FNDiELJnLb6hGNa309LMsrCoYFvpwHDF0+Y1A=",
              "replace": "",
              "version": "v1.5.4"
            }
          },
          "com_github_go_logr_stdr": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_logr_stdr",
              "importpath": "github.com/go-logr/stdr",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=",
              "replace": "",
              "version": "v1.2.2"
            }
          },
          "com_github_gorilla_websocket": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_gorilla_websocket",
              "importpath": "github.com/gorilla/websocket",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=",
              "replace": "",
              "version": "v1.5.0"
            }
          },
          "com_github_texttheater_golang_levenshtein": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_texttheater_golang_levenshtein",
              "importpath": "github.com/texttheater/golang-levenshtein",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:+cRNoVrfiwufQPhoMzB6N0Yf/Mqajr6t1lOv8GyGE2U=",
              "replace": "",
              "version": "v1.0.1"
            }
          },
          "io_opentelemetry_go_otel_trace": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~io_opentelemetry_go_otel_trace",
              "importpath": "go.opentelemetry.io/otel/trace",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:O37Iogk1lEkMRXewVtZ1BBTVn5JEp8GrJvP92bJqC6o=",
              "replace": "",
              "version": "v1.7.0"
            }
          },
          "com_github_muesli_reflow": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_muesli_reflow",
              "importpath": "github.com/muesli/reflow",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:IFsN6K9NfGtjeggFP+68I4chLZV2yIKsXJFNZ+eWh6s=",
              "replace": "",
              "version": "v0.3.0"
            }
          },
          "com_github_opentracing_contrib_go_grpc": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_opentracing_contrib_go_grpc",
              "importpath": "github.com/opentracing-contrib/go-grpc",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:4cPxUYdgaGzZIT5/j0IfqOrrXmq6bG8AwvwisMXpdrg=",
              "replace": "",
              "version": "v0.0.0-20210225150812-73cb765af46e"
            }
          },
          "org_golang_google_api": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~org_golang_google_api",
              "importpath": "google.golang.org/api",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:b2CqT6kG+zqJIVKRQ3ELJVLN1PwHZ6DJ3dW8yl82rgY=",
              "replace": "",
              "version": "v0.149.0"
            }
          },
          "com_github_docker_distribution": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_docker_distribution",
              "importpath": "github.com/docker/distribution",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Q50tZOPR6T/hjNsyc9g8/syEs6bk8XXApsHjKukMl68=",
              "replace": "",
              "version": "v2.8.1+incompatible"
            }
          },
          "com_github_sergi_go_diff": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_sergi_go_diff",
              "importpath": "github.com/sergi/go-diff",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:XU+rvMAioB0UC3q1MFrIQy4Vo5/4VsRDQQXHsEya6xQ=",
              "replace": "",
              "version": "v1.2.0"
            }
          },
          "com_github_masterminds_sprig_v3": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_masterminds_sprig_v3",
              "importpath": "github.com/Masterminds/sprig/v3",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:eL2fZNezLomi0uOLqjQoN6BfsDD+fyLtgbJMAj9n6YA=",
              "replace": "",
              "version": "v3.2.3"
            }
          },
          "in_gopkg_ini_v1": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~in_gopkg_ini_v1",
              "importpath": "gopkg.in/ini.v1",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:LATuAqN/shcYAOkv3wl2L4rkaKqkcgTBQjOyYDvcPKI=",
              "replace": "",
              "version": "v1.66.6"
            }
          },
          "com_github_pulumi_pulumi_aws_sdk_v5": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pulumi_pulumi_aws_sdk_v5",
              "importpath": "github.com/pulumi/pulumi-aws/sdk/v5",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:QdJvPoUklXdNL8faCOuCrv7qmMNp68jiewbGH8ZboUU=",
              "replace": "",
              "version": "v5.42.0"
            }
          },
          "com_github_data_dog_go_sqlmock": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_data_dog_go_sqlmock",
              "importpath": "github.com/DATA-DOG/go-sqlmock",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Shsta01QNfFxHCfpW6YH2STWB0MudeXXEWMr20OEh60=",
              "replace": "",
              "version": "v1.5.0"
            }
          },
          "com_github_pachyderm_ohmyglob": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_pachyderm_ohmyglob",
              "importpath": "github.com/pachyderm/ohmyglob",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:BYlMmKAikMsokjseoeg/7ZIE5Z/kM7b54hIe6y2/n3c=",
              "replace": "",
              "version": "v0.0.0-20210308211843-d5b47775fc36"
            }
          },
          "com_github_jackc_pgpassfile": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_jackc_pgpassfile",
              "importpath": "github.com/jackc/pgpassfile",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=",
              "replace": "",
              "version": "v1.0.0"
            }
          },
          "com_google_cloud_go_compute": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_google_cloud_go_compute",
              "importpath": "cloud.google.com/go/compute",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:6sVlXXBmbd7jNX0Ipq0trII3e4n1/MsADLK6a+aiVlk=",
              "replace": "",
              "version": "v1.23.3"
            }
          },
          "com_github_muesli_termenv": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_muesli_termenv",
              "importpath": "github.com/muesli/termenv",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:UzuTb/+hhlBugQz28rpzey4ZuKcZ03MeKsoG7IJZIxs=",
              "replace": "",
              "version": "v0.15.1"
            }
          },
          "com_github_dlmiddlecote_sqlstats": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_dlmiddlecote_sqlstats",
              "importpath": "github.com/dlmiddlecote/sqlstats",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:gSU11YN23D/iY50A2zVYwgXgy072khatTsIW6UPjUtI=",
              "replace": "",
              "version": "v1.0.2"
            }
          },
          "com_github_apparentlymart_go_textseg_v13": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_apparentlymart_go_textseg_v13",
              "importpath": "github.com/apparentlymart/go-textseg/v13",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:Y+KvPE1NYz0xl601PVImeQfFyEy6iT90AvPUL1NNfNw=",
              "replace": "",
              "version": "v13.0.0"
            }
          },
          "com_github_go_openapi_jsonreference": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_go_openapi_jsonreference",
              "importpath": "github.com/go-openapi/jsonreference",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:3sVjiK66+uXK/6oQ8xgcRKcFgQ5KXa2KvnJRumpMGbE=",
              "replace": "",
              "version": "v0.20.2"
            }
          },
          "com_github_golang_groupcache": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository.bzl",
            "ruleClassName": "go_repository",
            "attributes": {
              "name": "gazelle~0.35.0~go_deps~com_github_golang_groupcache",
              "importpath": "github.com/golang/groupcache",
              "build_directives": [],
              "build_file_generation": "auto",
              "build_extra_args": [],
              "patches": [],
              "patch_args": [],
              "sum": "h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=",
              "replace": "",
              "version": "v0.0.0-20210331224755-41bb18bfe9da"
            }
          }
        },
        "moduleExtensionMetadata": {
          "explicitRootModuleDirectDeps": [
            "org_golang_google_grpc_cmd_protoc_gen_go_grpc",
            "com_github_alecthomas_jsonschema",
            "com_github_iancoleman_orderedmap",
            "com_github_iancoleman_strcase",
            "com_github_xeipuuv_gojsonpointer",
            "com_github_xeipuuv_gojsonreference",
            "com_github_xeipuuv_gojsonschema",
            "com_google_cloud_go_profiler",
            "com_google_cloud_go_storage",
            "com_github_azure_azure_sdk_for_go",
            "com_github_data_dog_go_sqlmock",
            "com_github_adrg_xdg",
            "com_github_aws_aws_lambda_go",
            "com_github_aws_aws_sdk_go",
            "com_github_c_bata_go_prompt",
            "com_github_cevaris_ordered_map",
            "com_github_chmduquesne_rollinghash",
            "com_github_chrusty_protoc_gen_jsonschema",
            "com_github_coreos_go_oidc",
            "com_github_determined_ai_determined_proto",
            "com_github_dexidp_dex",
            "com_github_dexidp_dex_api_v2",
            "com_github_dlmiddlecote_sqlstats",
            "com_github_docker_docker",
            "com_github_docker_go_connections",
            "com_github_docker_go_units",
            "com_github_dustin_go_humanize",
            "com_github_envoyproxy_protoc_gen_validate",
            "com_github_evanphx_json_patch",
            "com_github_fatih_camelcase",
            "com_github_fatih_color",
            "com_github_felixge_httpsnoop",
            "com_github_fsouza_go_dockerclient",
            "com_github_go_logr_zapr",
            "com_github_go_sql_driver_mysql",
            "com_github_golang_protobuf",
            "com_github_google_btree",
            "com_github_google_go_cmp",
            "com_github_google_gofuzz",
            "com_github_google_uuid",
            "com_github_gorilla_mux",
            "com_github_grpc_ecosystem_go_grpc_middleware",
            "com_github_grpc_ecosystem_go_grpc_prometheus",
            "com_github_grpc_ecosystem_grpc_gateway_v2",
            "com_github_gruntwork_io_terratest",
            "com_github_hanwen_go_fuse_v2",
            "com_github_hashicorp_golang_lru",
            "com_github_hashicorp_golang_lru_v2",
            "com_github_itchyny_gojq",
            "com_github_jackc_pgconn",
            "com_github_jackc_pgerrcode",
            "com_github_jackc_pgx_v4",
            "com_github_jmoiron_sqlx",
            "com_github_json_iterator_go",
            "com_github_juju_ansiterm",
            "com_github_klauspost_compress",
            "com_github_lib_pq",
            "com_github_mattn_go_isatty",
            "com_github_minio_minio_go_v6",
            "com_github_minio_minio_go_v7",
            "com_github_modern_go_reflect2",
            "com_github_opentracing_contrib_go_grpc",
            "com_github_opentracing_opentracing_go",
            "com_github_pachyderm_ohmyglob",
            "com_github_pachyderm_s2",
            "com_github_pkg_browser",
            "com_github_pkg_errors",
            "com_github_prometheus_client_golang",
            "com_github_prometheus_common",
            "com_github_prometheus_procfs",
            "com_github_pulumi_pulumi_aws_sdk_v5",
            "com_github_pulumi_pulumi_awsx_sdk",
            "com_github_pulumi_pulumi_eks_sdk",
            "com_github_pulumi_pulumi_kubernetes_sdk_v3",
            "com_github_pulumi_pulumi_postgresql_sdk_v3",
            "com_github_pulumi_pulumi_sdk_v3",
            "com_github_robfig_cron",
            "com_github_satori_go_uuid",
            "com_github_segmentio_analytics_go",
            "com_github_sirupsen_logrus",
            "com_github_spf13_cobra",
            "com_github_spf13_pflag",
            "com_github_stretchr_testify",
            "com_github_timewasted_go_accept_headers",
            "com_github_uber_jaeger_client_go",
            "com_github_vbauerster_mpb_v6",
            "com_github_wader_readline",
            "com_github_wcharczuk_go_chart",
            "com_github_zeebo_xxh3",
            "io_etcd_go_etcd_api_v3",
            "io_etcd_go_etcd_client_v3",
            "io_etcd_go_etcd_server_v3",
            "net_starlark_go",
            "org_uber_go_atomic",
            "org_uber_go_automaxprocs",
            "org_uber_go_zap",
            "dev_gocloud",
            "org_golang_x_crypto",
            "org_golang_x_exp",
            "org_golang_x_mod",
            "org_golang_x_net",
            "org_golang_x_oauth2",
            "org_golang_x_sync",
            "org_golang_x_sys",
            "org_golang_x_term",
            "org_golang_x_text",
            "org_golang_google_api",
            "org_golang_google_genproto_googleapis_rpc",
            "org_golang_google_grpc",
            "org_golang_google_protobuf",
            "in_gopkg_yaml_v3",
            "io_k8s_api",
            "io_k8s_apimachinery",
            "io_k8s_client_go",
            "io_k8s_klog_v2",
            "io_k8s_kubectl",
            "io_k8s_utils",
            "io_k8s_sigs_kind",
            "io_k8s_sigs_yaml",
            "com_github_alessio_shellescape",
            "com_github_fsnotify_fsnotify",
            "com_github_google_shlex",
            "com_github_opencontainers_image_spec"
          ],
          "explicitRootModuleDirectDevDeps": [],
          "useAllRepos": "NO"
        },
        "recordedRepoMappingEntries": [
          [
            "gazelle~0.35.0",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@gazelle~0.35.0//internal/bzlmod:non_module_deps.bzl%non_module_deps": {
      "general": {
        "bzlTransitiveDigest": "CutwFwqMqqjf4IGBbhjOhtKbvi6M2sgS4d0SzFO0kes=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "bazel_gazelle_is_bazel_module": {
            "bzlFile": "@@gazelle~0.35.0//internal:is_bazel_module.bzl",
            "ruleClassName": "is_bazel_module",
            "attributes": {
              "name": "gazelle~0.35.0~non_module_deps~bazel_gazelle_is_bazel_module",
              "is_bazel_module": true
            }
          },
          "bazel_gazelle_go_repository_tools": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository_tools.bzl",
            "ruleClassName": "go_repository_tools",
            "attributes": {
              "name": "gazelle~0.35.0~non_module_deps~bazel_gazelle_go_repository_tools",
              "go_cache": "@@gazelle~0.35.0~non_module_deps~bazel_gazelle_go_repository_cache//:go.env"
            }
          },
          "bazel_gazelle_go_repository_cache": {
            "bzlFile": "@@gazelle~0.35.0//internal:go_repository_cache.bzl",
            "ruleClassName": "go_repository_cache",
            "attributes": {
              "name": "gazelle~0.35.0~non_module_deps~bazel_gazelle_go_repository_cache",
              "go_sdk_name": "@rules_go~0.46.0~go_sdk~go_sdk",
              "go_env": {}
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "gazelle~0.35.0",
            "bazel_gazelle_go_repository_cache",
            "gazelle~0.35.0~non_module_deps~bazel_gazelle_go_repository_cache"
          ],
          [
            "gazelle~0.35.0",
            "go_host_compatible_sdk_label",
            "rules_go~0.46.0~go_sdk~go_host_compatible_sdk_label"
          ],
          [
            "rules_go~0.46.0~go_sdk~go_host_compatible_sdk_label",
            "go_sdk",
            "rules_go~0.46.0~go_sdk~go_sdk"
          ]
        ]
      }
    },
    "@@rules_go~0.46.0//go:extensions.bzl%go_sdk": {
      "os:linux,arch:amd64": {
        "bzlTransitiveDigest": "jzrF1nNjy3IFXXT/8q4rFvr7D3n7Yq4c1nkajUqSQxs=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "pachyderm__download_0_darwin_arm64": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~pachyderm__download_0_darwin_arm64",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.22.1"
            }
          },
          "pachyderm__download_0_darwin_amd64": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~pachyderm__download_0_darwin_amd64",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.22.1"
            }
          },
          "pachyderm__download_0_windows_amd64": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~pachyderm__download_0_windows_amd64",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.22.1"
            }
          },
          "pachyderm__download_0_windows_arm64": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~pachyderm__download_0_windows_arm64",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.22.1"
            }
          },
          "rules_go__download_0_darwin_arm64": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~rules_go__download_0_darwin_arm64",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.1"
            }
          },
          "go_host_compatible_sdk_label": {
            "bzlFile": "@@rules_go~0.46.0//go/private:extensions.bzl",
            "ruleClassName": "host_compatible_toolchain",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~go_host_compatible_sdk_label",
              "toolchain": "@go_sdk//:ROOT"
            }
          },
          "rules_go__download_0_darwin_amd64": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~rules_go__download_0_darwin_amd64",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.1"
            }
          },
          "go_toolchains": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_multiple_toolchains",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~go_toolchains",
              "prefixes": [
                "_0000_go_sdk_",
                "_0001_pachyderm__download_0_darwin_amd64_",
                "_0002_pachyderm__download_0_darwin_arm64_",
                "_0003_pachyderm__download_0_linux_arm64_",
                "_0004_pachyderm__download_0_windows_amd64_",
                "_0005_pachyderm__download_0_windows_arm64_",
                "_0006_go_default_sdk_",
                "_0007_rules_go__download_0_darwin_amd64_",
                "_0008_rules_go__download_0_darwin_arm64_",
                "_0009_rules_go__download_0_linux_arm64_",
                "_0010_rules_go__download_0_windows_amd64_",
                "_0011_rules_go__download_0_windows_arm64_"
              ],
              "geese": [
                "",
                "darwin",
                "darwin",
                "linux",
                "windows",
                "windows",
                "",
                "darwin",
                "darwin",
                "linux",
                "windows",
                "windows"
              ],
              "goarchs": [
                "",
                "amd64",
                "arm64",
                "arm64",
                "amd64",
                "arm64",
                "",
                "amd64",
                "arm64",
                "arm64",
                "amd64",
                "arm64"
              ],
              "sdk_repos": [
                "go_sdk",
                "pachyderm__download_0_darwin_amd64",
                "pachyderm__download_0_darwin_arm64",
                "pachyderm__download_0_linux_arm64",
                "pachyderm__download_0_windows_amd64",
                "pachyderm__download_0_windows_arm64",
                "go_default_sdk",
                "rules_go__download_0_darwin_amd64",
                "rules_go__download_0_darwin_arm64",
                "rules_go__download_0_linux_arm64",
                "rules_go__download_0_windows_amd64",
                "rules_go__download_0_windows_arm64"
              ],
              "sdk_types": [
                "remote",
                "remote",
                "remote",
                "remote",
                "remote",
                "remote",
                "remote",
                "remote",
                "remote",
                "remote",
                "remote",
                "remote"
              ],
              "sdk_versions": [
                "1.22.1",
                "1.22.1",
                "1.22.1",
                "1.22.1",
                "1.22.1",
                "1.22.1",
                "1.21.1",
                "1.21.1",
                "1.21.1",
                "1.21.1",
                "1.21.1",
                "1.21.1"
              ]
            }
          },
          "go_sdk": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~go_sdk",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "experiments": [],
              "patches": [],
              "patch_strip": 0,
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.22.1",
              "strip_prefix": "go"
            }
          },
          "pachyderm__download_0_linux_arm64": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~pachyderm__download_0_linux_arm64",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.22.1"
            }
          },
          "io_bazel_rules_nogo": {
            "bzlFile": "@@rules_go~0.46.0//go/private:nogo.bzl",
            "ruleClassName": "go_register_nogo",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~io_bazel_rules_nogo",
              "nogo": "'@@//:nogo'",
              "includes": [
                "'@@//:__subpackages__'"
              ],
              "excludes": []
            }
          },
          "rules_go__download_0_windows_arm64": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~rules_go__download_0_windows_arm64",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.1"
            }
          },
          "rules_go__download_0_linux_arm64": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~rules_go__download_0_linux_arm64",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.1"
            }
          },
          "go_default_sdk": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~go_default_sdk",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "experiments": [],
              "patches": [],
              "patch_strip": 0,
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.1",
              "strip_prefix": "go"
            }
          },
          "rules_go__download_0_windows_amd64": {
            "bzlFile": "@@rules_go~0.46.0//go/private:sdk.bzl",
            "ruleClassName": "go_download_sdk_rule",
            "attributes": {
              "name": "rules_go~0.46.0~go_sdk~rules_go__download_0_windows_amd64",
              "goos": "",
              "goarch": "",
              "sdks": {},
              "urls": [
                "https://dl.google.com/go/{}"
              ],
              "version": "1.21.1"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "bazel_features~1.1.1",
            "bazel_features_globals",
            "bazel_features~1.1.1~version_extension~bazel_features_globals"
          ],
          [
            "bazel_features~1.1.1",
            "bazel_features_version",
            "bazel_features~1.1.1~version_extension~bazel_features_version"
          ],
          [
            "rules_go~0.46.0",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_go~0.46.0",
            "io_bazel_rules_go",
            "rules_go~0.46.0"
          ],
          [
            "rules_go~0.46.0",
            "io_bazel_rules_go_bazel_features",
            "bazel_features~1.1.1"
          ]
        ]
      }
    },
    "@@rules_java~7.1.0//java:extensions.bzl%toolchains": {
      "general": {
        "bzlTransitiveDigest": "D02GmifxnV/IhYgspsJMDZ/aE8HxAjXgek5gi6FSto4=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "remotejdk21_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_s390x_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_s390x//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk21_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk21_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "2a7a99a3ea263dbd8d32a67d1e6e363ba8b25c645c826f5e167a02bbafaff1fa",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "314b04568ec0ae9b36ba03c9cbd42adc9e1265f74678923b19297d66eb84dcca",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remote_java_tools_windows": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_windows",
              "sha256": "c5c70c214a350f12cbf52da8270fa43ba629b795f3dd328028a38f8f0d39c2a1",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_windows-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_windows-v13.1.zip"
              ]
            }
          },
          "remotejdk11_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "43408193ce2fa0862819495b5ae8541085b95660153f2adcf91a52d3a1710e83",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-win_x64.zip"
              ]
            }
          },
          "remotejdk11_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "54174439f2b3fddd11f1048c397fe7bb45d4c9d66d452d6889b013d04d21c4de",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-linux_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "b9482f2304a1a68a614dfacddcf29569a72f0fac32e6c74f83dc1b9a157b8340",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_s390x_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_s390x_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_s390x//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:s390x\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_s390x//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux//:jdk\",\n)\n"
            }
          },
          "remotejdk11_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "bcaab11cfe586fae7583c6d9d311c64384354fb2638eb9a012eca4c3f1a1d9fd",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_win_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win_arm64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "b8a28e6e767d90acf793ea6f5bed0bb595ba0ba5ebdf8b99f395266161e53ec2",
              "strip_prefix": "jdk-11.0.13+8",
              "urls": [
                "https://mirror.bazel.build/aka.ms/download-jdk/microsoft-jdk-11.0.13.8.1-windows-aarch64.zip"
              ]
            }
          },
          "remotejdk17_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "640453e8afe8ffe0fb4dceb4535fb50db9c283c64665eebb0ba68b19e65f4b1f",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk21_macos": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "9639b87db586d0c89f7a9892ae47f421e442c64b97baebdff31788fbe23265bd",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-macosx_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-macosx_x64.tar.gz"
              ]
            }
          },
          "remotejdk21_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk17_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk17_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "192f2afca57701de6ec496234f7e45d971bf623ff66b8ee4a5c81582054e5637",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_x64.zip"
              ]
            }
          },
          "remotejdk11_macos_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_ppc64le_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_ppc64le_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_ppc64le//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_ppc64le//:jdk\",\n)\n"
            }
          },
          "remotejdk21_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "0c0eadfbdc47a7ca64aeab51b9c061f71b6e4d25d2d87674512e9b6387e9e3a6",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_x64.tar.gz"
              ]
            }
          },
          "remote_java_tools_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_linux",
              "sha256": "d134da9b04c9023fb6e56a5d4bffccee73f7bc9572ddc4e747778dacccd7a5a7",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_linux-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_linux-v13.1.zip"
              ]
            }
          },
          "remotejdk21_win": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_win",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "e9959d500a0d9a7694ac243baf657761479da132f0f94720cbffd092150bd802",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-win_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-win_x64.zip",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-win_x64.zip"
              ]
            }
          },
          "remotejdk21_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 21,\n)\n",
              "sha256": "1fb64b8036c5d463d8ab59af06bf5b6b006811e6012e3b0eb6bccf57f1c55835",
              "strip_prefix": "zulu21.28.85-ca-jdk21.0.0-linux_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu21.28.85-ca-jdk21.0.0-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk11_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_s390x",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a58fc0361966af0a5d5a31a2d8a208e3c9bb0f54f345596fd80b99ea9a39788b",
              "strip_prefix": "jdk-11.0.15+10",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz",
                "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.15_10.tar.gz"
              ]
            }
          },
          "remotejdk17_linux_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "6531cef61e416d5a7b691555c8cf2bdff689201b8a001ff45ab6740062b44313",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-linux_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk17_win_arm64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win_arm64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win_arm64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win_arm64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a34b404f87a08a61148b38e1416d837189e1df7a040d949e743633daf4695a3c",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-linux_x64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_x64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-linux_x64.tar.gz"
              ]
            }
          },
          "remotejdk11_macos_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:macos\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_macos//:jdk\",\n)\n"
            }
          },
          "remotejdk17_linux_ppc64le_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_ppc64le_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_ppc64le//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:ppc\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_linux_ppc64le//:jdk\",\n)\n"
            }
          },
          "remotejdk17_win_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win_arm64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "6802c99eae0d788e21f52d03cab2e2b3bf42bc334ca03cbf19f71eb70ee19f85",
              "strip_prefix": "zulu17.44.53-ca-jdk17.0.8.1-win_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_aarch64.zip",
                "https://cdn.azul.com/zulu/bin/zulu17.44.53-ca-jdk17.0.8.1-win_aarch64.zip"
              ]
            }
          },
          "remote_java_tools_darwin_arm64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_darwin_arm64",
              "sha256": "dab5bb87ec43e980faea6e1cec14bafb217b8e2f5346f53aa784fd715929a930",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_darwin_arm64-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_darwin_arm64-v13.1.zip"
              ]
            }
          },
          "remotejdk17_linux_ppc64le": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_ppc64le",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "00a4c07603d0218cd678461b5b3b7e25b3253102da4022d31fc35907f21a2efd",
              "strip_prefix": "jdk-17.0.8.1+1",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz",
                "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_ppc64le_linux_hotspot_17.0.8.1_1.tar.gz"
              ]
            }
          },
          "remotejdk21_linux_aarch64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_linux_aarch64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_aarch64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:linux\", \"@platforms//cpu:aarch64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_linux_aarch64//:jdk\",\n)\n"
            }
          },
          "remotejdk11_win_arm64_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_win_arm64_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_11\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"11\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win_arm64//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:arm64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk11_win_arm64//:jdk\",\n)\n"
            }
          },
          "local_jdk": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:local_java_repository.bzl",
            "ruleClassName": "_local_java_repository_rule",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~local_jdk",
              "java_home": "",
              "version": "",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = {RUNTIME_VERSION},\n)\n"
            }
          },
          "remote_java_tools_darwin_x86_64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools_darwin_x86_64",
              "sha256": "0db40d8505a2b65ef0ed46e4256757807db8162f7acff16225be57c1d5726dbc",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools_darwin_x86_64-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools_darwin_x86_64-v13.1.zip"
              ]
            }
          },
          "remote_java_tools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remote_java_tools",
              "sha256": "286bdbbd66e616fc4ed3f90101418729a73baa7e8c23a98ffbef558f74c0ad14",
              "urls": [
                "https://mirror.bazel.build/bazel_java_tools/releases/java/v13.1/java_tools-v13.1.zip",
                "https://github.com/bazelbuild/java_tools/releases/download/java_v13.1/java_tools-v13.1.zip"
              ]
            }
          },
          "remotejdk17_linux_s390x": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_linux_s390x",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 17,\n)\n",
              "sha256": "ffacba69c6843d7ca70d572489d6cc7ab7ae52c60f0852cedf4cf0d248b6fc37",
              "strip_prefix": "jdk-17.0.8.1+1",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz",
                "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jdk_s390x_linux_hotspot_17.0.8.1_1.tar.gz"
              ]
            }
          },
          "remotejdk17_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk17_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_17\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"17\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk17_win//:jdk\",\n)\n"
            }
          },
          "remotejdk11_linux_ppc64le": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_linux_ppc64le",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "a8fba686f6eb8ae1d1a9566821dbd5a85a1108b96ad857fdbac5c1e4649fc56f",
              "strip_prefix": "jdk-11.0.15+10",
              "urls": [
                "https://mirror.bazel.build/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz",
                "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15+10/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.15_10.tar.gz"
              ]
            }
          },
          "remotejdk11_macos_aarch64": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk11_macos_aarch64",
              "build_file_content": "load(\"@rules_java//java:defs.bzl\", \"java_runtime\")\n\npackage(default_visibility = [\"//visibility:public\"])\n\nexports_files([\"WORKSPACE\", \"BUILD.bazel\"])\n\nfilegroup(\n    name = \"jre\",\n    srcs = glob(\n        [\n            \"jre/bin/**\",\n            \"jre/lib/**\",\n        ],\n        allow_empty = True,\n        # In some configurations, Java browser plugin is considered harmful and\n        # common antivirus software blocks access to npjp2.dll interfering with Bazel,\n        # so do not include it in JRE on Windows.\n        exclude = [\"jre/bin/plugin2/**\"],\n    ),\n)\n\nfilegroup(\n    name = \"jdk-bin\",\n    srcs = glob(\n        [\"bin/**\"],\n        # The JDK on Windows sometimes contains a directory called\n        # \"%systemroot%\", which is not a valid label.\n        exclude = [\"**/*%*/**\"],\n    ),\n)\n\n# This folder holds security policies.\nfilegroup(\n    name = \"jdk-conf\",\n    srcs = glob(\n        [\"conf/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-include\",\n    srcs = glob(\n        [\"include/**\"],\n        allow_empty = True,\n    ),\n)\n\nfilegroup(\n    name = \"jdk-lib\",\n    srcs = glob(\n        [\"lib/**\", \"release\"],\n        allow_empty = True,\n        exclude = [\n            \"lib/missioncontrol/**\",\n            \"lib/visualvm/**\",\n        ],\n    ),\n)\n\njava_runtime(\n    name = \"jdk\",\n    srcs = [\n        \":jdk-bin\",\n        \":jdk-conf\",\n        \":jdk-include\",\n        \":jdk-lib\",\n        \":jre\",\n    ],\n    # Provide the 'java` binary explicitly so that the correct path is used by\n    # Bazel even when the host platform differs from the execution platform.\n    # Exactly one of the two globs will be empty depending on the host platform.\n    # When --incompatible_disallow_empty_glob is enabled, each individual empty\n    # glob will fail without allow_empty = True, even if the overall result is\n    # non-empty.\n    java = glob([\"bin/java.exe\", \"bin/java\"], allow_empty = True)[0],\n    version = 11,\n)\n",
              "sha256": "7632bc29f8a4b7d492b93f3bc75a7b61630894db85d136456035ab2a24d38885",
              "strip_prefix": "zulu11.66.15-ca-jdk11.0.20-macosx_aarch64",
              "urls": [
                "https://mirror.bazel.build/cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_aarch64.tar.gz",
                "https://cdn.azul.com/zulu/bin/zulu11.66.15-ca-jdk11.0.20-macosx_aarch64.tar.gz"
              ]
            }
          },
          "remotejdk21_win_toolchain_config_repo": {
            "bzlFile": "@@rules_java~7.1.0//toolchains:remote_java_repository.bzl",
            "ruleClassName": "_toolchain_config",
            "attributes": {
              "name": "rules_java~7.1.0~toolchains~remotejdk21_win_toolchain_config_repo",
              "build_file": "\nconfig_setting(\n    name = \"prefix_version_setting\",\n    values = {\"java_runtime_version\": \"remotejdk_21\"},\n    visibility = [\"//visibility:private\"],\n)\nconfig_setting(\n    name = \"version_setting\",\n    values = {\"java_runtime_version\": \"21\"},\n    visibility = [\"//visibility:private\"],\n)\nalias(\n    name = \"version_or_prefix_version_setting\",\n    actual = select({\n        \":version_setting\": \":version_setting\",\n        \"//conditions:default\": \":prefix_version_setting\",\n    }),\n    visibility = [\"//visibility:private\"],\n)\ntoolchain(\n    name = \"toolchain\",\n    target_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win//:jdk\",\n)\ntoolchain(\n    name = \"bootstrap_runtime_toolchain\",\n    # These constraints are not required for correctness, but prevent fetches of remote JDK for\n    # different architectures. As every Java compilation toolchain depends on a bootstrap runtime in\n    # the same configuration, this constraint will not result in toolchain resolution failures.\n    exec_compatible_with = [\"@platforms//os:windows\", \"@platforms//cpu:x86_64\"],\n    target_settings = [\":version_or_prefix_version_setting\"],\n    toolchain_type = \"@bazel_tools//tools/jdk:bootstrap_runtime_toolchain_type\",\n    toolchain = \"@remotejdk21_win//:jdk\",\n)\n"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_java~7.1.0",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_java~7.1.0",
            "remote_java_tools",
            "rules_java~7.1.0~toolchains~remote_java_tools"
          ]
        ]
      }
    },
    "@@rules_oci~1.5.1//oci:extensions.bzl%oci": {
      "general": {
        "bzlTransitiveDigest": "nG275aBemoE385i0uvJfW/e7iB/rzLHvNIViD0GhD7o=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "zot_arm64": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~zot_arm64",
              "target_name": "zot_arm64",
              "scheme": "https",
              "registry": "ghcr.io",
              "repository": "project-zot/zot-linux-arm64",
              "identifier": "sha256:370582183d29bf3b3604251d63cda48cb44c55e9622c8c13c605cba5f1b6cb21",
              "platforms": {},
              "platform": "@@rules_oci~1.5.1//oci:zot_arm64_single",
              "bzlmod_repository": "zot_arm64",
              "reproducible": true
            }
          },
          "oci_crane_registry_toolchains": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:toolchains_repo.bzl",
            "ruleClassName": "toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_crane_registry_toolchains",
              "toolchain_type": "@rules_oci//oci:registry_toolchain_type",
              "toolchain": "@oci_crane_{platform}//:registry_toolchain"
            }
          },
          "copy_to_directory_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~copy_to_directory_windows_amd64",
              "platform": "windows_amd64"
            }
          },
          "jq_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~jq_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "1.7"
            }
          },
          "copy_to_directory_freebsd_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~copy_to_directory_freebsd_amd64",
              "platform": "freebsd_amd64"
            }
          },
          "oci_crane_linux_arm64": {
            "bzlFile": "@@rules_oci~1.5.1//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_crane_linux_arm64",
              "platform": "linux_arm64",
              "crane_version": "v0.17.0"
            }
          },
          "jq_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~jq_linux_arm64",
              "platform": "linux_arm64",
              "version": "1.7"
            }
          },
          "coreutils_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~coreutils_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "0.0.23"
            }
          },
          "copy_to_directory_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~copy_to_directory_linux_arm64",
              "platform": "linux_arm64"
            }
          },
          "oci_crane_linux_amd64": {
            "bzlFile": "@@rules_oci~1.5.1//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_crane_linux_amd64",
              "platform": "linux_amd64",
              "crane_version": "v0.17.0"
            }
          },
          "distroless_linux_arm64_v8": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~distroless_linux_arm64_v8",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/static-debian12",
              "identifier": "sha256:39ae7f0201fee13b777a3e4a5a9326a8889269172c8b4f4289d9f19c831f45f4",
              "platform": "linux/arm64/v8",
              "target_name": "distroless_linux_arm64_v8",
              "config_path": "@@rules_oci~1.5.1~oci~oci_auth_config//:standard_authorization_config_path"
            }
          },
          "coreutils_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~coreutils_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "0.0.23"
            }
          },
          "coreutils_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~coreutils_linux_arm64",
              "platform": "linux_arm64",
              "version": "0.0.23"
            }
          },
          "yq_linux_s390x": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~yq_linux_s390x",
              "platform": "linux_s390x",
              "version": "4.25.2"
            }
          },
          "yq": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_host_alias_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~yq"
            }
          },
          "oci_crane_darwin_arm64": {
            "bzlFile": "@@rules_oci~1.5.1//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_crane_darwin_arm64",
              "platform": "darwin_arm64",
              "crane_version": "v0.17.0"
            }
          },
          "jq_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~jq_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "1.7"
            }
          },
          "yq_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~yq_darwin_amd64",
              "platform": "darwin_amd64",
              "version": "4.25.2"
            }
          },
          "oci_crane_linux_i386": {
            "bzlFile": "@@rules_oci~1.5.1//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_crane_linux_i386",
              "platform": "linux_i386",
              "crane_version": "v0.17.0"
            }
          },
          "distroless_linux_amd64": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~distroless_linux_amd64",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/static-debian12",
              "identifier": "sha256:39ae7f0201fee13b777a3e4a5a9326a8889269172c8b4f4289d9f19c831f45f4",
              "platform": "linux/amd64",
              "target_name": "distroless_linux_amd64",
              "config_path": "@@rules_oci~1.5.1~oci~oci_auth_config//:standard_authorization_config_path"
            }
          },
          "pause": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~pause",
              "target_name": "pause",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "google-containers/pause",
              "identifier": "sha256:927d98197ec1141a368550822d18fa1c60bdae27b78b0c004f705f548c07814f",
              "platforms": {
                "@@platforms//cpu:x86_64": "@pause_linux_amd64",
                "@@platforms//cpu:arm64": "@pause_linux_arm64"
              },
              "bzlmod_repository": "pause",
              "reproducible": true
            }
          },
          "zot_amd64": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~zot_amd64",
              "target_name": "zot_amd64",
              "scheme": "https",
              "registry": "ghcr.io",
              "repository": "project-zot/zot-linux-amd64",
              "identifier": "sha256:e5a5be113155d1e0032e5d669888064209da95c107497524f8d4eac8ed50b378",
              "platforms": {},
              "platform": "@@rules_oci~1.5.1//oci:zot_amd64_single",
              "bzlmod_repository": "zot_amd64",
              "reproducible": true
            }
          },
          "oci_crane_windows_armv6": {
            "bzlFile": "@@rules_oci~1.5.1//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_crane_windows_armv6",
              "platform": "windows_armv6",
              "crane_version": "v0.17.0"
            }
          },
          "oci_crane_toolchains": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:toolchains_repo.bzl",
            "ruleClassName": "toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_crane_toolchains",
              "toolchain_type": "@rules_oci//oci:crane_toolchain_type",
              "toolchain": "@oci_crane_{platform}//:crane_toolchain"
            }
          },
          "copy_to_directory_darwin_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~copy_to_directory_darwin_amd64",
              "platform": "darwin_amd64"
            }
          },
          "yq_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~yq_toolchains",
              "user_repository_name": "yq"
            }
          },
          "oci_crane_windows_amd64": {
            "bzlFile": "@@rules_oci~1.5.1//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_crane_windows_amd64",
              "platform": "windows_amd64",
              "crane_version": "v0.17.0"
            }
          },
          "oci_crane_linux_s390x": {
            "bzlFile": "@@rules_oci~1.5.1//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_crane_linux_s390x",
              "platform": "linux_s390x",
              "crane_version": "v0.17.0"
            }
          },
          "pause_linux_amd64": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~pause_linux_amd64",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "google-containers/pause",
              "identifier": "sha256:927d98197ec1141a368550822d18fa1c60bdae27b78b0c004f705f548c07814f",
              "platform": "linux/amd64",
              "target_name": "pause_linux_amd64",
              "config_path": "@@rules_oci~1.5.1~oci~oci_auth_config//:standard_authorization_config_path"
            }
          },
          "jq": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_host_alias_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~jq"
            }
          },
          "oci_crane_darwin_amd64": {
            "bzlFile": "@@rules_oci~1.5.1//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_crane_darwin_amd64",
              "platform": "darwin_amd64",
              "crane_version": "v0.17.0"
            }
          },
          "copy_to_directory_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~copy_to_directory_linux_amd64",
              "platform": "linux_amd64"
            }
          },
          "coreutils_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~coreutils_linux_amd64",
              "platform": "linux_amd64",
              "version": "0.0.23"
            }
          },
          "yq_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~yq_linux_amd64",
              "platform": "linux_amd64",
              "version": "4.25.2"
            }
          },
          "oci_crane_linux_armv6": {
            "bzlFile": "@@rules_oci~1.5.1//oci:repositories.bzl",
            "ruleClassName": "crane_repositories",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_crane_linux_armv6",
              "platform": "linux_armv6",
              "crane_version": "v0.17.0"
            }
          },
          "copy_to_directory_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~copy_to_directory_darwin_arm64",
              "platform": "darwin_arm64"
            }
          },
          "coreutils_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~coreutils_toolchains",
              "user_repository_name": "coreutils"
            }
          },
          "pause_linux_arm64": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~pause_linux_arm64",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "google-containers/pause",
              "identifier": "sha256:927d98197ec1141a368550822d18fa1c60bdae27b78b0c004f705f548c07814f",
              "platform": "linux/arm64",
              "target_name": "pause_linux_arm64",
              "config_path": "@@rules_oci~1.5.1~oci~oci_auth_config//:standard_authorization_config_path"
            }
          },
          "jq_linux_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~jq_linux_amd64",
              "platform": "linux_amd64",
              "version": "1.7"
            }
          },
          "zot_arm64_single": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~zot_arm64_single",
              "scheme": "https",
              "registry": "ghcr.io",
              "repository": "project-zot/zot-linux-arm64",
              "identifier": "sha256:370582183d29bf3b3604251d63cda48cb44c55e9622c8c13c605cba5f1b6cb21",
              "target_name": "zot_arm64_single",
              "config_path": "@@rules_oci~1.5.1~oci~oci_auth_config//:standard_authorization_config_path"
            }
          },
          "zot_amd64_single": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:pull.bzl",
            "ruleClassName": "oci_pull",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~zot_amd64_single",
              "scheme": "https",
              "registry": "ghcr.io",
              "repository": "project-zot/zot-linux-amd64",
              "identifier": "sha256:e5a5be113155d1e0032e5d669888064209da95c107497524f8d4eac8ed50b378",
              "target_name": "zot_amd64_single",
              "config_path": "@@rules_oci~1.5.1~oci~oci_auth_config//:standard_authorization_config_path"
            }
          },
          "yq_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~yq_windows_amd64",
              "platform": "windows_amd64",
              "version": "4.25.2"
            }
          },
          "distroless": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:pull.bzl",
            "ruleClassName": "oci_alias",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~distroless",
              "target_name": "distroless",
              "scheme": "https",
              "registry": "gcr.io",
              "repository": "distroless/static-debian12",
              "identifier": "sha256:39ae7f0201fee13b777a3e4a5a9326a8889269172c8b4f4289d9f19c831f45f4",
              "platforms": {
                "@@platforms//cpu:x86_64": "@distroless_linux_amd64",
                "@@platforms//cpu:arm64": "@distroless_linux_arm64_v8"
              },
              "bzlmod_repository": "distroless",
              "reproducible": true
            }
          },
          "jq_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~jq_windows_amd64",
              "platform": "windows_amd64",
              "version": "1.7"
            }
          },
          "yq_linux_ppc64le": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~yq_linux_ppc64le",
              "platform": "linux_ppc64le",
              "version": "4.25.2"
            }
          },
          "jq_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:jq_toolchain.bzl",
            "ruleClassName": "jq_toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~jq_toolchains",
              "user_repository_name": "jq"
            }
          },
          "copy_to_directory_toolchains": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:copy_to_directory_toolchain.bzl",
            "ruleClassName": "copy_to_directory_toolchains_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~copy_to_directory_toolchains",
              "user_repository_name": "copy_to_directory"
            }
          },
          "yq_darwin_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~yq_darwin_arm64",
              "platform": "darwin_arm64",
              "version": "4.25.2"
            }
          },
          "oci_auth_config": {
            "bzlFile": "@@rules_oci~1.5.1//oci/private:auth_config_locator.bzl",
            "ruleClassName": "oci_auth_config_locator",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~oci_auth_config"
            }
          },
          "coreutils_windows_amd64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:coreutils_toolchain.bzl",
            "ruleClassName": "coreutils_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~coreutils_windows_amd64",
              "platform": "windows_amd64",
              "version": "0.0.23"
            }
          },
          "yq_linux_arm64": {
            "bzlFile": "@@aspect_bazel_lib~2.5.0//lib/private:yq_toolchain.bzl",
            "ruleClassName": "yq_platform_repo",
            "attributes": {
              "name": "rules_oci~1.5.1~oci~yq_linux_arm64",
              "platform": "linux_arm64",
              "version": "4.25.2"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "aspect_bazel_lib~2.5.0",
            "bazel_tools",
            "bazel_tools"
          ],
          [
            "rules_oci~1.5.1",
            "aspect_bazel_lib",
            "aspect_bazel_lib~2.5.0"
          ],
          [
            "rules_oci~1.5.1",
            "bazel_skylib",
            "bazel_skylib~1.5.0"
          ]
        ]
      }
    },
    "@@rules_python~0.27.1//python/extensions:python.bzl%python": {
      "general": {
        "bzlTransitiveDigest": "D8GlXPYKVucJ4rJudBSV8SknY8+MxXTmY8NlLbIkS7U=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "python_3_11_s390x-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.27.1//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.27.1~python2~python_3_11_s390x-unknown-linux-gnu",
              "sha256": "f9f19823dba3209cedc4647b00f46ed0177242917db20fb7fb539970e384531c",
              "patches": [],
              "platform": "s390x-unknown-linux-gnu",
              "python_version": "3.11.6",
              "release_filename": "20231002/cpython-3.11.6+20231002-s390x-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20231002/cpython-3.11.6+20231002-s390x-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_11": {
            "bzlFile": "@@rules_python~0.27.1//python/private:toolchains_repo.bzl",
            "ruleClassName": "toolchain_aliases",
            "attributes": {
              "name": "rules_python~0.27.1~python2~python_3_11",
              "python_version": "3.11.6",
              "user_repository_name": "python_3_11",
              "platforms": [
                "aarch64-apple-darwin",
                "aarch64-unknown-linux-gnu",
                "ppc64le-unknown-linux-gnu",
                "s390x-unknown-linux-gnu",
                "x86_64-apple-darwin",
                "x86_64-pc-windows-msvc",
                "x86_64-unknown-linux-gnu"
              ]
            }
          },
          "python_3_11_aarch64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.27.1//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.27.1~python2~python_3_11_aarch64-unknown-linux-gnu",
              "sha256": "3e26a672df17708c4dc928475a5974c3fb3a34a9b45c65fb4bd1e50504cc84ec",
              "patches": [],
              "platform": "aarch64-unknown-linux-gnu",
              "python_version": "3.11.6",
              "release_filename": "20231002/cpython-3.11.6+20231002-aarch64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20231002/cpython-3.11.6+20231002-aarch64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_11_aarch64-apple-darwin": {
            "bzlFile": "@@rules_python~0.27.1//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.27.1~python2~python_3_11_aarch64-apple-darwin",
              "sha256": "916c35125b5d8323a21526d7a9154ca626453f63d0878e95b9f613a95006c990",
              "patches": [],
              "platform": "aarch64-apple-darwin",
              "python_version": "3.11.6",
              "release_filename": "20231002/cpython-3.11.6+20231002-aarch64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20231002/cpython-3.11.6+20231002-aarch64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_11_ppc64le-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.27.1//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.27.1~python2~python_3_11_ppc64le-unknown-linux-gnu",
              "sha256": "7937035f690a624dba4d014ffd20c342e843dd46f89b0b0a1e5726b85deb8eaf",
              "patches": [],
              "platform": "ppc64le-unknown-linux-gnu",
              "python_version": "3.11.6",
              "release_filename": "20231002/cpython-3.11.6+20231002-ppc64le-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20231002/cpython-3.11.6+20231002-ppc64le-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_11_x86_64-apple-darwin": {
            "bzlFile": "@@rules_python~0.27.1//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.27.1~python2~python_3_11_x86_64-apple-darwin",
              "sha256": "178cb1716c2abc25cb56ae915096c1a083e60abeba57af001996e8bc6ce1a371",
              "patches": [],
              "platform": "x86_64-apple-darwin",
              "python_version": "3.11.6",
              "release_filename": "20231002/cpython-3.11.6+20231002-x86_64-apple-darwin-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20231002/cpython-3.11.6+20231002-x86_64-apple-darwin-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "pythons_hub": {
            "bzlFile": "@@rules_python~0.27.1//python/private/bzlmod:pythons_hub.bzl",
            "ruleClassName": "hub_repo",
            "attributes": {
              "name": "rules_python~0.27.1~python2~pythons_hub",
              "default_python_version": "3.11",
              "toolchain_prefixes": [
                "_0000_python_3_11_"
              ],
              "toolchain_python_versions": [
                "3.11"
              ],
              "toolchain_set_python_version_constraints": [
                "False"
              ],
              "toolchain_user_repository_names": [
                "python_3_11"
              ]
            }
          },
          "python_versions": {
            "bzlFile": "@@rules_python~0.27.1//python/private:toolchains_repo.bzl",
            "ruleClassName": "multi_toolchain_aliases",
            "attributes": {
              "name": "rules_python~0.27.1~python2~python_versions",
              "python_versions": {
                "3.11": "python_3_11"
              }
            }
          },
          "python_3_11_x86_64-pc-windows-msvc": {
            "bzlFile": "@@rules_python~0.27.1//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.27.1~python2~python_3_11_x86_64-pc-windows-msvc",
              "sha256": "3933545e6d41462dd6a47e44133ea40995bc6efeed8c2e4cbdf1a699303e95ea",
              "patches": [],
              "platform": "x86_64-pc-windows-msvc",
              "python_version": "3.11.6",
              "release_filename": "20231002/cpython-3.11.6+20231002-x86_64-pc-windows-msvc-shared-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20231002/cpython-3.11.6+20231002-x86_64-pc-windows-msvc-shared-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          },
          "python_3_11_x86_64-unknown-linux-gnu": {
            "bzlFile": "@@rules_python~0.27.1//python:repositories.bzl",
            "ruleClassName": "python_repository",
            "attributes": {
              "name": "rules_python~0.27.1~python2~python_3_11_x86_64-unknown-linux-gnu",
              "sha256": "ee37a7eae6e80148c7e3abc56e48a397c1664f044920463ad0df0fc706eacea8",
              "patches": [],
              "platform": "x86_64-unknown-linux-gnu",
              "python_version": "3.11.6",
              "release_filename": "20231002/cpython-3.11.6+20231002-x86_64-unknown-linux-gnu-install_only.tar.gz",
              "urls": [
                "https://github.com/indygreg/python-build-standalone/releases/download/20231002/cpython-3.11.6+20231002-x86_64-unknown-linux-gnu-install_only.tar.gz"
              ],
              "distutils_content": "",
              "strip_prefix": "python",
              "coverage_tool": "",
              "ignore_root_user_error": false
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_python~0.27.1",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    },
    "@@rules_python~0.27.1//python/private/bzlmod:internal_deps.bzl%internal_deps": {
      "general": {
        "bzlTransitiveDigest": "8/HoRrt4Kr/lkiQu5uQtl4xnLy47KJQnZ92CuRmTPj4=",
        "accumulatedFileDigests": {},
        "envVariables": {},
        "generatedRepoSpecs": {
          "pypi__wheel": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__wheel",
              "url": "https://files.pythonhosted.org/packages/b8/8b/31273bf66016be6ad22bb7345c37ff350276cfd46e389a0c2ac5da9d9073/wheel-0.41.2-py3-none-any.whl",
              "sha256": "75909db2664838d015e3d9139004ee16711748a52c8f336b52882266540215d8",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__click": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__click",
              "url": "https://files.pythonhosted.org/packages/00/2e/d53fa4befbf2cfa713304affc7ca780ce4fc1fd8710527771b58311a3229/click-8.1.7-py3-none-any.whl",
              "sha256": "ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__importlib_metadata": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__importlib_metadata",
              "url": "https://files.pythonhosted.org/packages/cc/37/db7ba97e676af155f5fcb1a35466f446eadc9104e25b83366e8088c9c926/importlib_metadata-6.8.0-py3-none-any.whl",
              "sha256": "3ebb78df84a805d7698245025b975d9d67053cd94c79245ba4b3eb694abe68bb",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__pyproject_hooks": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__pyproject_hooks",
              "url": "https://files.pythonhosted.org/packages/d5/ea/9ae603de7fbb3df820b23a70f6aff92bf8c7770043254ad8d2dc9d6bcba4/pyproject_hooks-1.0.0-py3-none-any.whl",
              "sha256": "283c11acd6b928d2f6a7c73fa0d01cb2bdc5f07c57a2eeb6e83d5e56b97976f8",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__pep517": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__pep517",
              "url": "https://files.pythonhosted.org/packages/ee/2f/ef63e64e9429111e73d3d6cbee80591672d16f2725e648ebc52096f3d323/pep517-0.13.0-py3-none-any.whl",
              "sha256": "4ba4446d80aed5b5eac6509ade100bff3e7943a8489de249654a5ae9b33ee35b",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__packaging": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__packaging",
              "url": "https://files.pythonhosted.org/packages/ab/c3/57f0601a2d4fe15de7a553c00adbc901425661bf048f2a22dfc500caf121/packaging-23.1-py3-none-any.whl",
              "sha256": "994793af429502c4ea2ebf6bf664629d07c1a9fe974af92966e4b8d2df7edc61",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__pip_tools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__pip_tools",
              "url": "https://files.pythonhosted.org/packages/e8/df/47e6267c6b5cdae867adbdd84b437393e6202ce4322de0a5e0b92960e1d6/pip_tools-7.3.0-py3-none-any.whl",
              "sha256": "8717693288720a8c6ebd07149c93ab0be1fced0b5191df9e9decd3263e20d85e",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__setuptools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__setuptools",
              "url": "https://files.pythonhosted.org/packages/4f/ab/0bcfebdfc3bfa8554b2b2c97a555569c4c1ebc74ea288741ea8326c51906/setuptools-68.1.2-py3-none-any.whl",
              "sha256": "3d8083eed2d13afc9426f227b24fd1659489ec107c0e86cec2ffdde5c92e790b",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__zipp": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__zipp",
              "url": "https://files.pythonhosted.org/packages/8c/08/d3006317aefe25ea79d3b76c9650afabaf6d63d1c8443b236e7405447503/zipp-3.16.2-py3-none-any.whl",
              "sha256": "679e51dd4403591b2d6838a48de3d283f3d188412a9782faadf845f298736ba0",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__colorama": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__colorama",
              "url": "https://files.pythonhosted.org/packages/d1/d6/3965ed04c63042e047cb6a3e6ed1a63a35087b6a609aa3a15ed8ac56c221/colorama-0.4.6-py2.py3-none-any.whl",
              "sha256": "4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__build": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__build",
              "url": "https://files.pythonhosted.org/packages/58/91/17b00d5fac63d3dca605f1b8269ba3c65e98059e1fd99d00283e42a454f0/build-0.10.0-py3-none-any.whl",
              "sha256": "af266720050a66c893a6096a2f410989eeac74ff9a68ba194b3f6473e8e26171",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "rules_python_internal": {
            "bzlFile": "@@rules_python~0.27.1//python/private:internal_config_repo.bzl",
            "ruleClassName": "internal_config_repo",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~rules_python_internal"
            }
          },
          "pypi__pip": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__pip",
              "url": "https://files.pythonhosted.org/packages/50/c2/e06851e8cc28dcad7c155f4753da8833ac06a5c704c109313b8d5a62968a/pip-23.2.1-py3-none-any.whl",
              "sha256": "7ccf472345f20d35bdc9d1841ff5f313260c2c33fe417f48c30ac46cccabf5be",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__installer": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__installer",
              "url": "https://files.pythonhosted.org/packages/e5/ca/1172b6638d52f2d6caa2dd262ec4c811ba59eee96d54a7701930726bce18/installer-0.7.0-py3-none-any.whl",
              "sha256": "05d1933f0a5ba7d8d6296bb6d5018e7c94fa473ceb10cf198a92ccea19c27b53",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__more_itertools": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__more_itertools",
              "url": "https://files.pythonhosted.org/packages/5a/cb/6dce742ea14e47d6f565589e859ad225f2a5de576d7696e0623b784e226b/more_itertools-10.1.0-py3-none-any.whl",
              "sha256": "64e0735fcfdc6f3464ea133afe8ea4483b1c5fe3a3d69852e6503b43a0b222e6",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          },
          "pypi__tomli": {
            "bzlFile": "@@bazel_tools//tools/build_defs/repo:http.bzl",
            "ruleClassName": "http_archive",
            "attributes": {
              "name": "rules_python~0.27.1~internal_deps~pypi__tomli",
              "url": "https://files.pythonhosted.org/packages/97/75/10a9ebee3fd790d20926a90a2547f0bf78f371b2f13aa822c759680ca7b9/tomli-2.0.1-py3-none-any.whl",
              "sha256": "939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc",
              "type": "zip",
              "build_file_content": "package(default_visibility = [\"//visibility:public\"])\n\nload(\"@rules_python//python:defs.bzl\", \"py_library\")\n\npy_library(\n    name = \"lib\",\n    srcs = glob([\"**/*.py\"]),\n    data = glob([\"**/*\"], exclude=[\n        # These entries include those put into user-installed dependencies by\n        # data_exclude in /python/pip_install/tools/bazel.py\n        # to avoid non-determinism following pip install's behavior.\n        \"**/*.py\",\n        \"**/*.pyc\",\n        \"**/*.pyc.*\",  # During pyc creation, temp files named *.pyc.NNN are created\n        \"**/* *\",\n        \"**/*.dist-info/RECORD\",\n        \"BUILD\",\n        \"WORKSPACE\",\n    ]),\n    # This makes this directory a top-level in the python import\n    # search path for anything that depends on this.\n    imports = [\".\"],\n)\n"
            }
          }
        },
        "recordedRepoMappingEntries": [
          [
            "rules_python~0.27.1",
            "bazel_tools",
            "bazel_tools"
          ]
        ]
      }
    }
  }
}
